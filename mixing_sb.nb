(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    144656,       2951]
NotebookOptionsPosition[    142272,       2874]
NotebookOutlinePosition[    142632,       2890]
CellTagsIndexPosition[    142589,       2887]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{"Mixing", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"one", " ", "scat"}], ",", " ", 
     RowBox[{"one", " ", "bound"}]}], ")"}]}], "Title"]], "Input",
 CellChangeTimes->{{3.680865499578436*^9, 3.6808655011509447`*^9}, {
  3.681624053578092*^9, 3.681624058993946*^9}}],

Cell[CellGroupData[{

Cell["DEFINE PARAMTERS", "Section",
 CellChangeTimes->{{3.680865514566743*^9, 3.680865520663179*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["m", "N"], "=", "940"}], ";", 
  RowBox[{"\[HBar]c", "=", "197.327"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"V0", "=", "43"}], ";", 
  RowBox[{"R", "=", "2.55"}], ";", 
  RowBox[{"a", "=", "0.5"}], ";", 
  RowBox[{"\[Mu]", "=", 
   RowBox[{
    FractionBox["8", "9"], " ", 
    SubscriptBox["m", "N"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"E2", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rmax", "=", "10."}], ";", 
  RowBox[{"dr", "=", "0.01"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rlist", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"dr", ",", "rmax", ",", "dr"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"len", "=", 
   RowBox[{"Length", "[", "rlist", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vwoods", "[", "r_", "]"}], ":=", 
   FractionBox[
    RowBox[{"-", "V0"}], 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"r", "-", "R"}], "a"], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vcent", "[", 
    RowBox[{"r_", ",", "l_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"l", 
     RowBox[{"(", 
      RowBox[{"l", "+", "1"}], ")"}], 
     SuperscriptBox["\[HBar]c", "2"]}], 
    RowBox[{"2", "\[Mu]", " ", 
     SuperscriptBox["r", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V00", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Vwoods", "[", "r", "]"}], "+", 
    RowBox[{"Vcent", "[", 
     RowBox[{"r", ",", "0"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V22", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Vwoods", "[", "r", "]"}], "+", 
    RowBox[{"Vcent", "[", 
     RowBox[{"r", ",", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V00mat", ":=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"V00", "[", "rlist", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V22mat", ":=", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"V22", "[", "rlist", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "MIXING", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"V02mat", "=", 
    RowBox[{"V20mat", "=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"Vwoods", "[", "rlist", "]"}], "]"}]}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"INITIAL", " ", "HAMILTONIAN"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"one", "[", 
    RowBox[{"n_", ",", "d_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{
     RowBox[{"1", "+", 
      RowBox[{"0", 
       RowBox[{"Range", "[", 
        RowBox[{"n", "-", 
         RowBox[{"Abs", "[", "d", "]"}]}], "]"}]}]}], ",", "d"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H000", ":=", 
   RowBox[{"V00mat", "+", 
    RowBox[{
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox["\[HBar]c", "2"]}], 
      RowBox[{"2", " ", "\[Mu]"}]], " ", 
     FractionBox["1", 
      SuperscriptBox["dr", "2"]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"one", "[", 
        RowBox[{"len", ",", 
         RowBox[{"-", "1"}]}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"one", "[", 
         RowBox[{"len", ",", "0"}], "]"}]}], "+", 
       RowBox[{"one", "[", 
        RowBox[{"len", ",", "1"}], "]"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H022", ":=", 
   RowBox[{"V22mat", "+", 
    RowBox[{
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox["\[HBar]c", "2"]}], 
      RowBox[{"2", " ", "\[Mu]"}]], " ", 
     FractionBox["1", 
      SuperscriptBox["dr", "2"]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"one", "[", 
        RowBox[{"len", ",", 
         RowBox[{"-", "1"}]}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"one", "[", 
         RowBox[{"len", ",", "0"}], "]"}]}], "+", 
       RowBox[{"one", "[", 
        RowBox[{"len", ",", "1"}], "]"}]}], ")"}]}], "+", "E2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H0", ":=", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"H000", ",", "V02mat"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"V20mat", ",", "H022"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"V00", "[", "rlist", "]"}], ",", 
     RowBox[{"V22", "[", "rlist", "]"}]}], "}"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"dr", ",", "rmax"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "V0"}], ",", "V0"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.680865572851472*^9, 3.680865584456111*^9}, 
   3.6808659985044823`*^9, {3.680866385990489*^9, 3.68086649200599*^9}, {
   3.680866607287784*^9, 3.680866670067314*^9}, 3.680866706281349*^9, {
   3.680866746289213*^9, 3.6808668181468687`*^9}, {3.6808674646928387`*^9, 
   3.680867464771639*^9}, {3.68086759659118*^9, 3.680867605426921*^9}, {
   3.680867681023897*^9, 3.680867688559404*^9}, {3.680942063291539*^9, 
   3.680942086203082*^9}, {3.6810199119908237`*^9, 3.6810199289669027`*^9}, {
   3.6810200290824347`*^9, 3.6810200322411346`*^9}, 3.681023218299921*^9, {
   3.681119080319104*^9, 3.6811190898066387`*^9}, {3.681124483057832*^9, 
   3.681124483161131*^9}, {3.681189772799046*^9, 3.68118978801467*^9}, {
   3.681190069450693*^9, 3.6811900702982807`*^9}, {3.681190218924685*^9, 
   3.681190219556695*^9}, {3.681190280826458*^9, 3.6811903111586657`*^9}, {
   3.6811906343968487`*^9, 3.681190685668676*^9}, {3.68119103605015*^9, 
   3.681191036848613*^9}, {3.6811910672434683`*^9, 3.681191111419383*^9}, {
   3.681192714828454*^9, 3.6811927153233147`*^9}, {3.6812031204533978`*^9, 
   3.681203120548655*^9}, {3.6812053756331987`*^9, 3.681205392195472*^9}, {
   3.6815495565473633`*^9, 3.681549566657702*^9}, 3.681627993228239*^9, {
   3.681631147382188*^9, 3.681631148626247*^9}, 3.681633498626193*^9, {
   3.681639430393763*^9, 3.681639446992292*^9}, {3.681706452598386*^9, 
   3.681706452709487*^9}, 3.6817064845202436`*^9, {3.68170699602262*^9, 
   3.681706996236148*^9}, {3.681728351542992*^9, 3.6817283697442408`*^9}, {
   3.6817369775928087`*^9, 3.681736988196733*^9}, {3.681741403573473*^9, 
   3.681741424173361*^9}, {3.681788384302547*^9, 3.6817883846703663`*^9}, {
   3.6818053516185837`*^9, 3.6818053520087423`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw12nk8VN8bB/Cx78wwmLGMWSIiW/bKfTBT/SqypEWbtKcklUoLFe2lRSpp
Q8lSUdqImUikjVSUKGvZsi8hfr7uY/7pNTXunHPez+c5595w/LZ4rhGnUCi/
JSiU//7cQ783szoknDCW9jEZWCYQke+jiMIZHO85o++fsiKaPZ5eI1YddxC7
vHT83xOIhgC6Xu0SgSjm8n+vJMLuYEGs0ej7Z2Ofv0doPKav3+QjEI2+Gf2b
dOLXu1UBKYvHfz6DcH/1IrZhkUAkXxYfOF3+CSG0+fFDd/T92OUuPyOSU5Un
eCwUiIyWRub2GD4nzlBcvMMWjI8nh8hJUFqR4i0QJYz+dFm8iIhrjTX5OF8g
ahn7vhfED6/MO91eApHVlP9eeUTl/cJsVa/x739JSG3J9TbxFIjyegxHvyGf
2JVr6+PkIRApjI2ngHArmJvh4S4QeY59YSGx+M6TucvmCURXxsb3mvB7lqOw
2k0gqgn574JFRM0Jm69rXAWiSWPjfUsY/QuN9ZsrEG39b3iB7whpx8PTfOaM
r897or70+fW5swUiytirmFh4XjfV/n/j8ykmjKIMZnJmCUSzqv/7ghKiiVXu
LTFzfH4lxND5B89/CASiM7n/TeAjYTM3Y8Vj/vh8SwnZbQu5R1wEorHplJUS
Pt8if3k4j8//EzFYUHhWw0kg0vtvOKzPRMXzGvHPhEA0drncz8SItYXOKUeB
aN3a/15fiHXrduU4Th9fnzIiv73pdeNUgei/q9HvlRGuJyeyTjuMr1c5ceeJ
TYyxvUDU99/lesoJqYVHdXJtx+vlK3HVs+Ogh41A5DhWAN+I66ZJyV+tBKKx
6VZ/Ix5cnRnoM0UgOjxWQBWEi3Lu/VKL8fX9Tty13MAXmAtE797+9/pOhIQ3
yN43HV/vSqIl176MOlkgUh8bYBXRuenx0Y3G4+tfRRTaiPVmGQlEY5db+oMI
36PUJ2k47vGTyErWWiUwGJ/PT+LUg3TqvgnjPj+JpWvjPqdwBaLesfn9JPxr
KEdK2ONe1URRC/dvK2t8vtXEa6+rIxTdcb9qwme202Z57fH51xBPcpl0eaZA
NDacyBribsH6/BGN8fqqIYY+JXg008d9awl9s+Cjb1UFojG+iFrCcGqGXTx1
3LuWSPziZ75FeTw/dURd2v1p5orj/nUE71abUYPc+PrVEb0asXlnZMbroZ5Q
8XD/ZCYlEI1NN7CeYP16pZ8nPp6XesJPuyxsNmV8fRuImFlBd/P/8UVj5bK2
gehyvxlkNcjH9W4gnqoejI7u52PefxHBtfyq5h4+rv8vwlt1krJVF190f6ye
fhFHg0IbA9r56PGbOP/nqmVsKx89fhOz9X8lZzXxRbfGBvib2E/LU333i48e
vwmb7KtGxXV89GgkDonV331Zzcf+0khUeEkvS67io0cjwYzb1BVWwUePJsLJ
cb/JrHI+ejQRshUxuSOf+OjRRITGMLcklvDRo5loMZvZ5Piejx7NhKnG6ub8
Ir6ofMyjmWitiDOcVsBHjxZi8LDBwpt5fPRoIVyoYsY9Qj56tBBpfy0W2j7n
o0crcX0k4dS6p3ys71bC7Zd5aEQGHz1aiTb/6IozaXz0+EO0zwn1OJbKx/z+
IUx37TsdcIeP/fMPUbNWnoCEcY824s+Jw8rD1/miZWMTbiNW99slJl7hY77b
CG/evAfTLo57tBPRld/Lnp8bn087cTvoe87E0+M+7URav6nSvmPj82snHpTE
rnsezsf8tBNyvl+21oeOz7edCG7f/r4vZNyvnWipGGR17RiffwfhV/tVoixw
3LOD0CjcqBPvP74eHUQE96/0wrV8zFsHcSVE5NvpO74+HcSt+Lb87Uv4uB91
ED7LU0oqvcfXq5PId6GxJruP+3cS4YMOfL/Z4/XcSbBETt/38vnYbzsJKSvn
fXsdx+u7k9A97pvta8fH/tVJbJV8Z2Fkycd+2UW0vykM+GzMF42Vy5Quoo+X
IrNGf7z+u4jzQw2ny1jj9dNFzGigRpswxte/i7DZWH93FY2P+e4isl/PW7tX
ftyjm9A33OoWLMHH/thNXObc6XYfckGPboL18VKDQo8LenQTJ+ZZp99udUGP
bsLv8quf7AYX9Ogmtoj1UkKqXNCjm5ChlsWmf3ERjU2X1UMUNHQ4Frx3EY0N
b2YPcW6C29bMVy7o0UNcdN2ffTzHBT16CF5mSqrtYxf06CFKlOMLRHddMH89
RCZUR+vfchGNDY/eSxga3oxbE+siGrvc9N7RWm0MCjvvgvXcSzR6xEbuOO6C
Hr2EoDw8jH/ABT16iTdv179r2emCHr2ElAVjeHOAC9Z7H/HtxP6YgtUu6NFH
MG9kTPrr44L130cUv1C1Ffdwwf2nj6h54zKrZoYLevQRqk8W/bo0zQU9+oiw
0u9X9S1d0KOfOHyrqefIRBfMRz+xca1TiFBn3KOf2Gy05PEbmoto79iE+wmn
W4dsUqXHPfqJNzfbjvgOOqNHP1Eq99nud5szevQTzdcPlTvXOWM+/hLnvPf3
bSl3xnz8Jea5XJi45a0z9u+/BBcoQ4TIGfvfX2KuRohczUNn9PhLTPRa2jA/
0Rk9/hJL7mdNuhTjjPkYIJYoRgSmnHJGjwHiicQVr9NhzpiPAWK5ZPdW2OaM
/XKAOP73qf+LNc7oMUBEBa+upS5yxv45QFzwq9lnOtsZ8zFIqLLSapjTnNFj
kHih8y/r42RnzMcg8bTlzeNFes6Yj0FCOkHtUArVGfeLQYJ3t7q0SMwZ++0g
Yda0Z8XjTif0GCKCDA792FzrhB5DhNw7dVpHqRN6DBF2FZ0ZxEsnzMcQYSF5
NXJxhhN6DBHfB/dtcExwEo1xvB0iFlfKqfw574QeQ8SjmzXu6w85occ/Ij5m
UOJukBN6/COi6p6LPV/phPn4R6jkGRhecHfCfPwjEr52L7YjnPD89Y9YN+XF
/luTndDjH+EjP/HQd20n9Bgmyoj6RZVyTtivhokdwZS+xD7AfAwTt7PrFk+r
B/QYJopyDh+K+QjY/4cJzpLwPblCwHwME6+S+PMyUgE9RghPvqZq4GXA/W2E
+F7sWdkTAegxQmx6ElQsCAL0GCFoHVNovssB8zFCbK9Ke8OfDZiPEeKu2l7L
bmtADwooymTuD+AA5p0Cx8/Ytz9UBNHYchpS4KubxpVjbQTWGwUolyYXOucT
6EUBU42V1KgYAuuPAvdUF07av4VAPwpYyJV9E+MTOH8KrN/W2K3HIERjw4mn
AEztXvy12RHXgwID6aV/TYWO6EuB0Oa2j5xzjrg+FOhZ5tb5YLUjeo9+f+L1
bbU2jthPxGCGz/8OZMg6Yn8Ug4Rn/vMnfpuO9SwGO5xrraanTMd+KQY97YLd
fXum43qKQbf+98ML507HvIrBHMaFkuU603F9xSAip7dCuWUa5lcMQvXkbDdk
TcP1FgPrgWkHtxyfhvUjBsynrv68xdNEX8YmLAYXr7HuHZ44Dfc/MeiwPU+/
0jMVPcRBodUv2C9vKnqIg9e7X0+rzkzFvIhDyqHf72nLp6KHOBSGLHv6b9JU
0djlPMRht7XFwYQ+B/QQhzc1gwLZlw7oIQ5GdplGxmcc0EMcDK6HrlBZ6oD5
EgfhK57+k4kO6CEO51Oa8yZ02aOHOJSYmJ7xybFHD3FImNH92+eYPXqIg6Hy
BVvD+fboIQG9J13bXrLs0UMC/l79dHJKox16SIBRW9OF4Id26CEB7Hm/Lp3Z
Z4ceEuC3hTAJn2mHHhLgNlPpjxfNDj0kYK/g7CHxClv0kIDB0PRL5xJs0UMC
stSDf0gH2KKHBBT1HFTxs7XFPEiAv3Nk/W2KLXpIQMDRb9zy1zaikbGXBLAk
b5zsP2eDeZeEyWZHm+WX2qCHJNwsZSio6tughyREVfOeUf9YYz4k4b7AOl/u
iTV6SMIYc5g1ekjCvMwih95Z1ughCZtZ32e00awxH5KwwuRXd+s3K/SQhM/F
O+k98VboIQk1gyu2yWy2Qg9JOLtTv3KijZWI3N4l4UJ2oNbikSkiubEJS4G1
/L72q4VTsD9KAb/pGPvv2SkiyzEPKZAKc1u3eckU7JdSEJ4ZsPffhCnoIQVp
TztpqX8ssX9KwbUzotI9Ty3RQwp+pjHWbTloiR5SUEZV33hsriV6SIGMn/G2
txqW6CEF8tseUKdWW6CHFJR3bCwsS7FADylY+kxB81awBXpIgXlpyZZbThaY
D2nYNJ8+rULRAvuVNDjZf/82q9wc+7E0VPiG3WiPN0cPaSgtEHz5tMUcPaTB
Wlcys2+qOXpIQ3jR+31LZM3RQxoC5AWRkslmmA9pSO439fvuYoYe0uCzxvy0
c5UpekhDs76D2tTdpughDewzX7+8ppuihzSU5ObGd6ZNxnzIwPvI1UbPXCdj
PmQgSuHwILvZBD1kQOJF69nJx0zQQwZ6D6rOqploIloyNkAZ8P/wealzgTF6
yAAzY2an+zpj9JABTdZ2JZqsMXrIgNYe++iIpEnoIQPPThouTJ8zCT1kYPuc
zf+i/xihhwwkpIsY9ueM0EMG1PmrtGNsjLBfyQLFiO3zvMIQPWRBMXaRYtwB
Q/SQhbBjmnNdDQ0xH7JgwZysIfowEfuVLFxt9Zg9tHMi7peykPDNI0WCMxE9
Rt+XTv9RVmSAHrLw70PClpAdBughC3P9Sl+3sA3QQxbKs5mE+Tt9PK/Jwvta
TakZIfroIQtz0lVszAz10UMWzA5PK2n5MgE95CBzqnlW6OEJ6CEHHlzrnN82
E7BfycGp5xnHDX/zsF/JweM/cU+IGB56yMGvRa25pq489JCD3ef/0HopPFH4
2ALKwRfJ+o4Lj7h43pCD1XKbLyn7c9FDDgwMhnm+HC56yEEcxT/2eDkHPeTg
wpdVXafOcNBj9OctByU3/o+DHvKw6bLJJZYEBz3kIbdr9YqUbDZ6yEPqZsW/
KrvZ6CEPWy/Q2udYs9FDHuZ1Nu3KrtPDfMiDlXr6kUhfPdHY8oXIA4NDzVCs
YuF5Xx62VWkemrKMhR7yMNVgwyLxKl30kIe0ix47d/rqooc87HjbIHG2Tgc9
5OH4Pbak60Yd3D/koSm60zepQxs9FODtD79f8SHa6KEA02Nu/M9BShs9FKCL
qcneeFYLPRQgQCW0yVxPC/uVAng0t1BP3mPi/qEAi+d8r9tFMNFDAe5OsYvr
LmGghwLIVa4IHFrDQA8FIGomrjo1qInncwWYcLVsT8I5TfRQAIMIbrKjsSZ6
KEDhWt13i/I10EMRYl3NMtp8NdBDEZqH/+lRhtVx/1CEg/XeeYdj1dFDEbZ4
KfHDpqmjhyLcpNRObayko4cirExfaJ8TRkcPRUjoOCganEDHfCjC3881c64V
qeH+oQgXMgxc47aqiZ6MLaAi3H/bPVlSSw09FKG4NNldlKeKHoowuIpJKw1Q
RQ9F2DHTId9OWxU9lKD5RnV2ayEN9w8lCO3YMPPPThp6KIHliE+yjSENPZTA
5KaCSd5XKnooQdlOR5UzJ6nooQSJl59FXQYq9isliN/zoO9Jswr2KyUIrHaQ
TlykIro7dkElGMpaU9JfoIweShCyr/XzLXtl9FACv+7ms7fvKuF5XQk6VD9E
dPGU0EMZPizjW0fEKqKHMlw00Dacr6mIHspQ9Vi3eVGUAnoow8Hz1dSTagq4
fyjDqZHTlg1R8uihDHqN19tXMOTRQxlqN0R3dVyVQw9lcJVJaYnSl0MPZaBX
BUU73ZfFfCjD6oZ9j9odZHH/UIbkfa2MK4Uyop9jF1QG09USV+wXyaCHMlxZ
msTJb5RGDxWIu9JxzWafNHqoQJHNGdoRVWn0UIGzIteI+0lS6KEC0k7b1JKc
pdBDBZqemtVuqpREDxWwXN5n1L1bEj1U4L7wu7EdQxI9VIAzXDvV8qkE5kMF
Mma6P69YLIH9SgXS85pZpv/E8byrAgu1Ztdz48TRQwWS8qVuPpwljh5UcF7Q
3/W1XQznQ4Wsss1nImPE0IcKUfu97N8LxDD/VPj4emVuZCcFvagwy8mZ+v4G
BedLhWv9aYxD7hTc/6kQNHK55o4YBfdPKqS9XqO4bf2IkPSkQlcj22d58bCQ
XA8q6KdsnSA7dVhI+lLBzXW15Jo7/4RkP6dC8AXtxxsY/4Tk/kSFk10/GQon
hoTkelFh8UFTM0fKkJD0p0I07yGrf+egkFw/KggG3M1NOweEZL+kgvxBjeLP
AQNCcj2p0HbA8lRd618hWR9U4GnUMt23/BWS60sFK0XfOcpd/UKyXkZ/vkjE
VN/dLyTrnwpxfZXXfcT6hWSeqXCKbab9+USfkFx/KvgfTGgOYfQJyXqigovD
vvPOib1C0oMGQeJaT7h2vULSgwY6aW91VN/0CEkPGkheT0iV8e0RkvVGgypb
u8CB3m4h6UGDZ8/9z1VHdgtJDxpcD7dekTGpW0jmiQaRH1a4bCzoEpL1SAPT
xbPeDqzpQg8aOBVfTVwm3YUeNEheoB1//E4netDg1GTn1N1zO9GDBk33aMXc
zg70oEHgo2yH/Zc70IMGHmdX2YY7d6AHDZrvZJtNbm1HDxpcqv6csvVyO3rQ
4EHLY4/ZM9vRgwYzJtoXrWhtQw8aeNrNOG0zrw09aKD4vLlZPuMPetBgu/MA
44P2H/SggfcTjfAdh1vRgwY1r9Q+tXe1oAcN9BfM/jVldQt60KDFuuOjRVkz
eqjCI5vtNZVzm9FDFapFRdHG+U3ooQrZ9Pe3lKEJPVTB3zPyb0h2I3qowqEN
d++vnt6IHqrwWCmFIRL+Rg9V2PWO/+QA/zd6qILNmgLi2ptf6KEKihvWXpT3
/oUeqpC09Hxp1s8GIXleUwU3D2/7xIAG9FCFYdbNabnD9eihCuJuD0LFz9aj
hypE5a3+uEy/Hj1UoZcfaVGUVSck919ViKle/mr6/Dr0UIX6+Q/r7/2pRQ9V
YG/Zq0I/UYseqjD3POPPKqNa9FAFs0UZ3hde1wjJ/U0VIheluFz3r0EPVXjp
2FS5S6UGPVSBpuEZxHxUjR6qcLNFJ3jX0moheT5UhZH3LhGnpKrRQw3sDBpW
uqf9RA81UAl70PV06U/0UAP/1+4zhfI/0UMNJovHaj/Z/gM91KD8o6qdYlkV
eqhB254ZnwKmVaGHGmyo/6pfnFCJHmpwX+zxbQ61Ej3UwOBEu5r3/u/ooQan
mh9tWtpWgflQgxPzbTqMVlUIyX6uBqlK0Zy0r9/QQw3eDv18Xu35DT3UIN9f
TJT+/it6qIGsSuZqNdev6KEGD93i2QPvytFDDU6XGics9ihHDzVQWxz7Vb+s
DD3UoD2PVee5ogw91MBnXyHrc+MX9FCDi7Q72jeDv6CHGjyifolLkfqCHmqQ
YHosvTH6s5A8T6kB9+bk3e6TPqOHGhQ+CV3+WfgJPeiwLiWpf/PCT0LyeRkd
bG6splI7SoXk/TodrpTpXE8/WYoedJihyHw/a1IpetBhR3dCz5vXH9GDDtvq
HGMt/D8Kyf2DDmUnC3cEKn8UkvsHHZjvM/1CH5agBx10Ypdu8fYpQQ86fGka
+tgoXoIedDhwzaxtyt1izAcduLuU5hkvLkYPOij1B98ukC5GDzp0LcuIE9v0
AT3oMPdP762r795jv6JDofbBZC/L9+hBhyOKEu70mHfoQYep2slhxZLv0IMO
L7s+btkd9BY96ADWDy5Rat9gv6JD+1HZ7IUL3qDH6Pz0KmoD3xahBx2kDlgs
chQUoQcd1iSVJz4QvUYPOkzyNI4TOb4WkvfndHBf/2PBEmEheqhDUlQ5Pdi5
ED3UYX3RyHrJwgIhuZ+rQ0CRnu7AvAIheX+iDpdPvLKZ8+2VkLz/VQf5nca9
zWtfoYc6cDZofS7uyUcPdaCvrY34czgfPdRhb6dbp71WPnqow7/haIc7919i
v1KHqwtXZ5jOfIke6uB4uLgx92ceeqjDZsamSz5789BDHQzt/pfWzMxDD3VY
c1Tea9OzXMyHOgxb9X786JOLHupw2kDpgfrwC/RQh9zZBjeN41+ghzpMrlYK
VZj9Aj3U4Vv2nYWpnSLMhzrUbtVeJXVVhB7qMG1Oj6Ty/0TooQ4+djnRe1qF
6KEO13Zd+c6YK0QPdXBbF3i19m4O5kMDgiTim9+o5mC/0oDJtScMc0OysV9p
wOxvfeJP6p+jhwb0HEjbccXrOXpoAPewwivfl1lC8vmzBtBjww7222ahhwaE
ysw4MP9eJnpoAP9cV9XaiZnooQGnvxv/48Q/Qw8NaGicc2AX5xl6aMDfErbX
srin6KEBG0Lir+TpP0UPDdgHmXnXUp6ghwbk76Jsq5nyBD004FDq+dMHcx6j
hwbE7mmw3TbnMXqMfl7+8ps73x6hhwasaFjwU3PTI/TQAG+nTMGjkQz00ADh
biuJ4AsZ6KEBrm8GF8ybnIEeGrCKOZxhU/AQPTTg/rPyfM6qh+ihAf1Gn9dI
iz1EDw14GtMU/+3GA/TQhBX2L0VRzg/QQxNOT3g72bghHT00gdXrcDLqRDp6
aELuO+PUAst09NCEkMKME1kVaeihCTOKJRasO5yGHppgkB7ql2uZhh6aMJzz
bd3RF/eF5P2kJizPtGwrZN8Xks8rNIE5X17O5tA99NCEjiUWj4S/76KHJsSq
3XdZ4HEXPTTBao+VV9PzVPTQhEkToj9sMk5FD00Q2+Da/j42BT00QfYXxVac
loIemrCTQQ/oP5KMHpoQ+md6YrxYMnpows3/GTj07ktCD024bSGfVzN0Bz00
IT11LWfp/jvoMTp/zeRgb/E76KEJHyubJ+QeTUQPTRgKSX53gZaI5ytN8ImN
dH8Zexs9GAAeDkVOk26jBwM2GaicF8+8hR4MiFJTdhyccws9GLCTde8i+2cC
7h8M0Lqck7AuOAH3DwYU/nC9ma+cgPs5A1L3XRgxS4rH/ZwB1642r40VxKMH
Azbee/aAUhcnJP+/kwFszq4Oz/A49GDAb6P7q44ZxKEHA55sHAqJKbqJHgz4
Gqj7dW/gTfRgQFrrsNtExk0h+XyGAZFRxRVnXtxADwb8OaybmrbpBnowYLl9
I2M/8wZ6MOBy8E3X6sjr6MGAlsu+8pT2a0LyfpsBlUtjtGZ5XUMPBrw0kDmU
9OwqejDg2LyOS3TeVfRgQDj3JiUkMhY9GLDnUXFK0fAV9Bid36aJ5X2BV9CD
CQWy2Upd9THowYR79ATde8ti0IMJFpf2sLXLL6MHE/bVyuww8b6MHkwwW/Ax
59OnS+jBhMh/H+qkF15CDya8alSmPq64iB5MSGRsTP7sdxE9mGDzxWXZ4pZo
9GDCh6AZVOtd0ejBhCxz499LpaPRgwmas48I8qMvCMn7fyakdVzL8zO6ICSf
LzGhzNzRdlJOFHowgX/44l2qdxR6MEHWyNBf4c959GDCjk83m1SOnUcPJsiJ
fatQMziPHkwIDczhKuWfQw8mWHW6felYcw49mBAwI5Z4KnsOPZiwQOZt+YK7
Z9FjdL32c+a+9DqLHkywm6ewrW/wDHowIazS2vvXrTPooQUuPnETT3icQQ8t
CM8Kv5jxLxI9tEC12+zqpSWR6KEFFcsyPqQ/P40eWrB//tTONvZp9NCCgr0S
Wi5HT6GHFszpzU290nkSPbRgWSJtRdOKk7h/aMHfPRWW7OITuH9ogd2WbztM
XU7g+UoLquwZIulnx/G8qwXSoTs7YyyOo4cWBHjyrStTjwnJ3x8YHW/Xm17h
pGPooQXmFwcbrVOOoocWfNKXlrI0PYoeWkB5Tg1LfHgEPbSg/lt96bGpR4Tk
/6drwW/W/adv8w+jhxbwlz+asNrzMHpowTGViXP41RHooQUt5XUxK4Mi0EML
lIzmZ6dJReD9hxZ0ZtleMLgSjh5a8Kf11PSnluHooQ1aou2yS94eQg9tMN6q
tl9y/SH00IbEyGNLkqUO4XlXG45tqD3rfOsgemjD1xw1Qd6Mg+ihDXtjO4u4
TQfQQxvkZzglL4w8gB7a0EJ/eHmRzQH00IZpVoP7dX6Eocfo97F/bI45FoYe
2qD82TXxtXUYemiDGKPP3KUgFD20QXxEImOKQSh6aIMKW375/KP70UMbPoQ8
kb3Qug89tCH9cciPeu996KEN+V/rl9m+2CsknwdqQzSX6RZithc9tCGq0rrg
+o096KEN/YpfjS/T96CHNsx5ftVw0YkQ9NAGr6+3H7yXDEEPbXjrby7dFrYb
PbSBJmt4K2VkF3pow/aFb737wnahhw7sPO/FyZfchR46IFd8yVP2xE700IGk
rg/bM9R2oocO0KeCZ/a1YPTQAS1DqS4Nk2D00IGczM9XHmXtQA8deP655O0p
1x3ooQN197whqno7eujAzMmljdk7t6OHDrzWSO8eUdmOHjrwqN0sb17yNvTQ
gdod81vjZmxDDx0QO1JGtNUF4f6hA5d2aWdNigjC/VwHshMMzs2ZGIT3Hzow
VT/eaNabrULyeaYO3I2t1dDcuhU9dOBEdwvrPmMreuhAZV+4tUxuIHrowIV0
wV6NzYHooQNZwY+cPjED0UMHqPIFlMAzW4Tk76foQM001edB7QHoMbpemsu9
b3gFoIcOBH+/J/z9bDN66ML/ri0kpvE2o4cuhN9Yvv5E5Ca8/9AF95+NOgXD
/uihC4bnHp74GeiPHrogE3jY9HX9RvTQhUX3XxQGLduIHrpgvLtuzYeyDXi+
0oW2bPaikvkb0GP0etBj4/9pPXroAiX9fWXkgvXooQu9Wfc3WlasQw9daK38
MW2G3zrcz3Whqv5GV07zWvTQHb1fb9p0Zuda9NAFcXWzl/ek1qKHLuy8rueh
HL0GPXTBcX3o7XjDNULy93F0wTWk98yq7NXooQtNLS3qLvNXo4cuLN3rH2Tb
ugo9dOFlsZiWzdFVQvL5rS7ELnjwyEp/FXrogtXJWq7RSz/00IUVSQuC5Nb4
ocfo5yN4v97I+KEHC/LinvWsTV2JHiw479TgXOK5Ej1YsG/djzixQV/0YMFw
lhejLcEXPViQoB9aesbdFz1YwNQ56vd8cAV6sMB107ntVxevQA8WKEjb8TMy
l6MHC5x97p1sZy1HDxbcCL6yxPnwMvRgQeH67Sox7UvRgwWetbXev5ctRQ8W
eA3aTWK9X4IeLPj2qbLUxGkJerBgiuaXOqknPujBggKKwO6KmQ96sOBJ90B7
VfJi3D9YcGCJ/K48w8W4n7Mg+8GqPVOTFuF5lwXvb+9qsTdZhPfnLDBUaxhO
T1+IHqPr8WrCxIv2C9GDBRm/gVmZtwA9WGD642LBTvcF6MGCV+diVy754Y0e
epDeedNzb6A3euiB7sUU+CDhjR564LOar/C/y/PRQw/SVJYUVZnPRw89uLl+
wruIIi/00IN7syQuT1nrhR56IK4c/LtSwgs99IAbLpccEu+JHnog1PMYGeF7
ooceUIPqpq7+7YEeeqCdubLu6ikPPF+Njmf3jrvxVh7ooQe1nQ0hmyrd0UMP
Tu9JWt52xB099CDsUOdFnpU7euiB0oE7E8RezsP9Qw9ev3z2epA7Dz30oDRo
e5xBhBt66IH1tryIrU2u6KEHW4/sjn3r6YoeetA6/cEKw5y5QvL32/SArz31
4g6TueihB5NKJBfdujoHPfTAfnGseBJtDnroQe+bFKego7PRgw2W7w7KdonN
JucjxYaYtbfP6u7/H/qwocp4/bK6oVnk/FTYkHkw3Nxh/yzcX9ig01ygqio+
i5wvkw3ZvCzXFUdnoh8bqHIL/NVpM8n589jQL//MyjB2BnqyoZbZmnbCaAa5
HqZsUG5M4lk9E6AvG3at5SpqzBGQ/cOODT2zyngGP/h4v8mGuAtbli3ewSf7
iTMb3IajaxOU+OjPho+D1ZrDiS5kf5nLBtnDT8768F2wHtgQ6wa6aTXOZP9f
yIbjK5dkdh90xvpgQwD10hWWvjO5P69kwxcla/0Jr52wXtjgcG1Cy2CAE7ne
/mxoean+KFbDCeuHDRe8Dm77JwRy/XewQfXli1nq/oD1xAYij32oQhNIjzA2
vEkdsI88SWB9sSFX6sPOuBZH0uM4G+bmnVzxc54j1hsbTKgSdXaPp5MeUWy4
5Lvsf7F607H+2OCrcYQ3eGIa6XGNDQvnXZw/Y3Aq1iMbSh/wFbZsnkp63GHD
kObKF2trHLA+R9e3YqmDno8D6fGQDRxhyYHjn+yxn7PBdpJ6U4yHPZm/bDZM
Ty6Rdymxw/plA+94onCHlx15figYvd6KTwYG5bZYz6P1s6H6+swVtqRHCRu2
XVlU9O63De7HbIicFhaeut2G9PjOhn+NOk1l4jZ4XmLD3yZ7L/55a/L+qIEN
4vf6PBv0rbH+2ZDn6fv4QaYV6dHOhn0c50PXPKwwD2wI/ajSd61pCukxwIbu
w68ikiKmYD448H7h1/KH3CmYDw64LuO+f/jCEvPBgV9qX4Ov+1liPjjAlzit
sVnKEvPBgWcnjblqyRbkeZLJgeFXg45H3S0wHxyQdHvolNdvjvngQE5L2OSs
OHPMBweS5LhT1rmZYz44UL67b8W+PjPMx+jnOwJ9grzNyP5hx4FlSz5lxz42
xX7Igf64lTNatExJD2cOGG4uEvc4OBnPcxy4ZnXGM6vFBPPBgaepG+u0fUww
HxyY5fQ4Y1WRMeaDAylHmxTCpxtjPjiQFcbYF/BwEuZjdHwBgXV0k0l4v8qB
Q9M+rNmQaIT54MDcSV7+y/WNMB8ceJzRF99wyxDzwYGmcDvxHkNDzAcHEudk
Ze69NxHzwYHXKykuW20mYj5G3ytqub8SGWA+Rucv2Ph5i6sB5oMD836slfD7
ro/54IBR56oZZzfr4/meA0N+qwWdFH3MBwfiAtt/7o6egPngQBW300LXdALm
gwOaYRePlhTwMB8cMPF38D+5iof54MBiJbcLLmI87Oej/vc9eltucDEfHOA1
Fqbtd+ZiPjigLGXPbKvnYD44EHXM+JHVCQ6ehzhw6oW1wwxLDuaDAxmWUqe0
KtiYDw58rA8U3YlgYz44ILchkv7bgo354IDO77jm60I9zAcHxE2d+++z9DAf
HFj/TP5TWxgL88EBn6iohfMadDEfHBiY5XM3x00X88GB6GKmu2mmDuaDCxqZ
0+UiDXUwH1y4t9ytreSyNuaDC/JDG1f/VtLGfHAh7UQR/WW4FuaDCxnm/J4F
w0zMBxfe0H84nQ9hYj64QD2zYa//XwbmgwtJ2zX9P4YwMB9cWL90ombWsCbm
gwvc0tNvGBGamA8uCKfeVfuhpIn5GH3vKpUpdlkD88GF+3L/Xm030MB8cKFK
IiHU5LE67h9cOFEfulp3ljrmgwtdEivMp32nYz640NpmXrYviI754MLjqrrw
Mnk65mN0Pd67xjreUiP355VcqJmt+PiOkxrmgwt9afuuK/xUxXxwYUNl2uJl
YaqYDy6Y8XwZUVxVzAcXKoPa4fYrGuaDC8GXdmw4vomG+eBC2/ashbZ0GuZj
dDxa8ykJ2VTMBxcWZCRHFKynYj64UKGjbXtZnUqev6K48HCCDptzVAXzMer7
ZUrA7N/KmA8uGG+eN3B1jjLmgwvz19s/U3ighPkYHT+N2nFIWwnzMeozPcm2
74gi5mN0/NbDgQv6FDAfo+sTd/3duQ0KmI/R9Z5j8fpqlTzmgwuex1oNNyyQ
Jz0KuNAN5gMNxXKYDy6Yg9xZOTc5zAcX4ss/H857J4v54ILB+eqnMu6ymA8u
fC9Tmvn6kwyel7jwZV3YucElMpgPLhyKWDTtXL00Pp/iwoTkjRMObJUmz+ft
XDiYKL7++YgUPl8frQe1VF+7M1KYDy7k1VDiG7lSmA8ecGT3/3v5RBLzwYPH
8st3Ct0kMR88OLR697z3vyQwHzz4cMFksOGgBJ6HeaD7zkV/RE8C8zH67zIt
qYpCccwHD2acSUqQ8hXHfIx+PtvL46e4OOaDB27l6kbnE8UwHzxgqe34SHcT
w3zwIGrzEt7SXgrmgwceuyayfW9QMB88IMpFA5pzKZgPHlz+5cfr7RzJIfPB
A4s1h6vEPEZyyHzwIDaAf9b5wXAOmQ8eJA9JDyRqDOeQ+eCBedR1I+7+fzlk
PnjQefrWgZu/h3LI/YMHFUnfH2gsGMohz1c8eHsvPivo1WDOmIc/DxKp/g23
7QdzyPslHkh4TilMuD+QQ+aDB2uU1IjlhgM5ZD54EBHyMjA//m8OmQ8eSP7P
4fVbzt8cMh886E+Z+ndtXH8OmQ8eNG2V6Tms359DPg/iwRap4U69lL4cMh88
EEzx3Kg/pS+HzAcPhOdFtBPZvTlkPnjgEOxaxZ/dm0PmgwcuJnLiM7/25JD5
4AEt+ltTxMaeHDIfPGB8mOfU+687h8wHD7y+b/918nx3DpkPHqRNT+tzNO7O
IfPBg4f8W3li+V055P0zD0zUdEqLfLtIjwIenNNvq4kc7iQ93vKgfc5w7Yxr
naRHyahnn8FAPdFJepTxQE3otGdVbQfp8Z0Hd6X0/zw62kF6VI/O50aq3Cez
DtKjgQfKG189zChvJz2aeZCSdIgy71A76dHOg5tmZhYxZu2kRw8PCkyK12pn
tZEeAzw4xjwIzlptpAdlApw0KAy+tPdPzv8BMzhWCQ==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw12nVYFF0bBvBlqaW3g9zARAUs7LlVeJVPERMbExO7GwM7QAQbsbHAxAAl
FEVFAVtRAQNRbBF2yW9knt1/uOaaZXbn/M59nnNmj2bsjP4hfB6PN8mUx/v3
d6n2xLZB2WUM798rzA8Psv+9ypgTt6rWtF3uh/LGI7Zl/C1j6rYUCcs++MI1
vLTfFde/TJtqOX9RoC96FC2WJvT4y6xdJ3h+4np3zOps/fzwzL/MpYDrylDP
7tiz+9/rL3MA/MBjR7rh5t/6CzINwjz/Mi7d8JW9WnjpX+b16+UzNLu7gr0Y
e8VyJkheymut7Ir6y3UuZ9r92ZY+Zg8wccK/Vzkz8tHq6Gg3ICLj3wXLmaRd
PXrOD2Rwtf4LljNNX+48sCykC+q/XhF7XPRluNPKzqi/nHUFo0yeUtf0UCe0
qn9VMP09mg3akNURI7f9u2AFY/ZsyzhpWQes/Xe74RVMqL79qFPuHVD/9RIq
mISC9NgWw9qj/nLPK5jqnHtbV+xoh/p25OmZjC23joU99kGTf3fbWM+EttQG
yxQ+6P/vdvvpmYTx9lrtqLZYWn/DeubI3B29Np9qgyP/LndYz7Tu0k7eobo1
eeiZs3YVMeJ+rclDz0xyPH2h5kQruNV7GJi5Cx87frBohZ71N2xg+p891jFx
YkvUX26mgSmesbWLf7Y36jl2G5if1h9r9rX2Jg8DU5lqXhcd50UeBmbIjyNT
1UIvyOpvuJLZNShf3t/CkzwqmU6hGUs6/GmOeo4Jlcya8C8lT4ubob75tlUy
8cn5Q02KPMijkukbUvh8T1FTvKv3qGTmvoqZsbKkCWzqG7CKUQ7/0jD6b2Py
qGLiu03/kyRojPrmG1HF2FbIz2VpGqH+dsOrmMKuvVVn0BCJ9R5VzA5ev2s9
QhrgRb1HFePet/r70m3u5FHNfNiW9sw7VUce1cyue9UBvcu05FHN6H2ji8+3
0GJJvUc1E+aWW9h7uoY8qpk1ujnu/Atq1HNkVzNxNczc+QY38qhmfp5+sSEj
xpU8ahgsm6BP7uxCHjXM6KiOvXy+O1E+apg0Xrqrdbwj5aOGuTJlsMxmqgr1
zZdRw4St350t8lGSRw2jz61+VG6jII9aRlmcvT/qswxd6j1qGXXY8hUZOVLK
Ry1TcjcoNviGhDxqmZ59xpd2vyRG/e1eqWWQflsVeFFE+ahl1iu7x4xMFpJH
HTPTrXvtnh0OaF3vUcfknjrWrirdjjzqGPX25MQ9tTbkwb4/TDyt/f+sKR91
TITo8MFdRwSUD/b88Wa7FttZkgcPhW8l8YfWmFPeeUgLu9r4qZUZ6puzMQ9Z
tj1Dnu/jU3/j4az6b8SMzibkxUPYoEkL7j6rY7j+x/6/6dmtNb1rGM6PB2GL
btds31Qy3P2z7+8WemfDWj1T/3UO84CF1qUC/3KGaw8eeM6KRDf3MobzZc/3
Ni0ar/jNcO3Dw+hLT8Nman8ynDd7XKMYe3nDV4YbT0yg3rCgz8rqEoYbH01Q
2Laww7x9HxmuP7PHwSvX35/0juHGSxOEXV/+bGn6W4ZrTxOk8WcclFi+ZLi8
ssdMQOSzuMcM177s++MvXlvn+IDh8sseLzsz6Gr0TYZrbxPwuq7ZGTX6EsP1
H/a4b91D7w5RzLP6G2aPhVKrGvXR1PrLlbLHu5y2j8q4kspx8MGLfPJ7RnFG
KufBR1jkN7PCV1mpXF7Y88vzNSO6PkzlPNjzqRM6BG/NS62/XD/2+EeX018u
P07lPNj3L7uVkhz7NJXzYM/7N6308X2eynn8O+7rc+vEi1QuX3xg1LSYm7kv
UzkP9v8rj0fuvPYqlfNgj/mnTOIm5adyHuz/N/LTdnydn8p58JFWrY7OlL9O
5TxMwbt8ZOwe1etUzsMUaW8FBnFxfirnYQrEXmqybll+KudhirD75e4BRa9S
OQ/2vIdi7lXxq1TOgz3O+/PLVfIylfNgr1eszHj4/nkq58EeT1n0n3Lts1TO
g/38b48l/lVPUjkP9v+XPvtw2vdxKpcH9vxQ6eYt4/LIgz2el3Y35PzD1Lr6
F/t9+nZamxlwL5XLuxnriVvpezPJwwxhzbodfRObRh7s+Ze3DnheSErl8sEe
lzC6E+2Pkwd7zEPrvFevunAe7PHtLjtGMfGUD/b4lK6jNuUK5YM9zvVYuaQk
g/LBft6uj8eTTt+lfLDn77cvbjUwl/JhhrSkg9X7vj5muPLOnh/xwXFG7HPG
qv6GzZHW8/fL8En5DDc+moOXc7A21b+AaVnvwZ6/qctaEVfEcOOlOTArqmLH
sfeUD3MUlg78G5X0keHGT/b8weOlv3M+UT7Y4yq3R01+f6Z8mCMusvPC885f
KR/s8b7MbYLA75QPc6h7TMsf6PuT4TzYY9OPaRvH/2I4D3P8DPLLKF73m+E8
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
yMMZnQ4OfFbWwII8nOFxMWO+p9yCPJwRoPbuu9jCguqHMwK/fO3ztNyc6rkz
ikyDRuGT8fcjZ7wPLZiW/Nycnmc640d/h4n/ZZmThzN6ea7wKbpiTh7OmP0+
//6mE+bk4QyLJx+F/+0xJw9n9OfP+uOwyZw8nLHEPWT05yXmtD/FGY1Trvs+
CjUnD2dUemzccm+kOXk4Y9/9b40e9TEnDxdEVbqZfGbMycMFr71DLRy8zWn9
4QIfacsGvlpz8nDBhGUf/7deYk4eLuz60D4k38ycPFwQcNN/TOdyM/Jwgee3
Hs0TPpnR/MoFeX0eJjV/aUYeLpi+P6k0+Z4Zebigtc2Pq0NSzMjDBSaBix3M
EszIwwVep2a8un7AjOq5C2b9qRSsjTT+fueCK5EjNoxYbUYeLui38bN/13lm
5OECyQqb9q0nmpGHC+6eg1+boWa0H8cFF82dR/r2MiMPF4zi+c0Y09mMPFyw
5+6CKZs9zcjDBTeahnfO1JjR81sXdNnS/7mN1Iw8XDBP/7LhaAsz8mDv376p
U4belDxc4G894bD3v9/R61+uYK5kJiS8MSUPVyTMjW7WPteUPFyR4d7WNi/D
lDxc8d7LpfP8S6bk4QrN8icJjeNNycMV4omVfUv2mJKHK9ufu0oubTElD1dE
Rc36uDXMlDxcMSMi5PK8Oabk4YoTG+wWTZ5gSh6uCIqf5jhlqCl5uGLDoNhN
C3qbkocr0jyzUyIZU/Jgv1+dT+yVlqbk4Yq8M23VXxuYkocrNrX2btVMZUoe
rqiIPnJnoa0p1Q9XdH2oeZhXx6d67orHtwN8fP7wab7rCql/0Z/4Yj6tz12x
72d8WcNXfPJwRXeX8KbnHvDJwxXXPkxe2yOdTx6u+GI6yvD5Ip88XGHIWTF3
VzyfPNwgalRV0n8fnzzc8Gy0pKcqgk8ebojp4rq6dDWfPNzQNX/NprsL+OTh
Bpe9N/tfmMonDzd4OU25Fz/KuD/IDeFqpw8nBhh/r3aDbt3myKQefPJww0ev
dbceduSThxt4ZcXTf3vyycMNUzbsWaVx59P8yg1OSw7/Gq7kk4cbTMXyhIO2
fPJww+fuqpO/eXzycIPzweLnff6akIcbfnS91yTpswnVDze0uKjd3vitCXm4
4b+S0abHHpmQhxtCXAUzW9wxIQ83zHx85l56sgl5uKHgjMF89FkT2t/mhtlT
jkqtjpqQhxvyspZ+TtltQh5usF04csGSrSbk4QZLU59zvqtNyEONBynWG5UL
Tbj7MVfj1unSsvJQ4/4ANfIX134oGGPC3Z+DGjuHLwp4HGRC9UUNRfVhTV4v
ul+VGrXTng98CRPyU2OIZPmr0jZ0/zo1Jm+UHBN4mJCnGhN3u5/yVFN7tFCj
s2Pgm9EyE/JVo2VxV6991ibc+NFOjTXpKTuL6ni03lRD3CPC0vsvjxtPuqnx
6PH+ORu/8MhfjWWzn+d8K+Bx40tvNX7eZoTDn/KoP6hxw/C58aN7PG78H6xG
wmGD3YA0HvUPNbRXD114c4nH1ecxauyb18R+9ike9Rc1PHq8EwkP8rj2nqpG
4VXvC5djeNR/1OgwbnPxpM08rv3nqXHywfw43Soe9Sc1qsaFP/20gMd5hKmR
M2LE4kvTeNS/1HA9lrh68zge57FRjfO53YpDh/Kov6mRWFUSExTI4zx2qKFM
W7PR349H/U+Nsc6CJL+OPM4jVg370XPte3nzqD+q0VHxav3QRjzOI16NoPIh
jrNceNQ/1UjPdLsSKeFxHhfU2BwQOjjZikfjOeu3Sp6fX1fH1N/udbY/BZ0t
6P+1jvbXqJFxYfHx/Bd13H63O2rs2D7RZX5mHe1XUaORdm0z7fk6bn9Mnhp/
YvlpBbF1tB9HDZ5Hw5sJm+q4/T+v1bA6FqTZttC4v0WN0+Hy22EhdUz9+qiY
/bwzZvtX969juP6vxu2eryN3MnXcfqGfaoyKmxuR0qyO9u+x7VWetua3qo7b
f1Opht2I3GHtLeu4fdA8DZ5teVAbUVbL7S8y1yDybu0IQ1Et7ffToDY+c8zs
nFpuv46DBpmVsYaqlFraH6RB3l6tKOZkLVM/n1RpUNjXNBq7amn/kwYN4uxn
V4XXcvt7dBpYn2oWfXtOLcPlQwNPwejSg2Nquf1LLTQYsz9zzJbAWtpPqMGH
RTs+ru9cy+0HaqfB9bMu43d41HIenTVo1yr7XqKqlvPopsHiU+6W+Za1tP9Q
gwmDMy3k5TUMlw8NQt+HXB79oYb2K2lw2u+5RfKjGs5jsAYeu03fu6fX0H4s
DToavrWPTazhPMZoUDfivKFhbA3nMUED5ZxwYermGs5jqgZLl10MnbCkhvZv
abCx+dFq5yk1nMc8DYRhTxPeDTHu39Tg4u78WZd71NC+dPb7Hg5pvbdtDe33
0sDiePuPWxrUcB4bNXAPbTNnm7SG9k+x5wf1eXDAtIbz2KFBUsfIdzd+V3Me
uzUYGKg99LWomvOI1WDdr05VjfOqab8V+312tHozJ62a84jXYE/MDJ8HidW0
n0yDw+6zDK0PVHMeF9jzkhzxqa3VtD9LA9f0tnM8l1dTPjRY8Guqdca0asqH
BrqEnlljR1ZTPjQ47n59nyigmvPI1mBWeM6Ch52qKR8aVL7b67+7WTXlQwOB
aCB/tnM15UMDxRpm+xDbasqHBibeyZ97V1dRPjS4FNre0OdrFeWD9czuei74
dRXlQ4PVZrP4S7OrKB8adL+/8M2xlCrKhwYPktxaFZyuonxo8du1a5n7/irK
hxa3arJFC7dUUT60WJR7Z+mLZVWUDy12LPxfw/+mV1E+tHBzWVWXFlxF+dBC
bXvW0DOwivKhRZd9TSzeMrT/TafFHPsh8jCvKsqHFuKZV5w8NVWUDy3uLc23
LBVVUT60EKwMyb7Ar6J8aBHQyX74hj+VlA8tnt2MOzr1QyXlQ4thIVX7hz2t
pP2HWtRucGgbdLuS8qHFhN1Fo4IvV1I+tKh4vd5uTnwl5YO9/jhP7x27Kykf
Wtx4L7qevrGSqa/PY7RofmjF4aollZQPLQr7v3rWdVol5UOLuNpo/x3BlZQP
LUqL233/HVhJ+dBi6JThl0d2raR8sNf7fHznk5aVlA8tTE++WjnYvZLyocXl
G+mTimWVlA8txn7uxKy0NO4vZD1WdtY3MhiY+vnXDi2ODL299tUXA+VDC68j
pW92vTZQPrR4+PLRz7EPDZQPtr1jz59vl2agfLDvP/FI7njeQPnQ4uWxTULL
IwbKhxZpuh5RddEGyocWoTNXbDddb6B8aLF8faqJZLGB8qHFbMOhJ81DDZzH
HS3W3H1aOyDYQPnQ4kKwdG54XwPlQ4tfIR6NM7oZKB9ahF2rsLduY6B8sPcf
MMF5ZCMD51GkhbndXN9klYHyoYX1g+ZL3G0NtP9Ti0Ytzl7cVavn9mP/1GLA
2kYfFb/0tL9Vi/ysHN6h93rKhxZvppdVtX2mp3zokDbq571nWXrKhw6PXzYf
uzJZT/nQodHwhkltE/SUDx3mbRybXB6n5zykOrRVL56QHqWnfOjwMkdyOmat
nvKhQxPvj2HzF+kpHzqknjj/cnSonvKhw8mgwFODRukpHzqgfN+Xgf31lA8d
DHmbNgf76SkfOmyOd1w7u52e8qGDaFdQdoSHnvKhwxDB8IFXXfWUDx0mR/eT
fBXpKR862FXOqm1srqd86LCp0sRmpr6C8sFeP3BQi/TSCsqHDg6RD0Y6F1RQ
/WDPa15tXfmogvbH6tBapU/6mVnBeUzVob/3+fuTr1bQ/ngdniTGZXw9XUH5
0KGg/+TIRXEVlA8dDnVKbS7cUUH50KFdwdgtZ9dVUD50OFqiOTZsSQXlQwcL
z+fT7GdUMNzzIB2y9015dX9sBeWDbW+XvKLtQRWUD/b+1tsuHve/CsqHDgMj
PXZ37lJB+dBh2Vn/NpqWFZQPHWLE23ztG1ZQPnS4vMbrupljBeVDh4NjZkSb
2VdQPnQwW7H7ph2/gvKhQ66jVRd1eTnDrZ91uJblXtXxSznlg22PUaN+jX5b
TvnQoWOJj2Lbo3LKhw7f17cfd/t2OeVDh8x5VfctksspHzosfaPu2TexnOqH
DkXPhzw8dLic8yjWQTEweFDtznLKhw51FvrHYzeXUz50yBiqR25YOdUPHcYO
6Rz137xyyocOi+LOpmdOLqd8uEPVt8fNgOBy5v8TVHNd
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{644., Automatic},
  Method->{},
  PlotRange->{{0, 10.}, {-43, 43}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6811903119554663`*^9, {3.681190634855093*^9, 3.6811906860917673`*^9}, 
   3.681191037683758*^9, {3.6811910680713377`*^9, 3.681191117307337*^9}, 
   3.6811911680701113`*^9, 3.681192717311887*^9, 3.681193727811401*^9, {
   3.681205354990773*^9, 3.6812053925735273`*^9}, {3.681549560504405*^9, 
   3.681549567254446*^9}, 3.681552318862555*^9, 3.6815536641149473`*^9, 
   3.681627994158841*^9, 3.681631153481192*^9, 3.681633499158752*^9, {
   3.6816394275828867`*^9, 3.681639447383236*^9}, 3.6816520272957983`*^9, 
   3.681706454247696*^9, 3.681706485304093*^9, 3.681706996662779*^9, {
   3.681728352223024*^9, 3.68172837014979*^9}, 3.681737378810536*^9, {
   3.6817414065902452`*^9, 3.681741424756184*^9}, 3.681741865222494*^9, 
   3.681743960640842*^9, 3.681788385834852*^9, 3.681805352613214*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SOLUTIONS", "Section",
 CellChangeTimes->{{3.680493744409877*^9, 3.680493748116157*^9}, {
  3.6805015455889893`*^9, 3.680501550293067*^9}, {3.6808653695727463`*^9, 
  3.680865370845078*^9}, {3.681549695292163*^9, 3.6815497025801353`*^9}}],

Cell[BoxData[
 RowBox[{"(*", "DEFINITIONS", "*)"}]], "Input",
 CellChangeTimes->{{3.681550586937327*^9, 3.681550590874784*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"k0", "[", 
    RowBox[{"En_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    FractionBox[
     RowBox[{"2", "\[Mu]", " ", "En"}], 
     SuperscriptBox["\[HBar]c", "2"]], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k2", "[", 
    RowBox[{"En_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    FractionBox[
     RowBox[{"2", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"En", "-", "E2"}], ")"}]}], 
     SuperscriptBox["\[HBar]c", "2"]], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"wave0", "[", 
    RowBox[{"En_", ",", "r_", ",", "\[Delta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Delta]", "]"}], 
     RowBox[{"SphericalBesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"k0", "[", "En", "]"}], " ", "r"}]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Delta]", "]"}], " ", 
     RowBox[{"SphericalBesselY", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"k0", "[", "En", "]"}], " ", "r"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wave2", "[", 
    RowBox[{"En_", ",", "r_"}], "]"}], ":=", 
   RowBox[{"SphericalHankelH1", "[", 
    RowBox[{"2", ",", 
     RowBox[{
      RowBox[{"k2", "[", "En", "]"}], " ", "r"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B0", "[", 
    RowBox[{"En_", ",", "\[Delta]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["rmax", 
     RowBox[{"wave0", "[", 
      RowBox[{"En", ",", "rmax", ",", "\[Delta]"}], "]"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"wave0", "[", 
         RowBox[{"En", ",", "r", ",", "\[Delta]"}], "]"}], ",", "r"}], "]"}], 
      "/.", 
      RowBox[{"r", "\[Rule]", "rmax"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B2", "[", "En_", "]"}], ":=", 
    RowBox[{
     FractionBox["rmax", 
      RowBox[{"wave2", "[", 
       RowBox[{"En", ",", "rmax"}], "]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"wave2", "[", 
          RowBox[{"En", ",", "r"}], "]"}], ",", "r"}], "]"}], "/.", 
       RowBox[{"r", "\[Rule]", "rmax"}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "HAMILTONIAN", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Hnew", "[", 
     RowBox[{"En_", ",", "\[Delta]_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"H", "=", "H0"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"[", 
          RowBox[{"len", ",", "len"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"V00mat", "[", 
          RowBox[{"[", 
           RowBox[{"len", ",", "len"}], "]"}], "]"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"-", 
            SuperscriptBox["\[HBar]c", "2"]}], 
           RowBox[{"2", " ", "\[Mu]"}]], " ", 
          FractionBox["1", 
           SuperscriptBox["dr", "2"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dr", " ", 
             FractionBox[
              RowBox[{"B0", "[", 
               RowBox[{"En", ",", "\[Delta]"}], "]"}], "rmax"]}], "-", "1"}], 
           ")"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", " ", "len"}], ",", 
           RowBox[{"2", " ", "len"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"V22mat", "[", 
          RowBox[{"[", 
           RowBox[{"len", ",", "len"}], "]"}], "]"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"-", 
            SuperscriptBox["\[HBar]c", "2"]}], 
           RowBox[{"2", " ", "\[Mu]"}]], " ", 
          FractionBox["1", 
           SuperscriptBox["dr", "2"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dr", " ", 
             FractionBox[
              RowBox[{"B2", "[", "En", "]"}], "rmax"]}], "-", "1"}], 
           ")"}]}]}]}], ";", "H"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"RETURNS", " ", "PARAMETERS"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eigenv", "[", 
    RowBox[{
     RowBox[{"En_", "?", "NumericQ"}], ",", "i_", ",", 
     RowBox[{"\[Delta]_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eval", ",", "evec"}], "}"}], "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Eigensystem", "[", 
           RowBox[{"Hnew", "[", 
            RowBox[{"En", ",", "\[Delta]"}], "]"}], "]"}], "]"}], ",", 
         "First"}], "]"}]}]}], ";", 
     RowBox[{"eval", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"findnd", "[", 
    RowBox[{"En_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", "=", "2"}], "}"}], ",", 
     RowBox[{
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"eigenv", "[", 
             RowBox[{"En", ",", "n", ",", "x"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0.", ",", "\[Pi]", ",", "0.1"}], "}"}]}], 
           "]"}], "]"}], "<", "En"}], ",", 
        RowBox[{
         RowBox[{"n", "++"}], ";"}]}], "]"}], ";", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{"x", "/.", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"eigenv", "[", 
            RowBox[{"En", ",", "n", ",", "x"}], "]"}], "\[Equal]", "En"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0.", ",", 
            RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"\[Delta]", "<", "0"}], ",", 
        RowBox[{"\[Delta]", "=", 
         RowBox[{"\[Pi]", "+", "\[Delta]"}]}]}], "]"}], ";", 
      RowBox[{"{", 
       RowBox[{"n", ",", "\[Delta]"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.681550625529065*^9, {3.681551277494691*^9, 3.681551281390258*^9}, {
   3.6815513629352837`*^9, 3.681551381033184*^9}, {3.68155142152118*^9, 
   3.681551431057551*^9}, {3.681551497714632*^9, 3.6815516032118073`*^9}, {
   3.681551874153425*^9, 3.6815518748157673`*^9}, {3.681551974865007*^9, 
   3.6815519753288193`*^9}, {3.681552157388617*^9, 3.681552159883445*^9}, {
   3.681552342457534*^9, 3.681552353055757*^9}, 3.6815524455774527`*^9, {
   3.6815537710458384`*^9, 3.681553772023654*^9}, {3.6815544640557756`*^9, 
   3.6815544643999853`*^9}, {3.681554873253602*^9, 3.681554873454049*^9}, {
   3.681555406111061*^9, 3.681555406493878*^9}, {3.681631134084893*^9, 
   3.6816311408615417`*^9}, {3.681741679681304*^9, 3.681741679728252*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MATCHES", " ", "AMPLITUDE"}], " ", "&"}], " ", "PLOTS"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"const0", "[", "i_", "]"}], ":=", 
     FractionBox[
      RowBox[{"evec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"-", "len"}], "-", "1"}]}], "]"}], "]"}], 
      RowBox[{"wave0", "[", 
       RowBox[{
        RowBox[{"eval", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "rmax", ",", "\[Delta]"}], 
       "]"}]]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"const2", "[", "i_", "]"}], ":=", 
     FractionBox[
      RowBox[{"evec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], 
      RowBox[{"wave2", "[", 
       RowBox[{
        RowBox[{"eval", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "rmax"}], "]"}]]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rmaxx", "=", "20."}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.680494020724709*^9, 3.6804940458850527`*^9}, {
   3.680494519499185*^9, 3.6804945227627296`*^9}, {3.680494623300119*^9, 
   3.6804946305560083`*^9}, {3.680494832958509*^9, 3.680494916479332*^9}, {
   3.6804950348811398`*^9, 3.680495045032901*^9}, {3.680498031669083*^9, 
   3.6804980518450747`*^9}, {3.68049808478157*^9, 3.680498089709523*^9}, {
   3.680931548900985*^9, 3.6809315577498627`*^9}, {3.680931605343502*^9, 
   3.6809316078549843`*^9}, {3.68093169224754*^9, 3.680931856926944*^9}, 
   3.6809330830895844`*^9, {3.6809449924592257`*^9, 3.680945012490768*^9}, {
   3.680945096211441*^9, 3.6809451084846907`*^9}, {3.680945178862546*^9, 
   3.6809451950940866`*^9}, {3.680945246871758*^9, 3.680945302800239*^9}, {
   3.680945385128928*^9, 3.680945388921481*^9}, {3.680945454340214*^9, 
   3.6809454567711143`*^9}, {3.680945961042178*^9, 3.680945980299838*^9}, {
   3.681020734564837*^9, 3.681020736116143*^9}, {3.681020808838698*^9, 
   3.681020810494034*^9}, {3.681020846981532*^9, 3.681020858085*^9}, {
   3.68102089296712*^9, 3.681020893097727*^9}, {3.681102316257114*^9, 
   3.6811023476663446`*^9}, {3.68110244965441*^9, 3.6811025063086557`*^9}, {
   3.68110467062079*^9, 3.6811046828832827`*^9}, {3.681105421046069*^9, 
   3.681105508406723*^9}, {3.681105551407761*^9, 3.6811056008753443`*^9}, {
   3.681105838858261*^9, 3.681105861546764*^9}, {3.681105920109398*^9, 
   3.681105945540165*^9}, {3.681105981620817*^9, 3.681106017006546*^9}, {
   3.681106070078547*^9, 3.6811061339991207`*^9}, {3.681106270337122*^9, 
   3.681106282408279*^9}, {3.681106549036982*^9, 3.681106559756618*^9}, {
   3.6811066125907383`*^9, 3.68110666014261*^9}, {3.681106819369233*^9, 
   3.681106823800709*^9}, {3.681107245512433*^9, 3.6811072632145653`*^9}, {
   3.68110824598249*^9, 3.6811083107836847`*^9}, {3.6811083931610727`*^9, 
   3.6811084385136757`*^9}, {3.681108643019228*^9, 3.6811086576942177`*^9}, {
   3.681113833085256*^9, 3.681113923358642*^9}, {3.681114158466652*^9, 
   3.681114162545319*^9}, {3.681205411497468*^9, 3.68120541188029*^9}, {
   3.681551647213601*^9, 3.6815517604299717`*^9}, {3.681551817295065*^9, 
   3.6815518176216593`*^9}, 3.681552126619034*^9, {3.681556336771564*^9, 
   3.681556337195362*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"wvplot", "[", "En_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{
        RowBox[{"findnd", "[", "En", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{
        RowBox[{"findnd", "[", "En", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eval", ",", "evec"}], "}"}], "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Eigensystem", "[", 
           RowBox[{"Hnew", "[", 
            RowBox[{"En", ",", "\[Delta]"}], "]"}], "]"}], "]"}], ",", 
         "First"}], "]"}]}]}], ";", 
     RowBox[{"Print", "[", 
      RowBox[{"{", 
       RowBox[{"En", ",", 
        RowBox[{"eval", "[", 
         RowBox[{"[", "n", "]"}], "]"}], ",", "n", ",", "\[Delta]"}], "}"}], 
      "]"}], ";", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"rlist", ",", 
           RowBox[{"Part", "[", 
            RowBox[{
             RowBox[{"evec", "[", 
              RowBox[{"[", "n", "]"}], "]"}], ",", 
             RowBox[{"1", ";;", "len"}]}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"rlist", ",", 
           RowBox[{"Part", "[", 
            RowBox[{
             RowBox[{"evec", "[", 
              RowBox[{"[", "n", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"len", "+", "1"}], ";;", 
              RowBox[{"2", " ", "len"}]}]}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"const0", "[", "n", "]"}], " ", 
            RowBox[{"wave0", "[", 
             RowBox[{
              RowBox[{"eval", "[", 
               RowBox[{"[", "n", "]"}], "]"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", 
              "\[Delta]"}], "]"}]}]}], "}"}], "]"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"const2", "[", "n", "]"}], " ", 
            RowBox[{"wave2", "[", 
             RowBox[{
              RowBox[{"eval", "[", 
               RowBox[{"[", "n", "]"}], "]"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}]}], "]"}]}]}], 
          "}"}], "]"}]}], "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.6804224593223877`*^9, {3.6804301198261547`*^9, 3.680430144458576*^9}, {
   3.680430430343828*^9, 3.680430544799755*^9}, {3.680430644682653*^9, 
   3.680430732963834*^9}, {3.680431100002173*^9, 3.680431108185492*^9}, {
   3.680431248963966*^9, 3.68043127818853*^9}, {3.680431378286174*^9, 
   3.680431506512566*^9}, {3.680431572353176*^9, 3.680431601074061*^9}, {
   3.680432012479787*^9, 3.680432016784362*^9}, {3.68043213137788*^9, 
   3.680432206715345*^9}, {3.680432308869207*^9, 3.6804323090770197`*^9}, {
   3.6804323571333923`*^9, 3.6804323572532587`*^9}, 3.680432483961399*^9, {
   3.68043286865368*^9, 3.680432890349701*^9}, {3.680432925302455*^9, 
   3.680432932038418*^9}, {3.6804330636080437`*^9, 3.680433088696362*^9}, {
   3.680433180529482*^9, 3.680433195649756*^9}, {3.680433293483571*^9, 
   3.680433304403652*^9}, {3.680437056612307*^9, 3.6804370569238653`*^9}, {
   3.680492215015047*^9, 3.6804922238631973`*^9}, {3.6804924477222233`*^9, 
   3.6804925295318403`*^9}, {3.680492968313734*^9, 3.680492968889697*^9}, {
   3.68049301130617*^9, 3.680493047650674*^9}, {3.680493188406488*^9, 
   3.6804933696002607`*^9}, {3.68049341608704*^9, 3.68049357299198*^9}, {
   3.680493631961183*^9, 3.680493638217081*^9}, {3.6804938954049263`*^9, 
   3.6804938977327127`*^9}, {3.680496558276001*^9, 3.680496560250619*^9}, {
   3.680500017432419*^9, 3.6805000178328123`*^9}, {3.68050355159664*^9, 
   3.680503553236487*^9}, {3.680603939581233*^9, 3.680603953284528*^9}, {
   3.680604007173369*^9, 3.6806040493582973`*^9}, {3.680604303282702*^9, 
   3.6806043051142607`*^9}, {3.680605149927103*^9, 3.6806052129594193`*^9}, {
   3.680605351212398*^9, 3.6806054232990294`*^9}, 3.680605762784666*^9, 
   3.680605818513176*^9, {3.680606111901723*^9, 3.6806061523255463`*^9}, {
   3.6806062735919647`*^9, 3.680606309711711*^9}, {3.680606370936944*^9, 
   3.680606376769084*^9}, {3.680606419649418*^9, 3.680606423953417*^9}, {
   3.6806064594185133`*^9, 3.680606463657946*^9}, {3.6808423957916107`*^9, 
   3.680842397582231*^9}, {3.680843168824945*^9, 3.680843176927113*^9}, {
   3.6808437234800673`*^9, 3.680843725686363*^9}, 3.6808439834914417`*^9, {
   3.680932789620759*^9, 3.6809328025720797`*^9}, {3.68093345233335*^9, 
   3.680933603280067*^9}, {3.6809337767474833`*^9, 3.6809338035517483`*^9}, {
   3.680934085630724*^9, 3.680934086494288*^9}, {3.680934962147353*^9, 
   3.680934970097574*^9}, {3.680935187524446*^9, 3.680935190066598*^9}, {
   3.68094516264015*^9, 3.680945162733838*^9}, {3.680952221454741*^9, 
   3.680952233270626*^9}, {3.680952265031146*^9, 3.680952325408125*^9}, {
   3.680952534261464*^9, 3.680952541549069*^9}, {3.6809528171216*^9, 
   3.680952832040901*^9}, {3.6810272991323833`*^9, 3.681027307395515*^9}, {
   3.681028730467445*^9, 3.681028755164012*^9}, {3.681029031280992*^9, 
   3.681029043680751*^9}, {3.6810295145214977`*^9, 3.681029519501967*^9}, {
   3.681029557633449*^9, 3.681029559081909*^9}, {3.681029650907786*^9, 
   3.6810296777231283`*^9}, {3.681030200442499*^9, 3.681030207970476*^9}, {
   3.681030412517521*^9, 3.681030425950103*^9}, {3.681031106366498*^9, 
   3.681031115942196*^9}, {3.681031684888756*^9, 3.681031690753016*^9}, {
   3.681032003350855*^9, 3.6810320223729277`*^9}, {3.6811032227048683`*^9, 
   3.681103242640019*^9}, {3.681103367546707*^9, 3.681103388339686*^9}, {
   3.6811037642097197`*^9, 3.6811037647908163`*^9}, {3.6811089772990103`*^9, 
   3.681109038467452*^9}, 3.681109077399665*^9, {3.681109472155127*^9, 
   3.6811094981156073`*^9}, {3.681113211494244*^9, 3.681113223917989*^9}, {
   3.681114931127317*^9, 3.6811150103546677`*^9}, {3.681193928851305*^9, 
   3.6811939289811163`*^9}, {3.681551320083645*^9, 3.681551325035816*^9}, {
   3.6815516228945923`*^9, 3.681551643937929*^9}, {3.681551840471735*^9, 
   3.6815518563906527`*^9}, {3.681555427839472*^9, 3.681555490495824*^9}, {
   3.6815567688831367`*^9, 3.681556770506315*^9}, 3.681556807454096*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vals", "[", "En_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{
        RowBox[{"findnd", "[", "En", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{
        RowBox[{"findnd", "[", "En", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eval", ",", "evec"}], "}"}], "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Eigensystem", "[", 
           RowBox[{"Hnew", "[", 
            RowBox[{"En", ",", "\[Delta]"}], "]"}], "]"}], "]"}], ",", 
         "First"}], "]"}]}]}], ";", 
     RowBox[{"Print", "[", 
      RowBox[{"{", 
       RowBox[{"En", ",", 
        RowBox[{"eval", "[", 
         RowBox[{"[", "n", "]"}], "]"}], ",", "n", ",", "\[Delta]"}], "}"}], 
      "]"}], ";"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6809338093685837`*^9, 3.680934016026812*^9}, {
  3.680934047475925*^9, 3.680934056219376*^9}, {3.6811090527776213`*^9, 
  3.681109055648932*^9}, {3.681551844839616*^9, 3.681551847558984*^9}, {
  3.681551920472912*^9, 3.681551920984015*^9}, {3.68155677762992*^9, 
  3.681556804722952*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wvplot", "[", "0.9652303463868965", "]"}]], "Input",
 CellChangeTimes->{{3.681805314021138*^9, 3.68180531553745*^9}, {
  3.681805357064991*^9, 3.681805357599668*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9652303463868965`", ",", 
   RowBox[{"0.9652303463812331`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", "2", ",", 
   RowBox[{"2.798665767290098`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Print",
 CellChangeTimes->{3.681805701502233*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
jBE27J0ySa/mKb2fYRIYz/itNaU8h/M/WrW9ig==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw123dczd8fB/D23nve7pARIqKBzluojLT3vKW9buPeyCgJWSkRhWRl/Oxk
k5UyEyIqlZSyivb+3a/7/tx/vo+Pezv3c97P8/qc8/mez2UExTmHiAgJCbWL
Cgn999+1ahdsm1MyiFBa0fPBmfFWguO9RKi+T7hgX4HVDdrmH043CgnMPbCR
wy3B908QLddXS+HzY6uC/P9eZ8inh6zdBrVvrG7++/wFEnb4XF1M+mcr/gH/
Xy4TK3Ma51drG/79VSJl/fHF+MIuK5kPxzkLZK6TzJDlR6PofVb/msu/SfZY
pzWKGIxaTfHd/bB38h3yXL79fFSxCBGczz2SsLXf97qPJDnB/+sPx++TtuUZ
JxNK5cjPf9/3gBTVTqtM91UmprP/ez0iw5abph0pVSOC739MqjSfiRiHa5FH
vZP531BO6I8lqmR5ekT23/lUkIMlDcpRHDpx/veFlSShmHe4/x2TCPr7lEgM
ue+HCEPyJeW/Bp+RsIuJnPvTJxPB+b4gE2VSHGqZU0n8f6fHeUnMJ+UuqbYz
JoL6vCJF3Qalv6tmEqF/r9ektfgjR27vLOzPazLnNgkv55gSu+b/vqCaiGxc
baAaOhf7V024yXLJrYnmJPvhfx14Q6JFdZRYBZbkX3dnvyXbfP6cPVM7n/zr
zoe3xIB+PW3lDIL9f0cq5Zav6HwFxOC/06HVEL+8tTsVVayxHjUkcWjPs7bA
RSQs9L/Xe8La8Hmq4+3FWJ8PZKxR1Y3FsCH/taZ24QMRm3h/p+keW6xXLZkt
uqneVWEp6fuvud5aIldoYuK8bxnW7yOpnzC4pn/iCiIYAJ9IlVHeE7lH9ljP
T0Rs8dVVHhEO5N/pba4jiywXjb3Y6Yj1rSex4q7uzyKcyMsX/73qydi+M3vS
lztjvRuI3YN17LcmLkT93wl+JjLdE1zz9Vyx/p+Jhf/7Hxdl3ci/5nwbSas6
vfjPmBt6NJGqtunS5n3u2J8mcryo+qLPHw/0aSKTfrq7mXZ5Yv+aSOXVCc0H
/nqhVzOBI8YJAQPe2N9mYixhEekn7It+zeRR1J/VYfJ+2P8vhJPSUOyk54+e
X8h5bWZg5/QAImjuC1FT3FMmzQhE3xaSIpc+1e5cINanhQxpDX8+aM5G7xbS
evn2jl/lbKzXV5IfPvOioWsQ+n8lbjox+6e1BGH9vpKnY+rh3xOCcTy0koyv
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
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
MQ6XRG2f+DVR+v8D+ZPl8w==
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
zG93cHtOy5/Q/wEEgFQD
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{646., Automatic},
  Method->{},
  PlotRange->{{0, 20.}, {-0.04071684250479043, 0.01748711290001192}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.681805701680883*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.681743925750814*^9, 3.681743926369598*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V0", "=", "48"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phasedata48", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"findnd", "[", "x", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.1", ",", "3.", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"phasedata48", ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], ",", "Red"}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.681743930014965*^9, 3.681743933890156*^9}, {
   3.6817439684585743`*^9, 3.6817439986441307`*^9}, {3.681744506458969*^9, 
   3.681744509658606*^9}, {3.681788967551714*^9, 3.681788969037644*^9}, {
   3.681789002446106*^9, 3.6817890219180307`*^9}, {3.681805295176326*^9, 
   3.681805300495421*^9}, {3.6818053926804132`*^9, 3.681805405504218*^9}, 
   3.681806065332777*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681806481800701*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6818080562211437`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6818100689224443`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"FindRoot\\\", \\\"::\\\", \\\"lstol\\\
\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6818100689626617`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQPWsmCOy0F7Irnp0axu4A4Z+0f612/um9X2wOJsYg
cNl+12VRQXFemPxN+8/7lrMmlLE7MIDBA/vYuZPrD2lwOICVGz+2fx5fvaKE
j9MhPQ0EntmnzfFX+bN+jz1E/0t7twCrWfs5z9qfPQMCb+yTXruw2O+4Yg8x
74N9V1SnhHDzTaj6j/aH0pZkan+9Yw9xz2f7l9JsfdHO9+3PgfV/sT+44fPc
5SEP7CH2fbP/vpvrpPy6B/aMYPN+2NuWTo9dc/gB1Lyf9jwcfWwGax9Azftt
/6VMKswu6QHUvD/2NSs+v3nOCDPvn/0MfqtdSpL3oe5jcPiwX1fzJ/89qPsZ
HG60Hjnl9PEO1HxGB4U9u/sYjtyG6mdymMLXe2Nf7y2ofcwO7wqs/70Pugl1
H4vDkQuv3uiL34Cax+JwRTitufzuNah5rA7OQf3bXFZchZrH5rBvZ6vgnsor
UPPYHdQMLvw7GXwZah6Hg5Tf8/PRFpfsAXLZ18A=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->NCache[{None, {{Rational[1, 2] Pi, 
       RGBColor[1, 0, 0]}}}, {None, {{1.5707963267948966`, 
       RGBColor[1, 0, 0]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 3.0000000000000004`}, {0, 3.1320584452296205`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.68180605718897*^9, 3.681814269470976*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V0", "=", "47"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phasedata47", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"findnd", "[", "x", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.1", ",", "3.", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"phasedata47", ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], ",", "Red"}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6818054185281897`*^9, 3.6818054433287373`*^9}, 
   3.681806082235009*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6818182764402637`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQPWsmCOy0f7L7fedRZXYHCP+kvYLMQtc789kcTIxB
4LJ9xd5XqvoNbFD5m/asp93zU9awOTCAwQN72+slL02l2B3Ayo0f209Te91s
tY/dIT0NBJ7ZL4/tWt/SxgHV/9J++zwV82Nr5tifPQMCb+zNl+bFvDI6YA8x
74O9QmXI7Cjx0/YQ9R/tD4l0yjo/v2gPcc9ne4Nvj7aE61y1PwfW/8X+un7o
M/+q6/YQ+77Zbyw5Jvnu1w17RrB5P+w1mMpfMl6/CTXvp/25khmLnxjegpr3
236C7exKTsM7UPP+2G8InOXy9uJNqHn/7CcsTZFwdbgJdR+Dg8P/up1nGm9A
3c/gULBSXXnPwutQ8xkdGNi/f/684hpUP5PD9c+Wc9rnXYXax+ww/UV7m3rH
Faj7WBwOncnOKsq6DDWPxWG/6smvxp6XoOaxOoi7Lfg+Vf0i1Dw2hxN8b054
cFyAmsfucO9Xe3vQ7bNQ8zgcDh3htP+y+bQ9ALn+2Us=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->NCache[{None, {{Rational[1, 2] Pi, 
       RGBColor[1, 0, 0]}}}, {None, {{1.5707963267948966`, 
       RGBColor[1, 0, 0]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 3.0000000000000004`}, {0, 3.0656827653981114`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6818221141579323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V0", "=", "46"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phasedata46", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"findnd", "[", "x", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.1", ",", "3.", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"phasedata46", ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], ",", "Red"}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.681805445377001*^9, 3.681805449872909*^9}, 
   3.681806085504675*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681822939800709*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681826258257289*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQPWsmCOy097i3inviPzYHCP+k/Z8wN9mgODYHE2MQ
uGxvm5HLly0Dk79p/1zap2eRHJsDAxg8sJ+5dtFUp2g2B7By48f2i7m36F4+
xeaQngYCz+z7905KfpXEDtX/0p6rfv70eBEOh7NnQOCNvfm6RWqfznBAzftg
n/L+R2ls4jJ7iPqP9u9avkxJsN9nD3HPZ3sfufNNNS+P2Z8D6/9i7/ThgsiL
12fsIfZ9s08u9vj7eNkFe0aweT/sJUPyl6mrXoKa99NesGCtzy3+y1Dzftun
hF/rzmq+DDXvj/0CrqrHrHrXoeb9s7eYE9YrknTZHuI+BgeBsp8JjR8v2UPc
z+CwIjHwc0swzHxGhx+u4norJ12E6mdykPkur5m7/QLUPmYH8b15YWkTz0Pd
x+IwRTplm+GMs1DzWBwip+6fW9VzGmoeq8P2hQX/PpaehJrH5jBBac1G8ejj
UPPYHWRmXczrczwKNY/DwXrqqaN9eoftAZZB0mo=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->NCache[{None, {{Rational[1, 2] Pi, 
       RGBColor[1, 0, 0]}}}, {None, {{1.5707963267948966`, 
       RGBColor[1, 0, 0]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 3.0000000000000004`}, {0, 3.1000712412258298`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6818297888777313`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V0", "=", "45"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phasedata45", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"findnd", "[", "x", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.1", ",", "3.", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"phasedata45", ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], ",", "Red"}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.681805452265229*^9, 3.681805456033009*^9}, 
   3.681806088090863*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681832122640533*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681834067298552*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.68183516879775*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"FindRoot\\\", \\\"::\\\", \\\"lstol\\\
\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6818351688278093`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQPWsmCOy0t9ojqMzyiM0Bwj9p/638d991HTYHE2MQ
uGwfdefLOtNLrFD5m/b3fnv4Bm1jdWAAgwf2U3kCXXTPszqAlRs/tv9yOVRm
qxibQ3oaCDyzN39WaSXbBjP/pf2MOZWOy4XZHc6eAYE39qf2xd9O3cQONe+D
vfy5vTp8IRxQ9R/tJ2tvtnj+mgPqns/2Dx44/v9xfLH9ObD+L/bBSkYZcqu3
20Ps+2Z/sr3Fap3dQXtGsHk/7Gv/BnC4uR+1h5j30167jrt8idQJe4h5v+1v
qu+ftPnFSah5f+zjvmz7IHz/FNS8f/YN7qJSen6X7CHuY3BQKGV71i572h7i
fgaHhr6EK880T0HNZ3QoaPCfsFvqJFQ/k0PplY0z2I4dh9rH7PA7OvrzfOtj
UPexOGi1fDOc2HEEah6Lw+elt04v3n4Iah6rA9fDWTevXTwANY/NYf0jt/rm
vXuh5rE79IU/W3zr5E6oeRwOBWXv47qvbLUHAHAE1rQ=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->NCache[{None, {{Rational[1, 2] Pi, 
       RGBColor[1, 0, 0]}}}, {None, {{1.5707963267948966`, 
       RGBColor[1, 0, 0]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 3.0000000000000004`}, {0, 3.1151871137312326`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.681838039933783*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V0", "=", "44"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phasedata44", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"findnd", "[", "x", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.1", ",", "3.", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"phasedata44", ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], ",", "Red"}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.681805458665254*^9, 3.6818054627771883`*^9}, 
   3.681806091675387*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681843297120942*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQPWsmCOy0/zGb9WTsaTYHCP+k/cFsHg4ZNjYHE2MQ
uGwf+sZH4+YMVqj8TXtemYrg9jRWBwYweGD/h+3KoTUprA5g5caP7YWdRNYs
6WV1SE8DgWf2Fa+03cPuwPS/tL94QK5X0ovN4ewZEHhjr6FvP+32WTaoeR/s
pTcu5ZoVww5V/9E+ouWTK89rdqh7Pts7Z3N9WJbP4XAOrP+Lff1JgyOfH3NA
7ftm7xQloRifNtGeEWzeD/sWM3Ux9Zer7SHm/bT/vueehIbZVnuIeb/tn63W
0glJ2GUPMe+PvXC0QUj0vr32EPP+2WeoLjL/O3O/PcR9DA7HE3z3yEgfsIe4
n8HB4FHr8/23DkLNZ3RImMc8z3viPqh+Joe6r79+tazeA7WP2WHdrZ9h7+12
Qd3H4nCg15ltYsZ2qHksDqt29oUtddgCNY/VIeF8bGz97Q1Q89gcjjnwx82b
sgpqHrvDbA0+2zXmi6HmcTjw3pwzia90uj0ALyzKyQ==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->NCache[{None, {{Rational[1, 2] Pi, 
       RGBColor[1, 0, 0]}}}, {None, {{1.5707963267948966`, 
       RGBColor[1, 0, 0]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 3.0000000000000004`}, {0, 3.1113047912014618`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6818458171059732`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V0", "=", "43"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phasedata43", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"findnd", "[", "x", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.1", ",", "3.", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"phasedata43", ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], ",", "Red"}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.681805465449171*^9, 3.681805469313271*^9}, 
   3.68180609379519*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681850936742051*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQPWsmCOy0T7k3b/mrHWwOEP5Je69vv7RfPGN1MDEG
gcv20+y1Pitms0Llb9rbFdZO61RndWAAgwf216bMz9cVZHUAKzd+bH+O79HU
UiVWh/Q0EHhm7/LPZqVoOEz/S/t3R98wyK9idTh7BgTe2G/5llvEKMoGNe+D
/bH8XPasfph7PtqfFJ/kzCnADnXPZ3smObNPn3vZHc6B9X+x/yzNG/GbkQNq
3zd7wTn/M7PSORwYweb9sH+j9W0G0x4OqHk/7a8deH2j7D8H1Lzf9owCAQJq
hxvsIeb9sY+Ke1jw9sAse4h5/+wPuHUGvUtbbA9xH4NDnP995vt7ltlD3M/g
4MIh2sh6abk9xHxGh4TDMy/3zN8I1c/kwOQXcKpg5xJ7iH3MDvOZ5236rbXQ
HuI+FgfuO8smH7WYCTWPxWHi56tr7nD0Qs1jdXj04q2yQ38K1Dw2h1+K8f9C
eDmh7md3WJpqtlf9E8y/HA4zWZ7M5LrG4QAA6ADLZw==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->NCache[{None, {{Rational[1, 2] Pi, 
       RGBColor[1, 0, 0]}}}, {None, {{1.5707963267948966`, 
       RGBColor[1, 0, 0]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 3.0000000000000004`}, {0, 3.1315097687513544`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.681853063908626*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.681805528986785*^9, 3.681805529914353*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"phasedata50", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"findnd", "[", "x", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.1", ",", "3", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"phasedata50", ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", " ", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Pi", "/", "2"}], ",", "Red"}], "}"}], "}"}]}], "}"}]}]}], 
   "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"V0", "=", 
     RowBox[{"50", "MeV"}]}], ",", 
    RowBox[{"mixing", "=", "WS"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.681652087539846*^9, 3.681652164260839*^9}, {
  3.681743880938405*^9, 3.681743919227182*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQPWsmCOy0j/swq97/CbMDhH/SPkjrfNmkHYwOJsYg
cNm+baHHDGU+Bqj8TXuh9tOh7r5/7RnA4IF9kYrjpcuXf9mDlRs/tpcz2ndG
ZfoP+/Q0EHhmL1+8eFdjxzd7iP6X9hw9P4yC532xP3sGBN7Ylyy9ufr9xU9Q
8z7YMxUzxtTKfYSq/2if4Bg+fynDe3uIez7bdzxTK9R/+dr+HFj/F/sdfyPO
C356AbXvm/0Ouw1tC8Wf2TOCzfthz3C6uO9G2GOoeT/tRf5OZjFY+wBq3m97
CzuzUk7DO1Dz/thzrFG7z6p3HWreP/sJL/mk9PwuQd3H4FCw9PWrdtnTUPcz
OFx4fuT5/lsHoeYzOiTMP/6/Z/5GqH4mh47Xpec6FDmh4cnssCZ8xVmV6RwO
EPexOPSsPrnoahmHA8Q8Fodpl/bOOlnAAQ1vVofdEekpv9M4HCDmsTnUa3be
04zigJrH7nB/4ZUjv71g5nE4dN5c+5HFisMBAHMz1vo=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->NCache[{None, {{Rational[1, 2] Pi, 
       RGBColor[1, 0, 0]}}}, {None, {{1.5707963267948966`, 
       RGBColor[1, 0, 0]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{659., Automatic},
  Method->{},
  PlotRange->{{0, 3.0000000000000004`}, {0, 3.1413742189155904`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6817045775989723`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1680, 991},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CellContext->Notebook,
FrontEndVersion->"10.3 for Linux x86 (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 310, 8, 73, "Input"],
Cell[CellGroupData[{
Cell[893, 32, 101, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[1019, 37, 6507, 179, 686, "Input"],
Cell[7529, 218, 29322, 490, 409, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36900, 714, 244, 3, 67, "Section"],
Cell[37147, 719, 127, 2, 32, "Input"],
Cell[37277, 723, 7112, 209, 562, "Input"],
Cell[44392, 934, 3314, 67, 177, "Input"],
Cell[47709, 1003, 6886, 135, 121, "Input"],
Cell[54598, 1140, 1362, 37, 55, "Input"],
Cell[CellGroupData[{
Cell[55985, 1181, 190, 3, 32, "Input"],
Cell[56178, 1186, 353, 7, 23, "Print"],
Cell[56534, 1195, 58840, 979, 405, "Output"]
}, Open  ]],
Cell[115389, 2177, 218, 3, 143, "Input"],
Cell[CellGroupData[{
Cell[115632, 2184, 1146, 30, 77, "Input"],
Cell[116781, 2216, 709, 13, 41, "Message"],
Cell[117493, 2231, 711, 13, 41, "Message"],
Cell[118207, 2246, 711, 13, 41, "Message"],
Cell[118921, 2261, 566, 12, 23, "Message"],
Cell[119490, 2275, 1553, 36, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121080, 2316, 850, 26, 77, "Input"],
Cell[121933, 2344, 711, 13, 41, "Message"],
Cell[122647, 2359, 1538, 36, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124222, 2400, 846, 26, 77, "Input"],
Cell[125071, 2428, 709, 13, 41, "Message"],
Cell[125783, 2443, 709, 13, 41, "Message"],
Cell[126495, 2458, 1534, 36, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128066, 2499, 846, 26, 77, "Input"],
Cell[128915, 2527, 709, 13, 41, "Message"],
Cell[129627, 2542, 709, 13, 41, "Message"],
Cell[130339, 2557, 708, 13, 41, "Message"],
Cell[131050, 2572, 566, 12, 23, "Message"],
Cell[131619, 2586, 1536, 36, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133192, 2627, 848, 26, 77, "Input"],
Cell[134043, 2655, 709, 13, 41, "Message"],
Cell[134755, 2670, 1538, 36, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136330, 2711, 845, 26, 77, "Input"],
Cell[137178, 2739, 709, 13, 41, "Message"],
Cell[137890, 2754, 1536, 36, 241, "Output"]
}, Open  ]],
Cell[139441, 2793, 267, 4, 187, "Input"],
Cell[CellGroupData[{
Cell[139733, 2801, 938, 30, 55, "Input"],
Cell[140674, 2833, 1570, 37, 426, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
