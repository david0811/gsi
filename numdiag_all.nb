(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    170008,       3440]
NotebookOptionsPosition[    167689,       3362]
NotebookOutlinePosition[    168043,       3378]
CellTagsIndexPosition[    168000,       3375]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["DEFINE PARAMETERS", "Section",
 CellChangeTimes->{{3.680493170118178*^9, 3.680493175475255*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["m", "N"], "=", "940"}], ";", 
  RowBox[{"\[HBar]c", "=", "197.327"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"V0", "=", "55"}], ";", 
  RowBox[{"R", "=", "2"}], ";", 
  RowBox[{"a", "=", "0.05"}], ";", 
  RowBox[{"\[Mu]", "=", 
   RowBox[{
    FractionBox["8", "9"], " ", 
    SubscriptBox["m", "N"]}]}], ";", 
  RowBox[{"l", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rmax", "=", "5."}], ";", 
  RowBox[{"dr", "=", "0.01"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rlist", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"dr", ",", "rmax", ",", "dr"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"len", "=", 
   RowBox[{"Length", "[", "rlist", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vwoods", "[", "r_", "]"}], ":=", 
   FractionBox[
    RowBox[{"-", "V0"}], 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"r", "-", "R"}], "a"], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vcent", "[", "r_", "]"}], ":=", 
   FractionBox[
    RowBox[{"l", 
     RowBox[{"(", 
      RowBox[{"l", "+", "1"}], ")"}], 
     SuperscriptBox["\[HBar]c", "2"]}], 
    RowBox[{"2", "\[Mu]", " ", 
     SuperscriptBox["r", "2"]}]]}], ";", "1"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V", "[", "r_", "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "V0"}], 
     RowBox[{"1", "+", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"r", "-", "R"}], "a"], "]"}]}]], "+", 
    FractionBox[
     RowBox[{"l", 
      RowBox[{"(", 
       RowBox[{"l", "+", "1"}], ")"}], 
      SuperscriptBox["\[HBar]c", "2"]}], 
     RowBox[{"2", "\[Mu]", " ", 
      SuperscriptBox["r", "2"]}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Vmat", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"V", "[", "rlist", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"V", "[", "rlist", "]"}], ",", 
     RowBox[{"Vwoods", "[", "rlist", "]"}], ",", 
     RowBox[{"Vcent", "[", "rlist", "]"}]}], "}"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"dr", ",", "rmax"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.679286728059107*^9, 3.679286751534897*^9}, {
   3.679286798295683*^9, 3.679286809263542*^9}, {3.679287253510089*^9, 
   3.679287322870791*^9}, 3.679289429930531*^9, {3.679289796355823*^9, 
   3.679289797938469*^9}, {3.679291047782339*^9, 3.679291048165627*^9}, {
   3.679291140911874*^9, 3.679291141375329*^9}, {3.6793008229741793`*^9, 
   3.679300823061451*^9}, {3.679301164043964*^9, 3.679301164138753*^9}, 
   3.679301319405847*^9, {3.679301744500462*^9, 3.67930174459568*^9}, {
   3.6793070233533278`*^9, 3.679307024200685*^9}, {3.6793071120422153`*^9, 
   3.679307112865924*^9}, {3.6793080233437357`*^9, 3.679308046871706*^9}, {
   3.679634080442708*^9, 3.6796340987636414`*^9}, {3.679634333800329*^9, 
   3.6796343349092484`*^9}, {3.679639176058004*^9, 3.679639188049914*^9}, {
   3.6798067461243887`*^9, 3.679806768795967*^9}, {3.679812310223147*^9, 
   3.679812338079535*^9}, {3.679812393568287*^9, 3.679812544050201*^9}, {
   3.679812590867487*^9, 3.679812635755251*^9}, {3.679812801742092*^9, 
   3.6798128018611383`*^9}, {3.679812860319036*^9, 3.679812864150773*^9}, {
   3.679813569689842*^9, 3.679813609697278*^9}, {3.679813646034247*^9, 
   3.679813682770708*^9}, {3.679813881677866*^9, 3.679813885669187*^9}, {
   3.6798170925811043`*^9, 3.679817093860159*^9}, {3.6804316284900513`*^9, 
   3.6804316285694857`*^9}, {3.680432080312958*^9, 3.68043210436097*^9}, {
   3.6804337032893887`*^9, 3.6804337702899103`*^9}, {3.680433811827347*^9, 
   3.680433818354754*^9}, {3.680434634847043*^9, 3.6804346356949663`*^9}, 
   3.680436005691721*^9, {3.680496540601735*^9, 3.68049654159378*^9}, {
   3.6804968302692003`*^9, 3.680496845685198*^9}, 3.680497920371483*^9, {
   3.6804983694494753`*^9, 3.6804983705134*^9}, {3.680498425538352*^9, 
   3.680498425626013*^9}, {3.680499023874032*^9, 3.6804990254019003`*^9}, {
   3.68049906177068*^9, 3.680499092482966*^9}, {3.680499420823485*^9, 
   3.680499429903269*^9}, {3.680499462552456*^9, 3.6804994639356956`*^9}, {
   3.68050001154576*^9, 3.680500022199564*^9}, {3.6805011173512287`*^9, 
   3.6805011307594337`*^9}, {3.680847646270734*^9, 3.680847652165984*^9}, 
   3.6808617668489733`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
GkJ5KOCmZFlCXmM3oTy0oet29kXLom7yf+QEGuA=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
4IDl2slG0emVadhjENRlfb50I7Y07f8B0n1p
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{398., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5.}, {-55., 77.49073071011193}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6790525019311647`*^9, 3.679052566523169*^9, 3.679196433941718*^9, {
   3.679197277655931*^9, 3.679197294275297*^9}, 3.679203964377475*^9, {
   3.679211502047686*^9, 3.679211535666667*^9}, 3.679211579918518*^9, 
   3.6792116311039762`*^9, 3.67921462355632*^9, 3.6792214221859913`*^9, {
   3.679283487206999*^9, 3.6792835073757553`*^9}, 3.6792846970975523`*^9, 
   3.6792868319626226`*^9, 3.679287023698317*^9, 3.6792873635378437`*^9, 
   3.679287540947575*^9, 3.679287851949174*^9, 3.6792894968350487`*^9, 
   3.679289801327577*^9, 3.67928988339225*^9, {3.679290586852947*^9, 
   3.6792906106198874`*^9}, 3.679291052837352*^9, 3.679291144824926*^9, 
   3.679300829791338*^9, 3.679301167845834*^9, 3.679301321689472*^9, 
   3.679301749581284*^9, {3.679301879491131*^9, 3.6793019059515667`*^9}, 
   3.679307028443761*^9, 3.679307118178897*^9, 3.679307330661931*^9, {
   3.679308027838118*^9, 3.6793080494175997`*^9}, 3.6793094652195168`*^9, 
   3.679312432920207*^9, 3.6793125177770147`*^9, 3.679628067813961*^9, {
   3.679634085969236*^9, 3.679634100282443*^9}, 3.679634336318362*^9, 
   3.679636276044846*^9, 3.679636365377068*^9, 3.679637324382835*^9, {
   3.679639179099791*^9, 3.6796391886563473`*^9}, 3.6796392420372267`*^9, 
   3.679639953216379*^9, 3.679645643238593*^9, 3.679648137146015*^9, 
   3.679648558755623*^9, 3.679649582465561*^9, 3.679649892552554*^9, 
   3.6796565493739023`*^9, 3.679800549882975*^9, 3.679805684060231*^9, {
   3.6798067479753227`*^9, 3.679806769222741*^9}, 3.679806880696198*^9, {
   3.6798123317269783`*^9, 3.6798123492156363`*^9}, {3.6798124041706867`*^9, 
   3.679812544911186*^9}, {3.679812591553905*^9, 3.679812636438826*^9}, {
   3.679812718504196*^9, 3.679812747888829*^9}, 3.679812802677163*^9, {
   3.679812860932942*^9, 3.679812864802289*^9}, 3.679813302146058*^9, {
   3.679813578762792*^9, 3.679813610783359*^9}, {3.679813648675354*^9, 
   3.679813683370983*^9}, {3.679813882391739*^9, 3.679813886280746*^9}, 
   3.67981709447731*^9, 3.6798320710687733`*^9, 3.679832963110623*^9, 
   3.6798336242071457`*^9, 3.6798337139394493`*^9, 3.679913793782613*^9, 
   3.679914230663097*^9, 3.6804223738238363`*^9, 3.6804316293653173`*^9, 
   3.680432578056477*^9, 3.6804329736743717`*^9, {3.6804337046803427`*^9, 
   3.6804337706961393`*^9}, {3.6804338121262703`*^9, 3.680433818879698*^9}, {
   3.680434636246229*^9, 3.6804346448073597`*^9}, {3.6804360062572927`*^9, 
   3.680436009281104*^9}, 3.68049183832864*^9, 3.6804935964277267`*^9, 
   3.680495634338409*^9, 3.680496543248508*^9, 3.680496849248814*^9, 
   3.680496946316475*^9, 3.6804974082055817`*^9, 3.680497920656809*^9, 
   3.680498333093705*^9, 3.6804983709465513`*^9, 3.680498426505479*^9, 
   3.680499026190254*^9, {3.680499069370472*^9, 3.680499099776496*^9}, 
   3.680499156845821*^9, {3.680499422359086*^9, 3.680499430439415*^9}, {
   3.680499464559601*^9, 3.680499482363248*^9}, {3.68050111909801*^9, 
   3.6805011312791567`*^9}, 3.680603920087531*^9, 3.680605216541439*^9, 
   3.6806054134055977`*^9, 3.680837663336501*^9, 3.680839525409697*^9, {
   3.680847646797854*^9, 3.680847652520033*^9}, 3.68085749805475*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"INITIAL", " ", "HAMILTONIAN"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"one", "[", 
      RowBox[{"n_", ",", "d_"}], "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{
       RowBox[{"1", "+", 
        RowBox[{"0", 
         RowBox[{"Range", "[", 
          RowBox[{"n", "-", 
           RowBox[{"Abs", "[", "d", "]"}]}], "]"}]}]}], ",", "d"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0", ":=", 
     RowBox[{"Vmat", "+", 
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox["\[HBar]c", "2"]}], 
        RowBox[{"2", " ", "\[Mu]"}]], " ", 
       FractionBox["1", 
        SuperscriptBox["dr", "2"]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"one", "[", 
          RowBox[{"len", ",", 
           RowBox[{"-", "1"}]}], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"one", "[", 
           RowBox[{"len", ",", "0"}], "]"}]}], "+", 
         RowBox[{"one", "[", 
          RowBox[{"len", ",", "1"}], "]"}]}], ")"}]}]}]}], ";"}]}]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SCATTERING SOLUTIONS", "Section",
 CellChangeTimes->{{3.680493373029624*^9, 3.680493376576358*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"SCATTERING", " ", "SOLUTION"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", 
      RowBox[{"En_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{"Sqrt", "[", 
      FractionBox[
       RowBox[{"2", "\[Mu]", " ", "En"}], 
       SuperscriptBox["\[HBar]c", "2"]], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"wavescat", "[", 
      RowBox[{"En_", ",", "r_", ",", "\[Delta]_", ",", "l_"}], "]"}], ":=", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"Exp", "[", 
       RowBox[{"I", " ", "\[Delta]"}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Delta]", "]"}], 
         RowBox[{"SphericalBesselJ", "[", 
          RowBox[{"l", ",", 
           RowBox[{
            RowBox[{"k", "[", "En", "]"}], " ", "r"}]}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Delta]", "]"}], " ", 
         RowBox[{"SphericalBesselY", "[", 
          RowBox[{"l", ",", 
           RowBox[{
            RowBox[{"k", "[", "En", "]"}], " ", "r"}]}], "]"}]}]}], ")"}]}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Bscat", "[", 
       RowBox[{
        RowBox[{"En_", "?", "NumericQ"}], ",", 
        RowBox[{"\[Delta]_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"k", "[", "En", "]"}], " ", "rmax", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Delta]", "]"}], " ", 
              RowBox[{
               SubscriptBox["\[PartialD]", "x"], 
               RowBox[{"SphericalBesselJ", "[", 
                RowBox[{"l", ",", "x"}], "]"}]}]}], "/.", 
             RowBox[{"x", "\[Rule]", 
              RowBox[{
               RowBox[{"k", "[", "En", "]"}], " ", "rmax"}]}]}], ")"}], "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Delta]", "]"}], " ", 
              RowBox[{
               SubscriptBox["\[PartialD]", "x"], 
               RowBox[{"SphericalBesselY", "[", 
                RowBox[{"l", ",", "x"}], "]"}]}]}], "/.", 
             RowBox[{"x", "\[Rule]", 
              RowBox[{
               RowBox[{"k", "[", "En", "]"}], " ", "rmax"}]}]}], ")"}]}], 
          ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Delta]", "]"}], 
            RowBox[{"SphericalBesselJ", "[", 
             RowBox[{"l", ",", 
              RowBox[{
               RowBox[{"k", "[", "En", "]"}], " ", "rmax"}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Delta]", "]"}], 
            RowBox[{"SphericalBesselY", "[", 
             RowBox[{"l", ",", 
              RowBox[{
               RowBox[{"k", "[", "En", "]"}], " ", "rmax"}]}], "]"}]}]}], 
          ")"}]}], ")"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bscat", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", 
       RowBox[{"\[Delta]_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       FractionBox["rmax", 
        RowBox[{"wavescat", "[", 
         RowBox[{"En", ",", "rmax", ",", "\[Delta]", ",", "l"}], "]"}]], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"wavescat", "[", 
          RowBox[{"En", ",", "r", ",", "\[Delta]", ",", "l"}], "]"}], ",", 
         "r"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{"r", "\[Rule]", "rmax"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "HAMILTONIAN", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hnewscat", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", 
       RowBox[{"\[Delta]_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"H", "=", "H0"}], ";", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"[", 
          RowBox[{"len", ",", "len"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"Vmat", "[", 
          RowBox[{"[", 
           RowBox[{"len", ",", "len"}], "]"}], "]"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"-", 
            SuperscriptBox["\[HBar]c", "2"]}], 
           RowBox[{"2", " ", "\[Mu]"}]], " ", 
          FractionBox["1", 
           SuperscriptBox["dr", "2"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dr", " ", 
             FractionBox[
              RowBox[{"Bscat", "[", 
               RowBox[{"En", ",", "\[Delta]", ",", "l"}], "]"}], "rmax"]}], 
            "-", "1"}], ")"}]}]}]}], ";", "H"}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"RETURNS", " ", "EIGEINVALUE"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"eigenvscat", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "i_", ",", 
       RowBox[{"\[Delta]_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eval", ",", "evec"}], "}"}], "=", 
        RowBox[{"Transpose", "@", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Eigensystem", "[", 
             RowBox[{"Hnewscat", "[", 
              RowBox[{"En", ",", "\[Delta]", ",", "l"}], "]"}], "]"}], "]"}], 
           ",", "First"}], "]"}]}]}], ";", 
       RowBox[{"eval", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"FINDS", " ", "ENERGY", " ", "LEVEL", " ", "AND", " ", "PHASE"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"findnd", "[", "En_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"phase", "=", 
          RowBox[{"List", "[", "]"}]}], ",", 
         RowBox[{"n", "=", "1"}]}], "}"}], ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"eigenvscat", "[", 
                 RowBox[{"{", 
                  RowBox[{"En", ",", "n", ",", "\[Delta]", ",", "l"}], "}"}], 
                 "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Delta]", ",", "0.", ",", "\[Pi]", ",", "0.01"}], 
                "}"}]}], "]"}], "]"}], "<", "En"}], ",", 
           RowBox[{
            RowBox[{"n", "++"}], ";"}]}], "]"}], ";", 
         RowBox[{"phase", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"eigenvscat", "[", 
                RowBox[{"{", 
                 RowBox[{"En", ",", "n", ",", "\[Delta]", ",", "l"}], "}"}], 
                "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "\[Delta]"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"\[Delta]", ",", "0", ",", "\[Pi]", ",", "0.001"}], 
             "}"}]}], "]"}]}], ";", 
         RowBox[{"\[Delta]", "=", 
          RowBox[{"phase", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"phase", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"Nearest", "[", 
                  RowBox[{
                   RowBox[{"phase", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "En"}], 
                  "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}], 
           "]"}]}], ";", 
         RowBox[{"{", 
          RowBox[{"n", ",", "\[Delta]"}], "}"}]}], ")"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"findnd", "[", 
      RowBox[{"En_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", "=", "1"}], "}"}], ",", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"eigenvscat", "[", 
               RowBox[{"En", ",", "n", ",", "x", ",", "l"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0.", ",", "\[Pi]", ",", "0.1"}], "}"}]}], 
             "]"}], "]"}], "<", "En"}], ",", 
          RowBox[{
           RowBox[{"n", "++"}], ";"}]}], "]"}], ";", 
        RowBox[{"\[Delta]", "=", 
         RowBox[{"x", "/.", 
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eigenvscat", "[", 
              RowBox[{"En", ",", "n", ",", "x", ",", "l"}], "]"}], "\[Equal]",
              "En"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0.", ",", 
              RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}]}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Delta]", "<", "0"}], ",", 
          RowBox[{"\[Delta]", "=", 
           RowBox[{"\[Pi]", "+", "\[Delta]"}]}]}], "]"}], ";", 
        RowBox[{"{", 
         RowBox[{"n", ",", "\[Delta]"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"MATCHES", " ", "AMPLITUDE", " ", "AND", " ", "PLOTS"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"constscat", "[", "i_", "]"}], ":=", 
     FractionBox[
      RowBox[{"evec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], 
      RowBox[{"wavescat", "[", 
       RowBox[{
        RowBox[{"eval", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "rmax", ",", "\[Delta]", ",", 
        "l"}], "]"}]]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"wvplot", "[", "En_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{
          RowBox[{"findnd", "[", "En", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"\[Delta]", "=", 
         RowBox[{
          RowBox[{"findnd", "[", "En", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eval", ",", "evec"}], "}"}], "=", 
        RowBox[{"Transpose", "@", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Eigensystem", "[", 
             RowBox[{"Hnewscat", "[", 
              RowBox[{"En", ",", "\[Delta]", ",", "l"}], "]"}], "]"}], "]"}], 
           ",", "First"}], "]"}]}]}], ";", 
       RowBox[{"Print", "[", 
        RowBox[{"{", 
         RowBox[{"En", ",", 
          RowBox[{"eval", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", "n", ",", "\[Delta]"}], "}"}],
         "]"}], ";", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"rlist", ",", 
              RowBox[{
              "evec", "\[LeftDoubleBracket]", "n", 
               "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", 
              RowBox[{"Re", "[", 
               RowBox[{
                RowBox[{"constscat", "[", "n", "]"}], " ", 
                RowBox[{"wavescat", "[", 
                 RowBox[{
                  RowBox[{"eval", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], ",", 
                  RowBox[{"Range", "[", 
                   RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", 
                  "\[Delta]", ",", "l"}], "]"}]}], "]"}]}], "}"}], "]"}]}], 
          "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.6804224593223877`*^9, {3.6804301198261547`*^9, 3.680430144458576*^9}, {
   3.680430430343828*^9, 3.680430544799755*^9}, {3.680430644682653*^9, 
   3.680430732963834*^9}, {3.680431100002173*^9, 3.680431108185492*^9}, {
   3.680431248963966*^9, 3.68043127818853*^9}, {3.680431378286174*^9, 
   3.680431506512566*^9}, {3.680431572353176*^9, 3.680431601074061*^9}, {
   3.680432012479787*^9, 3.680432016784362*^9}, {3.68043213137788*^9, 
   3.680432206715345*^9}, {3.680432308869207*^9, 3.6804323090770197`*^9}, {
   3.6804323571333923`*^9, 3.6804323572532587`*^9}, 3.680432483961399*^9, {
   3.68043286865368*^9, 3.680432890349701*^9}, {3.680432925302455*^9, 
   3.680432932038418*^9}, {3.6804330636080437`*^9, 3.680433088696362*^9}, {
   3.680433180529482*^9, 3.680433195649756*^9}, {3.680433293483571*^9, 
   3.680433304403652*^9}, {3.680437056612307*^9, 3.6804370569238653`*^9}, {
   3.680492215015047*^9, 3.6804922238631973`*^9}, {3.6804924477222233`*^9, 
   3.6804925295318403`*^9}, {3.680492968313734*^9, 3.680492968889697*^9}, {
   3.68049301130617*^9, 3.680493047650674*^9}, {3.680493188406488*^9, 
   3.6804933696002607`*^9}, {3.68049341608704*^9, 3.68049357299198*^9}, {
   3.680493631961183*^9, 3.680493638217081*^9}, {3.6804938954049263`*^9, 
   3.6804938977327127`*^9}, {3.680496558276001*^9, 3.680496560250619*^9}, {
   3.680500017432419*^9, 3.6805000178328123`*^9}, {3.68050355159664*^9, 
   3.680503553236487*^9}, {3.680603939581233*^9, 3.680603953284528*^9}, {
   3.680604007173369*^9, 3.6806040493582973`*^9}, {3.680604303282702*^9, 
   3.6806043051142607`*^9}, {3.680605149927103*^9, 3.6806052129594193`*^9}, {
   3.680605351212398*^9, 3.6806054232990294`*^9}, 3.680605762784666*^9, 
   3.680605818513176*^9, {3.680606111901723*^9, 3.6806061523255463`*^9}, {
   3.6806062735919647`*^9, 3.680606309711711*^9}, {3.680606370936944*^9, 
   3.680606376769084*^9}, {3.680606419649418*^9, 3.680606423953417*^9}, {
   3.6806064594185133`*^9, 3.680606463657946*^9}, {3.6808423957916107`*^9, 
   3.680842397582231*^9}, {3.680843168824945*^9, 3.680843176927113*^9}, {
   3.6808437234800673`*^9, 3.680843725686363*^9}, 3.6808439834914417`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rmaxx", "=", "50."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"wvplot", "[", "1.30748", "]"}], "//", "Timing"}]}], "Input",
 CellChangeTimes->{{3.680433373868791*^9, 3.6804333746598167`*^9}, 
   3.680435854489259*^9, {3.680436959498003*^9, 3.680436963481512*^9}, {
   3.6804370529151783`*^9, 3.680437053114812*^9}, {3.680491835440606*^9, 
   3.68049183593636*^9}, {3.680493580672111*^9, 3.680493583479937*^9}, {
   3.6805035600119133`*^9, 3.680503562539624*^9}, {3.6805042099500313`*^9, 
   3.680504212021035*^9}, {3.680604323561583*^9, 3.680604325001102*^9}, {
   3.680605273439784*^9, 3.680605274727408*^9}, {3.680606243406543*^9, 
   3.68060624589408*^9}, {3.6806065039542713`*^9, 3.680606505089884*^9}, {
   3.6808575162760277`*^9, 3.680857557761392*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.30748`", ",", 
   RowBox[{"1.3074800000000042`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", "1", ",", 
   RowBox[{"1.227819659797211`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.6806061746943893`*^9, 3.680606260354149*^9, {3.68060629933379*^9, 
   3.680606327114455*^9}, 3.6806063952638693`*^9, 3.680606445473871*^9, 
   3.6806064806249638`*^9, 3.680606518870819*^9, 3.68083769864006*^9, {
   3.680857545976334*^9, 3.680857569289034*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"15.95668`", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.002777777777777778], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw92HlcTfn/B/D25bbdpWSP7GNfIlLvN0K+1mxlREqJMRQqo0xCUUYLJUnL
3e+t23LvEDJlZEsLsqSESmUpZYo2rb/kfX/nnx6n7v2cz/v1fJ9P53NGu3qu
d1dTUVFpUVVR+fHT3zh9+Tu/ILCfcGycDvOlzc/zaHC9AIVyozabGyODP9vf
SAThhOjljcU68PPvQijZYKk/0nAQxF36cSSDb+TtVpMFoyFr4PPpMGJPKLe8
aCL0n/T/RgFHrcSyXZUz6PtXoZE/axxfey4wSgVe1ozr8GRTQ2FOhRUMDHcp
C8wOntk8btYimOQUcad1YjacXGG8/0OhLfyczy1ofX03Z1u2HQj7v10quA1O
L7+4ovpqaBi4Xi4cSuScGlm8DubM/nHchTuTnPr+XLGBrn8PEhOWhkc0boK7
rRP7r3AfDo9Y0Doq2xH0BuaTB83x3oXdV7fC+oELPoTwF5GB9aXbqd58+Nw+
YYYD2wWq/X4MWADsb3aFQY9cab5F4JaRO2Rbghsc+DE9r0ewo6vvYs7xXZTP
Y1j0q/H8E367QWXgKAaveaZ7gk//RvUUw69fJUZc6e9g9+7HBZ7ClqTg88lv
91N9T2GrbFSDVZQXRN75UcAzCG8JEnnmHoCBcmc/hzEeD/dt+X4QBsopfQ6X
mBpq1Qu8qf4XUJkd794c7ANmP6YzsgRuZpXX7C/3pTxKYHJpGGuR5R/gsevH
8RKGnMl5vDrpCOVTCtxB7nZ+Rv7wYzTj9FLwEVl1poQcpbzKIHxCiPwuIwDa
fgzXWgaP6lXOSC4co/xewdwdr4/GRweCzUADlMPkwuDaVNfjlGc55MwsP9s6
5wQMTC/4NTwxr7myS+8k5fsGJjp+XNr0/iQ8KvpxvIE0W/+K4/eCKO+3ADqx
+QxJMJgMTLAC/K9f1/ALO0X5V0BZbRvcOnwaBoZzqoT9jlaV991DyKMKDtQ6
dwU4hFI9VfB2kfvO0lVnyKcKyqslCdlL/6L6qsBaPLRu2OKz5PUOPB1P2VQv
CqN630FJwyP7bttw8nsH+7bOi9q8MoLqrwavU06x+3+JJM9q0KsS6d2SR8LP
4arh9p5RfhGW58i3Bir3rblclnuO8qmBcfOtdCJWnSfvGph5fspCadl5yqsW
rOduvjBkVxT514Lm2ohNZS1RlF8tPHupK3gVFE398B6SKvRC2YMuUJ7v4W1y
Ssdh6QXqj/fwNfp0fq9VDOX7AcZmhd+8XBxD/fIB9i6+fnDJrouU9wco/O3+
8frui3S/fwRjQ0OX4OhYyv8jaBdYeetMvUT99BH8Ek0Yux9cIo9P4Nm3bFvs
jjjy+ARFqyddCOuKI49PcF0a/sDq4mXy+AT3GeEtMbPjyaMOdMXrWFHF8eRR
B3sOVPWO2Z9AHnUgK2+PsNZPJI96uBz+LOR5SiJ51MPglX1Jr1YkUX/WQ1vq
rGNL6pLI4zO88zFwPWHLJY/PsNkqLjAkmksen0H177WVabVc8miAxmd+1g1z
eOTRAOO6mJutg3nk0QBO14ZVxZXwyKMR8kvHRvSO45NHI2x9xee4+vLJoxGa
/NyH/fuATx5f4FSc2nojUwF5fAFDmyUuqzwE5PEF2vIimz2vC8jjP8hY65py
SFtIHv/BjkEps+wdhOTxH1SxlsxUkwjJowncgrevDmwTUj1N4MhvnnZ/qYh8
mqB34phjBdEiqq8J6tWyPoXWiMirCZofBw/umSmmeptAfcvLnBGBYvJrgt2t
FWfePxJT/c1wIGuixZphEvJshg+hvT72uyWURzOYd7xi1F2VkG8z/PrxSaah
qpTyaYYvX7uts1dJybsZ3oQ1e36+KKW8vsKtkhEjY6ql5P8VBCzr0demJFN+
XyG65LbjUt9k6oevoLhnJbP+N5n+H32FQ/WFWpe0U+h+/QpzhEEu9mtTKN9v
YG5SlrUjJoX65RusG65imvsmhfL+Bo4Pd4X+bi6j/vkGHDScvM1DRvl/g4ah
HWZhMhn10zdwMD8b0/ZFRh4tsNy3Ny9qZip5tIC2YWbH9kOp5NECRRGpf6y/
mkoeLbDhyBvB7pZU8mgBzei46suz08ijBarTe5I/HEgjjxa4dwmOLslII49W
6HAaWZf6OY08WmFk8sLwERPSyaMVWv2Pm0a6pJNHKxS2+UJfXDp5tMJwN+kT
9+fp5NEKS3/v495iZJBHG/x2eFS8xqIM8miDRniQNcs3gzzaQBIzXN02JYM8
2sDGeej52W8zyKMNqt0b7QK05eTRBlrNfmaPzOTk0Q5PpjR8OzlPTh7twD0Y
5stdIyePdpgW2LBjlLucPNqhJkPdV9VfTh7t8HyQ+4lFkXLyaIf5PHenCqGc
PDpgziq72pIbcvLogDTBHo3xRXLy6ACjq3sVRRVy8uiAVymu9XlNcvLoAJ39
alkmagry6ID9QY9mXmUryKMDqv9Z6s0zV5DHdzjDMZO9nqkgj+8gCvfRd0EF
eXyHQze0yqevUZDHd7B84umybKuCPL6DT+6Bbr6Hgjy+w5G9C1m2hxTk0Qlu
z+6wJwYoyKMTvvkPPb46REEenWBz+FPd3+cU5NEJa+dXftocp6D1phPMRthP
tOQryKMTzMe9cdmUrCCPLgi9OMc5LUNBHl1wZL5Jl02mgjy6IGDDNnPdmwry
6IIdG3eVMG4pyKMLjlfGT1qSqyCPLghy27tScVdBHt3ganQ6cON9BXl0A6/z
71+mPFCQRzcYG7EK5/Wf//TohuKqYVqH+z//06MbFjH2SOvuKj264flzh9SI
XKVHNzSavMA9t5QePZBx1fGp702lRw/8wnI2yspUevTAc8vdPTPkSo8e+Pwh
r6syWenRA2k+a0rz+EqPHujuKX9VH6f06IWA1ltvVp5XevTCfbs0py//79EL
pXvTwl8GKD164UqPhY+ut9KjF37jT2k5u1vp0Qt/Hh5S7eGk9OiDXRcOGfPX
Kj36wKOI52a7WOnRB+cKbGSOc5QefXBa82RG3TilRx8kXwrUVTdVevTB0Okj
2+XaSg8VzHi6YZxKhxwG4jZWwRuHnnr1fFTeLyo4wzOcn1kqh4G4rFWwyMJn
qkWe8v5Rwaz2hV9PX5PDQLm7VHBaUJRBlkgOA+X4qeCxsPlXnkXLYWC6ESrY
adk3qOKkHAamI1BBzWOqO2sOymm9UEGtjy5ZdS5yGOAtUsGZDQxoX6dcP1Tw
vlvNFBbK4efypYKi0z21VtOV64kq9n1N1/UfKYeB4Uaq4izvtuinBsr1RRUb
P5lUnOzMgIF4lvef66Vrxb/KoDxV0XNok/jLjQwYmJ6XKlo4TGEGxGZQvqq4
fNMvfSv/yKD9kSruPOmducUxg/JWxW/FtYZSywwYKPeOKobnlEXNG5JB+avi
+1u+ITqd6bQfU0XnvXu/D32dTh5qOG3Bnw/2Z6eThxo2MFbJ1BPTyUMNnzqd
XvbqWDp5qOEr7Tdm//Wv7z891HBGZXGqrW06eajhqvG5G1+NT6f7SQ1HLh3u
naqbTh5qKJfpOec0pJGHGqauiNupV5xGHmr4ZIV34YUraeShhreL7d9uvZhG
HmpoOX14hZN/Gnmo4eUF5axY5zTyUMcky/3Z+rZp5KGOwrqp5jcnppGHOsYr
toYkGaSRhzpeuHTKIvtrKnmoo3lZyQGjslTyUMdpmUtOx+akkoc63v1YkLtZ
kEoe6ji6K8RzRWgqeagjs7i0ytMzlTzU8XCD8+78TankoY7Pu8Zu3bQwlTzU
8TduGJMzJpU8NLAl0KNalZFKHhpov/7TlNHNMvLQwPA/Utd4lcnIQwMP37oi
/fKvjDw0cMQZp8TLEhl5aOC0mm0XfCNk5KGB1WG3WwMOy8hDA60Olk666iwj
Dw1ccHReoomdjDw0kD84I5c/Q0Ye/ee/W2tuHSIjDw0cv133jbWajDw0MPm4
4z//+6x8/tHEq53BQ4+/SCEPTax3+n6wKkf5PKSJry+MwN2SFPLQRNNPDn2m
55TPR5rI6Omd/p9fCnlooj97/YZGtxTy0MT7y7waWP3PWz89NNFKe12g0/wU
8tDEVt61C0VjUshDE//pnp7pYphCHpo4+qDWnmHfk8lDE3VLFlh/r0kmDy10
vHz0387HyeShhVOnmx8zu5lMHlq4ymO0gYcomTy08PU4ne7iyGTy0EL2iNZK
p6PJ5KGFbVmRaxi7k8lDC71ma1WWbUgmDy2MuNU96SEkk4cWan6IzC+drHze
1MKbGmu2aA9OJg8t/LVmgu9mjWTy0MICX+9b95qk5NE/39vvn9q/lZKHNjYU
nbTvyZeShzbavRRXPrgmJQ9tLD7WbJYukJKHNg6as/L635FS8tDG5sTylS/+
lJKHNk6wVQlm75WShzbGzbLX2+coJQ9trHt2LqRmqZQ8tLGpWC7xmS0lD23c
YHbHeMxoKXloY6Nx59HPhlLy0EYHgTT8cbeEPHTQUzTne2G9hDx08NAy0301
ZRLy0EFmYOll4zwJeejg1gxNS+dMCXno4CSc13pHICEPHRyyXy0EzkvIQwdV
h3WKXgRKyEMHx99M1jzhKaHnAR18tPbc9uXbJeShgzeCRu8Zu1pCHjr4ueh6
xeCFEvLQwWxe3JGxkyXkoYOsx60ty4ZKyEMXtz96qR+oKyEPXbxoNSngSYeY
PHTR1uGKlsUnMXno4sxotru8VEweuphsc8NxUZ6YPHRRffoH3sdrYvLQxcVh
MlWBWEweulgpeDf/UIyYPHRx9p2JBo6nxOShi65T39vY+4rJQxefmS2M2r5L
TB666FTKfHJss5g8GCiTq964ukxMHgysWedu3DNXTB4MnPBmucxxgpg8GOg2
f7dtnqmYPBjY5WohtdMRkwcDI+8WJr3pUO4fGXg06WvLiToReTDwXeiQg1bl
yv0kA/Pfb6rWLBSRBwNPHtzBqv5HRB4MtKk5X/gkVUQe/d8//v7t4wQReTBw
+5sGk8pwEXnoYfHR0kUqgSLy0MNU2d4Zsw6IyEMP/RZqKrxdReShhypuUVF5
G0TkoYd7Y2Okv/Tvh3966OF/fiNzE+aKyEMP8wvy0kdNFJGHHi5xubnkyhAR
eejhhbmS9Zv0ROShhyWeD9K1eoTkoYczfUom530RkocedjJNEmOqlPtzfVwd
s7zc+5mQPPTRl5mR6XJPuV/Xx9IjelrbrgnJQx8fdMbydkmF5KGPT6cbOgfE
CclDH9sPx5kIzwrJQx93rqiNLw0Qkoc+jg3XfjT4gJA89HGldnSAx04heejj
qet/nbm7SUge/dff4FIwxU5IHvoY+U+bqWCBkDz0cZLv5dXjpwrJwwA1LPWW
XTMTkocB2u77/c16tpA8DDCtYE1Dl4aQPAzQvzbZXtEuIA8DdCx8/elgvYA8
DHBEhiQc3wrIwwBLTs0ZNbRYQB4G+O6Wnn/fHQF5GODcBtM/mzIF5GGAlsEC
jUapgDwMMCjJoanlsoA8DHDWlQVmOhEC8jBE/Z0ZXuNPCMjDEGNWHLq31kdA
Hoa4ojCh8+RuAXkY4r7GxG93tgrIwxDjZtpE6q8VkIch5vhcUuxYLCAPQxzy
asz8fy0E5GGIIBLqTJwkIA9D9Laaq3Z5uIA8DDFLa6nOYKaAPAxRfCC8J1Fd
QB6GKKgyuz+9nU8ehqgl37S4oJ5PHkZoNbfccX8FnzyMsDZf2DDsGZ88jLCg
sOPds/t88jBC/lW3EVFZfPIwwk3jc086pfHJwwiNVGd0TuPxycMI//Mftotx
gU8eRjhukUXalxA+eRhhcJhP5uujfPIwwm0bhro/9eKThxE27hDzn7jxycMI
+0KrNr505JMHE4+8eOb6fpWyHib6SfOvdCOffJjooL5h+nALPu3nmJiSZp2z
ZBKfvJjo4R279NAIZb1MbHdTyFNYfPJjYrOeycc6TT7t/5hocj3s6YxOHnky
MTfLfMuxLzzKg4ljr5p6lFTzyJeJO95+rp1VyqN8mGi2bkv2xULl+0Imvtyy
sVT9No/yYmJUEWPU4as88u+f34aawGYpj/JjonH+0dqDCTzqByYePpdm0XWO
R3kysX91dT5zikf9wcSsAFw9yp9H+TLxrZNzfban8v0kE4ffDTPf4cajvJl4
YG36O90tPOofJnodKOXcXM2j/Jk45/l6kddiHu2XmVh0L/7E1Hk88mBhZvLO
2KbJPPJgocXu08+zRvHIg4WqrwePDjVRvg9lYbDtlv3bGTzyYKHkXpZ0fh+X
PFj47kl5ztAWLnmw8Jr0r8uqdVzyYOHD8vzpX95yyYOFz6/f3l31jEseLAx6
+XBOWR6XPFj44bzHiZJsLu3fWVgSuQbLFFzyYOFI3LqtSqx8/8vCdpeYh42X
ueTBwjORsw+onOOSBwsNHkYuG3yKSx4sXNlsYWnhzyUPFtbte2Hh4MUlDxbO
FC+bHuDOJQ8W7ouNME75lUseLHywp7ykfK3yfTMLj3cc2clcyiUPFpZ5fkr7
3wIuebDQ4e0DUeh0Lnmw8Le8N1aPxnLJg42b75u6mAzlkgcbXw/+S8vViEse
bPxm5zniigaXPNgo8V8yjdWSRB5sZOfYFdyrUL4fZ6OD84KvgflJ5MHGhA+y
0KVXk8iDjYXRh73ZSUnkwUbL9JyYj6FJ5MHGJbk1L+55J5EHG3c0RXFSnJPI
g40Mm+x5F/+XRB5snPY6bPxZiyTy6P/+H0fvh4xKIg82To617jyrl0QebPR8
n5cS25ZIHmxsDl2fI3uXSB79eYRsHPygKJE82BhvGsT/eD2RPNjoo/pyMVOQ
SB5sDFL9swrCE8mDjX9PqHP1PZJIHmzss8pTXHFLJA82rh2rktm+NpE82Dhv
1Y2Ni60SyYODlYZrj0SNTyQPDu4w3673mZVIHhy01sz6ZteTQB4cZOz/fVja
pwTy4GDFPzl7TV8kkAcHX+z55fHpfxPIg4NTTnpM6U1JIA8OFg5x8fKLSSAP
Drremh/UfTyBPDh4/fuK9UH7EsiDg3semt1nbUkgDw6mmgbkCW0TyIODTUuc
bK1nJJBH/3xi349/PSyBPDi44fkfvwZoJ5AHB+2EkoLx3+LJg4P5FnN3vqiI
Jw8OGiqGMk8XxJMHByc+OJpjcy2ePDhob5Hp0MWLJw8ObtyyujA7LJ48OMi7
0qtx8kg8eXAw5Mjfzavd48mDg2ZjjgeMsI8nDw4O71LENi+MJw9jDJHfnFow
MR7+DyH1dE8=
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.002777777777777778], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
Qvm3mznMybwatW4Z5RNv5ZDXqpGok0D5uNs4aMdvP18QTfnF29n90u+RuWEQ
5edmcOj7p13tXnfKN87icN8v9oqeLeXr7uDQOTnkS4aS8o+zOUy5auamJaT8
3V0cNq4b13meMeUj57D1ynZHp1rdABWPXHa/r61ynTSQ8pPzOBTcndCa2z2A
4g/m+2M/W363C6D4g8ObypXOjj8p/3oPu54nE3rl1VE+eSGHXRHWvPpXlI9d
xD7PaPxlXjXll+/j8OyB2cV5t/0p/mDrqdZxs5MXKd/8IIcDid2GNp70V/E4
xMG/esvy0Qcp//wwu56SgxHuef4Uf3D4cf7Ig6RtlI9ezEG0ou21/an+Kh5H
2XqS/svq7jLKTz/GwTn0r2/9XH+KPzhcmB/TuUs05aufZPPN/IDt8EDKvz/F
5tOXIaYT3Sh/vYTD0/d6pXIbysc/ze4n79GfLBWUz36Gg3vo2ivTeJSff5aN
r/ZJZ9uxlN9exuGybd+tVsMpX/88h8yWrhu5vpTvfoHDslsdpvG6UP7+ReaP
F483WP9V1yNwWHnTe+DI934Uf3D4bBjJa6hQ1ydwsEp+2nis1I/iD+ZfvY1u
swrU9QocojtERBuk+VH8wUHjiUz6MEFdv8Bha9fvd+YF+lH8weHMvjjjfjZ+
VA/HYf+CLQFF5n4qHnc5RLy2mskbpq5vYD5rjo8o0fRT8bjPQeLT3p7X6Ev5
Rmw9jHlmXPSE6jcesvWmT2P3fpd9Kf5gvnpg9HPeQarnqOJw6NrS7w+3+lL8
wUGc+7yH4VKq73jMITZTZBsf6UvxB4dRS1aWlDhRvcdTtn7tOu3zQ+JL8QcH
/eoKjNP3pfiDg+GKsiiPHr6Uv8ThY+Lyj4tbfFQ8XrLnx1H9L2bVUn3LKw6m
FvP+HbnuQ/EHm59j9haeL/ah+IOD57o9V65m+VD8wSF8V3zI1RU+FH+w57Wf
A9eWxfhQ/MFhQdYWxX9uPhR/ML80Na7PgA/FH8xft3grFo7xofiDwxPX6Xpu
vXxUPOo5tNfJTDBs9ab8KDb/Ne6t+f7Km+IPNt6ThwSX3vSmfCkOXMLabvOO
eat4NDN/zBuXPj7bm+IPtv4laH97luxN8Qe7f7/YWKyMpXqnFg5tMxpXG7h7
U/zBnk+W9r95AVT/9ItD8IeKPq5jvCn+YM+LzsLol9pUD/WHPW8khj4L++VF
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
Btz4HyuBNK8=
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->{513.44921875, Automatic},
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 50.}, {-0.005378421973700963, 0.06943081576997329}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.680605447103814*^9, 3.680605568877013*^9, 3.680605814876623*^9, 
   3.680606174780877*^9, 3.6806062604542923`*^9, {3.680606299433588*^9, 
   3.680606327215529*^9}, 3.680606395365399*^9, 3.680606445575426*^9, 
   3.6806064807259483`*^9, 3.6806065189717817`*^9, 3.680837698745414*^9, {
   3.680857548094713*^9, 3.680857569495471*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"phasedata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"findnd", "[", "x", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.5", ",", "2.0", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.680849096466652*^9, 3.680849143712572*^9}, {
  3.68085026882513*^9, 3.680850314609213*^9}, {3.6808540727228413`*^9, 
  3.68085407673076*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"phasedata", ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", "2.0"}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], ",", "Red"}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.680849096466652*^9, 3.680849143712572*^9}, {
  3.68085026882513*^9, 3.680850300510682*^9}, {3.6808590520905037`*^9, 
  3.680859119875533*^9}, {3.680859165863468*^9, 3.6808591883320227`*^9}, {
  3.680859229714102*^9, 3.6808592309827347`*^9}, {3.680859321591283*^9, 
  3.680859408409452*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
nh55TKM/fJ96k5EeefDYk4s8v3q/VI/9P3X6oS0=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.47656250000000006`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->NCache[{None, {{Rational[1, 2] Pi, 
       RGBColor[1, 0, 0]}}}, {None, {{1.5707963267948966`, 
       RGBColor[1, 0, 0]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{726., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5, 2.}, {0, 2.385676289473676}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.680850200243445*^9, 3.680850291729999*^9, 3.680850356872921*^9, 
   3.6808552100008163`*^9, 3.680858427095522*^9, {3.6808590582600727`*^9, 
   3.680859085883705*^9}, 3.680859120410627*^9, 3.680859173036498*^9, 
   3.6808592316728897`*^9, {3.680859327086535*^9, 3.68085940906669*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"findres", "[", "n_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"phase", "[", 
      RowBox[{"y_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"eigenvscat", "[", 
           RowBox[{"y", ",", "n", ",", "x", ",", "l"}], "]"}], "\[Equal]", 
          "y"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0.", ",", 
           RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    RowBox[{
     SubscriptBox["\[Delta]", "res"], "=", 
     RowBox[{"y", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", "y", "]"}], "\[Equal]", 
         RowBox[{"Pi", "/", "2"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "1.3", ",", "1", ",", "1.6"}], "}"}]}], 
       "]"}]}]}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.6808468810888042`*^9, 3.6808468909956417`*^9}, {
  3.680846934612537*^9, 3.680846961132778*^9}, {3.680847194568553*^9, 
  3.680847374282238*^9}, {3.6808584570164757`*^9, 3.680858458266645*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Delta]", "res"], "=", 
  RowBox[{"findres", "[", "1", "]"}]}]], "Input",
 CellChangeTimes->{{3.680847386525696*^9, 3.680847388906041*^9}, {
  3.6808585682661333`*^9, 3.6808585812516108`*^9}}],

Cell[BoxData["1.3944066060459384`"], "Output",
 CellChangeTimes->{3.680847420965599*^9, 3.680858437130547*^9, 
  3.680858493523344*^9, 3.680858610379937*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"funcphasedata", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"phasedata", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Spline\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dfuncphasedata", "=", 
   RowBox[{"funcphasedata", "'"}]}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"funcphasedata", "[", "x", "]"}], ",", 
      RowBox[{"dfuncphasedata", "[", "x", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.5", ",", "2.0"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["\[Delta]", "res"], ",", "Red"}], "}"}], "}"}], ",", 
      "None"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.680849857510713*^9, 3.6808498762348013`*^9}, {
   3.680849914067349*^9, 3.680849916899426*^9}, 3.680853163149538*^9, 
   3.680853299647491*^9, {3.680853888520605*^9, 3.6808538912716923`*^9}, {
   3.680853969705566*^9, 3.68085398831341*^9}, 3.680854159675955*^9, 
   3.680855292396118*^9, {3.680855848205282*^9, 3.6808558854377604`*^9}, {
   3.680855972430798*^9, 3.680855972590219*^9}, {3.680856016536673*^9, 
   3.680856020799489*^9}, {3.680856190786376*^9, 3.680856219466021*^9}, {
   3.680858610648383*^9, 3.680858671299796*^9}, {3.680858746218295*^9, 
   3.680858879872031*^9}, {3.680858917514893*^9, 3.6808590299644327`*^9}, {
   3.6808593551417913`*^9, 3.680859361387748*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwV0Hs01HkABfCZ36+amh4SWdWuZ6XQbm1Siu5PKqtdh0SlQjqs7eGRokJs
D+GUpVRSURR5RCKa8t5sJmWJPEtmNIyQx2A8xvju7B/33PP5756rfcjbzp1i
sVjWivzf8bbe81ksAfwCKrQbepPB+LQ3l9MCiKwFadvHkyGKcngQwRHgTnhF
VOH0FOhXbzJWURIgjcMO5mmkgGc988ByDQFKRzV0B21TULsj8dFvpgIUjE+G
eeSnYOa2us1xpwW45zAceDr0EU6arPf8eVAAcXxCaZpRGgQdGlFZUiH8Yv5U
Kv8xE9GvHmc1dLejzvXIcUl6Nu7vnfXCqOULHrg5CXr6crD1aWj4p1YRxuf1
st9k5mHVplSH1TUdmPteKdT/Mg8Z4d3iqoZObLtwNNh9RiHCI2VuiU1i8MuS
8w3bSpD2KqdN600XhPZuJzokZXApitDsrvqKE7SrSrRHORy7Zji5lHVjzG5f
RZL8NXIq7UK52T1Ql1ZYZTW+wX2fYl+S04udG0QhnnurUGtZ43T/4Tf0vL3D
9wirQVw7e97l9D787qqTmF9bixIjKi0jox9NtyJSY/+ox8IDH7QKrQfgutgg
o0C/CddDnttUVA/A4HlQi2fcR+QVeJ5dYTWIkzbu7s8s25DYnBuZ9W4QsdYG
/JA+IUx3ucZUW0twz9D0bf5FEQI6hLHbX0ugn7hzRGguxnlHSXD7L0Nw6vY9
5RbbDcPOercPfw9BL5e6uYbTh0v/ajGuG4fxU3/niGndANJvyeQLCofR3CjR
GRdK4BOY9nLxuhFU/lqWdeDDMNiM2NGSN4JUdaG3SYcU5gev9M0zkeL2YFKA
Zc0YdOOmnTd8KsXqi87GEf4TqMmdM+a1dhRxJQfVjqpMQlMsPsbJHIVRbhfL
/rAcGv76jRuXjkFPM3/3/qtTEHdO6sYkj8HlWPLdfekEdj5J3uYa42hOSPbw
smQx4R8b41UTx+FMNTy3zGUxB10ElWZLJnDUeenpCa5i3Wbbb+yYCSD+yT7/
3WzGhGUr6VaVgc4LUt2cwGZWtehIV/4lg7EwzG5hM5vpuRH6KVJ5EtSsj1IT
ZYpxzLThXbk2iWwZ1ZZnTjGHW3uvCblyRCvfinp/mGIs+hfZ7o+UQyv1yV3/
aIopXbR4jgFnCumuMX5Xsymm9965ohvBU/BVUfN8/Y5ivnDO7FzGIlghq3ip
10UxQeEWIu4ZgmX8qfUcQjEv7lzlLQ8kqP5SLvFQWJrVdmXLWQKIJ0P4CnvX
B64LOEdQrKK9IIJFM4d0nl36GkHQP/ruu5kUzVgVLl3Jv03wvVpGoXwazagN
TPcKLSQoobS5fC7N7KLttyQWEzzmWUB3Ns1EqyWpFZUSzIp5aBWsMNdsc8lw
OYHDTb/Pa+fQjDzCf75bFYEx6xE3fi7NiHTFOVs+E5xNbQrxmE8z2uvXhTkL
CNJn1ywoVdh5x4X9Ae0Eh9Qdg9SVaabRR3NaTicBT8mvjq9wZdEeB+1+gs6E
5df1VGiG8z55pdkggf0peWuwwltFQ/K9QwRNBUqkXuFibnRK9CjB8SObKi6o
0ozsh88Bj8cV/20L8WpReMMaQxu+jMDMc9e31Qtp5uTWAF2RnIC1pMoiTOGn
e/ijhBD8c4nt26rwfxUwYxU=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVlnk4Vdsbxw+uzM52k0qZNZiacIvwLmXKRSeSIYRcpTKkkilRGYsQpdwy
VXRFRf1IlCKJDOmEkA4Ox5jh7H2Q5Lf6Yz/7+TxrrXe96/t+17u3kqe/7T/8
NBqtFT+/37cZ/gSNxoJC12ubTT0bAAX0f6kVYIElXVws37cB2Fft8+KFWPDV
WalIIqQB1Ft2/rWczoK5l0qmI1cboNxa2GW9PAuIqpDaL1UN0GaZk29lwIKf
iTG0bNlGEDb9ZHQzmAVTF5f7ve5ohNN62323TbPA/c/j+cnuTcAalL9azOuD
9MyY/9lFtEJyzcPi9tF+cLddUBg61AbZjiLPdboGwFvjp/oyPyaYPImO6/nK
htKbrxmB39tBa2eB/ZbWQQgz//ii6+oXKIwb5TS1D8GB+tZ/fr3vgbjEBa+c
Tg4w99wWKdBmwYOakm+K74fBsfeq6laFfjhUFa8w2jQCXkFp792i2OA0vMz1
0OtREPfffT2c4EBJg2206OMxGD580PHw9AhkB7wMXCoZB0fLT+3OSRPQZt7q
mn13AhwzBoNNKqfgZj+f5OX/vgOtq2kV6HLhlQ7/g8LCSbDgGR06LcGDFS5M
xUrrKWiNqjVZrTIPaefL9r5rmQKi7dM4V2ARnr3wPbdxzzS4OQ9+aL9OQzlf
ShOLP0yDd4io6IKqADKw87jWYj0DvZuTVC6NCaLQwb4bZnUzsFEqrlC5QBhd
cJqJ6LfgQmSHhVZUhhh6yok3a7DkwumdcrF/5okhzhklyRIrLmxcp+ubVSSG
rFIZt6MYXBBO2Nxb+EYMrWwsfqHoyAXGTRu7q+Ni6KHB8Tm3I1zQfrt02QvE
UYcC+2R3NI5PJjfFscSRaHGYXk0sF54HzS78MyqODAyW8xXGc6H1Wor3TlIc
5TruSg5N5IJslvtUs5AEOpGSXbw6nQueP3zaMzZJIH4B1zGHu1wIfqM2XhYq
gTSHPnsx33DBSt25s1JcEjVL7c4oqeVCnMjd+x4rJJG/4ePG5DouDCsk2C/K
SaKStIRt1g1cKOCq26/eLIm27wZa3UcuVOu86h5gSKJd2QWZZSwu/NviJVaU
KomcnMPabv3iAu2qwjF9STr6ET0sGEIjoXzEo/LGCjr694m9ngM/CUfgh+bI
WjrqFd6SvXwZCUkCSmuPaNCRVxnb94oECTFTZttazOkoQNpGJGItCTRX0pAR
QUcxzYrIQ58Eg+JfKZ19dFSst0roqAEJj8/Iq68ZpqOOu/RmPyMSrjj4Zlp/
p6ONYb8Ohu8iYcfxDJELP+ioYUPP2RuWJFRzpBKkRQhEj7rxqMmZhLQhbfWt
CgTaMZ4UxHQhoebWXFOTEoHcHWIMu91IqPd898BDlUAlWmcahz1J2L/pooi/
GoH2d9lyBI6TcKL0lI+iNoEytCUV9MNIePlG7cFXEwJV3xEcQudIuKvq4T9h
RqARkcWH5udJmKmz6+NaEEifNaZvf5GEdU3H6tlWBOq58v5AwGUS/L4dyjuw
n0B/zFXLnU0kwcb05Ls1Bwikdbicfe4qjjdmeKPDgUARevmBl6/h/OaF9bUP
Ekhp6FLS/UwSGGu9r4R6EMhyX7h90W0StsTsk6Q8CRRYeWrt0ywSMrbM7fT2
IlBtqud/r/NI6DQ7e0vzCIHGF51O1t8joTgzPTvqKIFW+Ozb0ZJPQm1xEvXB
h0DegOp6CknIPcu8bHaCQEn/bU8cKCLhmJZS02lfApWt2Lx/9BEJdX46rjf9
CCQ8Ltc/W0oCkVbs8zaAQP9lLCz+WUkC8pnWfnCaQLqM72tnq0hQTK/QDTuD
9RLq29n9Cp/vQEWdSRCB2oPqQvJqSCi45Xr95VkCeWx6nhH7loSptXyf/YJx
voOFZcffkSCs250rE0IgAfsUSruRhLl12uNWoTg/8UvSq5pICD61+0g3Ztna
IO2fzSQkxNQ6e4QR6F6Yjy2rlYQIl5UVvZi3aLucrG0jwZTaGW0XTqAXozbJ
BUwSvjO2Vb7CbJZr/OhKO/av/w83lXME+uik0xzQScIAI803ArOL1IaJ/V1Y
b2qJ04qZU79aXK8H18/FsFk2AusfKa4h14vrE2Ol6IJ5cfvSHj4WCdtOafWm
YY6bnD462EeCtApL6C3m5fns2PcDJFSme90ex3zHreN+0SAJJo0Vd8TOE0hN
puFtCgfrVdMvpoz5aVMl+8wICT8jetibMUP0IwHnMazPYr6aLuYGg1xlowkS
VhmZdm3FbE+mGStPYr2Mn/LWYWYVxrovm8b3Q5iKkMJ8/HDo+dEZEtxThU6R
eH+erO+dZhLr3zvW1oz5QtuhqhIeCbKWstnZmCUSbHuuz5Hw0T9uwAdzhrHp
QugPvH9ixR11zKrz22UP/SRhIufxx36sz6PH6nq7f5EQWXwsPBWz/lE5xw00
CipKhu/oYX6rQJwV46fg32J1vU6sP6OD//qkAAWiuVv+9sPsbTb8qUyIAvGA
uPZIXL/pxa6ZTBEKjlp27V3E9Q5/1iQVKUbBpbVT6CTmVNXSvRZ0CsLzjyQA
9otczz0/TSk87v6+/yb2U8G1jERiOYX7/WTJGPbbS/6Ixk4ZChhOMRVnsB/3
VASMVq6igDU1O12E/co8eVgkR5YCxUitnK/Yz6MsC3MfeQoCotneKqcIdCZj
p7e1IgWDUnMpeoEEojE2RW9VpiD7bIOf+UkCrXy1vGZ+HQUlewWRpT+BcoOW
9X/dQIHNG18dwPdn06Z52hs1CtySXLs18P0yud1rlKBFQZr2JzR+jEABYQ8q
ZHVxPk9kjol443oErvfdsJ0CnQMaWVn4fqf55Cno6FHQcytpueZhAj13uH3J
2pCCAkHjig3uBOLXSbGJNMV6udsvPXAikLSGJF+iOT6/8LdNM7i/rFe+XHpz
DwUaS6FtW3D/+ZuIXlVqTcEazhtItcXxx4P7B+0pePo67OmgJYHuD1BpMw4U
OEYHugzg/lbeFWi+5ERB8tPxFx24/32tP/FwlRsFD+2P59zdhePfcw/625uC
qdyUZS16eL6rheiTIArUhfREfdZjv+5/W1kVjPMfM/mHqYL749+7/BtCKXg3
pSm3HfdnPn0D5kAEBWznlLz+NbjfyWy5IxNLgdXjQtE2As9vXrkt/AYFj19Z
XVKdoSM+xHEyL8d6zVqm9cXQ0QWmXrBlBQXVAzId78/TkYDPlevWlRSgMKP5
3GA6Ekzd+smuGtfrYXb3hmN0JMIOs3Kvp2BYSdP2ohUdScURENJJQUZ8PP8z
/L1TatVTLZyj4G7yYol2vCQydr/yXVKPBwxjjRoNFwmkatzlNanPA1aczaUP
thJIWHljd4sBD2inVw577ZFArQM175IRD9SPKnAi/pJAbkcWsv+04IH0JM/O
k5BAoX7H7GQceFCf15nPeSOOSsItyuXO8GAqy75WTkUcqdz844LmEx4kT0QF
tzFFUWup+Jyf9izIv2bGDfYKIQUO54RQ0Sxkl95qyVIRRPJB6h36qnPg7jVV
nZvDjzhDP1Wu3ZuDgHzBoRgtGrINyPU3lp8HZNYCi7Y/Ia6747Z0zjzs4FtJ
MOLwukOsBsM1P+Cv8g9HOsMp4BgxJviu/YCTviOZISMzoEdjzIxKL8B4+UhZ
9MUp0OpS5qklLUCBx/OjsHkCxtKjexKlfgLra7Cl6a0RcCraW34l9SeghA1+
S2lD4PN1PLVPdBGQ94cXa1TYsHtyNeNg4iLQnp0t0Wf2QfVqWXENoV9ACxpl
LrK/wXhWVFV6xC+IPNyfPpvXAwNCIfvW0ZaApvPobnfMFwiP280WDcH8Ueow
RbbD88yU8vVhSxAZnOO6brQdeMXfruw6h8fHt007f2sH/89huqFRmHccHGh/
3w6eyk9jRuKXwOTfJBuprHbYU6mqVn8Lr68PT4+1bAeZKUG/6MolYGnqn/e/
9xnsBPbvynm5BNUPba/vyfwMyTK5MlXVmFPCn21M+QyihkavyNolQNF/iPPC
P8NifBDh1YTjyQ+ubtr/GdgqnJJdvXh/0ZHyE4KfQWm7bqwbC3P9yn03Fpjg
ZnnxYGj/73wdpuummdARoPBHyRBmd3FL3V4mNFQ52CtNYp4xdbEpY4LQx3tq
htOY25Z0corw/z6bu+jIxSzduGI+jwkvRZPvJ8/+jp8+WZbMhAW53tCH87/1
Sx+Wj2XCjq2ae+sXMAvfH0k4x4TTJqEq7MXf+tTPLJxiwhOH+tmlJcydCwKB
x5jwf5DFRFk=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.6000000000000001, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{{1.3944066060459384`, 
      RGBColor[1, 0, 0]}}, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{533., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.5, 2.}, {0., 4.124226237180899}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.680855304336458*^9, 3.680855846619293*^9, {3.680855877819531*^9, 
   3.680855885803811*^9}, {3.6808559985490026`*^9, 3.680856021351102*^9}, 
   3.680856220244144*^9, {3.680858623771412*^9, 3.680858639960702*^9}, 
   3.680858672851179*^9, 3.68085878546294*^9, {3.680858818577733*^9, 
   3.680858829339715*^9}, {3.6808588738933887`*^9, 3.6808588804679413`*^9}, {
   3.680858921214861*^9, 3.680858937691805*^9}, {3.680858969358975*^9, 
   3.680858975733376*^9}, {3.680859013792292*^9, 3.6808590306940193`*^9}, {
   3.680859356561607*^9, 3.680859361803726*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["1", 
  StyleBox[
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"funcphasedata", "[", "x", "]"}], ",", "x"}], "]"}], "/.", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"findres", "[", "1", "]"}]}]}],
   FontWeight->"Plain"]]], "Input",
 CellChangeTimes->{{3.680855414706579*^9, 3.680855420452979*^9}, {
  3.6808556868025217`*^9, 3.680855695073987*^9}, {3.680855753060021*^9, 
  3.6808557532672567`*^9}, {3.680855898526195*^9, 3.680855920416067*^9}, {
  3.680855967478841*^9, 3.680855968126485*^9}, {3.6808560356168947`*^9, 
  3.680856037032143*^9}}],

Cell[BoxData["0.2766699809790074`"], "Output",
 CellChangeTimes->{3.680855724447871*^9, 3.6808557833661613`*^9, 
  3.680855950861974*^9, 3.680855998469925*^9, 3.6808594489815273`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RESONANCE STATES", "Section",
 CellChangeTimes->{{3.68049963133504*^9, 3.680499640130438*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"RESONANCE", " ", "SOLUTION"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", 
      RowBox[{"En_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{"Sqrt", "[", 
      FractionBox[
       RowBox[{"2", "\[Mu]", " ", "En"}], 
       SuperscriptBox["\[HBar]c", "2"]], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"waveres", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "r_", ",", "l_"}], "]"}], ":=", 
     
     RowBox[{"SphericalHankelH1", "[", 
      RowBox[{"l", ",", 
       RowBox[{
        RowBox[{"k", "[", "En", "]"}], " ", "r"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bres", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
     RowBox[{
      FractionBox["rmax", 
       RowBox[{"waveres", "[", 
        RowBox[{"En", ",", "rmax", ",", "l"}], "]"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"waveres", "[", 
           RowBox[{"En", ",", "r", ",", "l"}], "]"}], ",", "r"}], "]"}], "/.", 
        RowBox[{"r", "\[Rule]", "rmax"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "HAMILTONIAN", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hnewres", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"H", "=", "H0"}], ";", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"[", 
          RowBox[{"len", ",", "len"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"Vmat", "[", 
          RowBox[{"[", 
           RowBox[{"len", ",", "len"}], "]"}], "]"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"-", 
            SuperscriptBox["\[HBar]c", "2"]}], 
           RowBox[{"2", " ", "\[Mu]"}]], " ", 
          FractionBox["1", 
           SuperscriptBox["dr", "2"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dr", " ", 
             FractionBox[
              RowBox[{"Bres", "[", 
               RowBox[{"En", ",", "l"}], "]"}], "rmax"]}], "-", "1"}], 
           ")"}]}]}]}], ";", "H"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"RETURNS", " ", "EIGENVALUE"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eigenvres", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "i_", ",", "l_"}], "}"}], "]"}],
     ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eval", ",", "evec"}], "}"}], "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Eigensystem", "[", 
            RowBox[{"Hnewres", "[", 
             RowBox[{"En", ",", "l"}], "]"}], "]"}], "]"}], ",", "First"}], 
         "]"}]}]}], ";", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"eval", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "i", ",", "l"}], "}"}]}], 
     ")"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"eigenvres1", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "i_", ",", "l_"}], "]"}], ":=", 
     
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eval", ",", "evec"}], "}"}], "=", 
        RowBox[{"Transpose", "@", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Eigensystem", "[", 
             RowBox[{"Hnewres", "[", 
              RowBox[{"En", ",", "l"}], "]"}], "]"}], "]"}], ",", "First"}], 
          "]"}]}]}], ";", 
       RowBox[{"eval", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6805000385526037`*^9, 3.6805000468476152`*^9}, {
  3.680501096542554*^9, 3.680501098062717*^9}, {3.680502334377017*^9, 
  3.680502340201043*^9}, {3.6805023808736467`*^9, 3.6805024082342777`*^9}, {
  3.6805028361446123`*^9, 3.680502876185357*^9}, {3.680502918658387*^9, 
  3.680502923714177*^9}, {3.680839507931978*^9, 3.6808395650924*^9}, {
  3.6808416388463593`*^9, 3.680841641365535*^9}, {3.680841958921052*^9, 
  3.680841964576708*^9}, {3.680842003609765*^9, 3.6808420100255537`*^9}, {
  3.680842073210662*^9, 3.680842086043502*^9}, {3.6808421859479933`*^9, 
  3.680842187898958*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "10"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evals", "=", 
   RowBox[{"List", "[", "]"}]}], ";", 
  RowBox[{"evecs", "=", 
   RowBox[{"List", "[", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6808395711963873`*^9, 3.6808395731799507`*^9}, {
  3.680839829111494*^9, 3.68083983295922*^9}, {3.6808406852657022`*^9, 
  3.6808406863934307`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"RETURNS", " ", "EIGENSYSTEM"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"En", "=", 
    RowBox[{
     RowBox[{"x", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Im", "[", 
          RowBox[{"eigenvres1", "[", 
           RowBox[{"x", ",", "n", ",", "l"}], "]"}], "]"}], "\[Equal]", 
         RowBox[{"Im", "[", "x", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"0.1", "+", 
           RowBox[{"0.", "I"}]}], ",", "0.", ",", "V0"}], "}"}]}], "]"}]}], "//",
      "Timing"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"En", "=", 
     RowBox[{
      RowBox[{"NestWhileList", "[", 
       RowBox[{"eigenvres", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "n", ",", "l"}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", 
            RowBox[{"Abs", "[", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ">", 
          "\[Epsilon]"}], "&"}], ",", "2", ",", "10"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"evals", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"evals", ",", "En"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"evecs", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"evecs", ",", 
       RowBox[{"evec", "[", 
        RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQ3fTw1QKGnNeOTlVHFoLoJ7bJq0D0jBnsa0H0m3Ph
+0D0jnXRZ0G0WrHE5yVA2iMo6DuI/reT8Q+Ijr8Y8BdET5BV51gKpDd8OykA
onkyL4uB6GPVdnIgWmF5ixqIfmDZaQii00pPxoDleyVjQXT1aeUkEC29ti4Z
RLNI6RaA6MjsqjoQvfTmyRYQHaFzuA1EN8zM6AbRHMfuQOhHU2aC6Oiq5Fkg
eo/aqiUg+vHbF8tBtMNP2x0g2u6zxk4Q/XC6+D4QHWM+6QiInqCW/QpE78ua
9g5Ez9ry7TOItpryB0wrMUr8AtEzph37D+aveSa4DEgHxP4UA9Fcq6rkQLSz
bqE8iDa9oKACooufpmiD6B/qPhYg+vuEl1YgGgA9UcrD
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MATCHES", " ", "AMPLITUDE"}], " ", "&"}], " ", "PLOTS"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"constres", "[", "i_", "]"}], ":=", 
     FractionBox[
      RowBox[{"Abs", "[", 
       RowBox[{"evecs", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], 
      RowBox[{"Abs", "[", 
       RowBox[{"waveres", "[", 
        RowBox[{
         RowBox[{"evals", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "rmax", ",", "l"}], "]"}], 
       "]"}]]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rmaxx", "=", "10."}], ";"}], "\n", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"rlist", ",", 
            RowBox[{"Abs", "[", 
             RowBox[{
             "evecs", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "]"}]}], "}"}], "]"}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", 
            RowBox[{
             RowBox[{"constres", "[", "i", "]"}], 
             RowBox[{"Abs", "[", 
              RowBox[{"waveres", "[", 
               RowBox[{
                RowBox[{"evals", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"Range", "[", 
                 RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", "l"}],
                "]"}], "]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "evals", "]"}], ",", "1"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.680503075700597*^9, 3.680503091420573*^9}, {
  3.680503468546356*^9, 3.680503483730632*^9}, {3.680842233029224*^9, 
  3.680842268452716*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 1, 1}}, Typeset`size$$ = {
    360., {110., 115.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$39413$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$39413$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListLinePlot[{
         Transpose[{$CellContext`rlist, 
           Abs[
            Part[$CellContext`evecs, $CellContext`i$$]]}], 
         Transpose[{
           
           Range[$CellContext`rmax, $CellContext`rmaxx, $CellContext`dr], \
$CellContext`constres[$CellContext`i$$] Abs[
             $CellContext`waveres[
              Part[$CellContext`evals, $CellContext`i$$], 
              
              Range[$CellContext`rmax, $CellContext`rmaxx, $CellContext`dr], \
$CellContext`l]]}]}, PlotRange -> All], 
      "Specifications" :> {{$CellContext`i$$, 1, 1, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {154., 159.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.680503474372981*^9, 3.680503485165896*^9}, 
   3.6808377310134783`*^9, 3.680842356827004*^9, 3.680859502380994*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["evals"], "Input",
 CellChangeTimes->{{3.680504200390379*^9, 3.680504200860732*^9}, {
  3.680847502100211*^9, 3.680847514071333*^9}, {3.6808595072382383`*^9, 
  3.680859508119041*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.3074818226700369`", "\[VeryThinSpace]", "-", 
   RowBox[{"0.2353115227324169`", " ", "\[ImaginaryI]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.680504201280992*^9, 3.680837738611474*^9, 3.6808423637843513`*^9, {
   3.680847502995522*^9, 3.6808475150164623`*^9}, {3.680859505922493*^9, 
   3.680859508467085*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["BOUND SOLUTIONS (l=0)", "Section",
 CellChangeTimes->{{3.680493744409877*^9, 3.680493748116157*^9}, {
  3.6805015455889893`*^9, 3.680501550293067*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"BOUND", " ", "SOLUTION"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Kappa]", "[", "En_", "]"}], ":=", 
     RowBox[{"Sqrt", "[", 
      FractionBox[
       RowBox[{"2", "\[Mu]", " ", 
        RowBox[{"Abs", "[", "En", "]"}]}], 
       SuperscriptBox["\[HBar]c", "2"]], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"wavebound", "[", 
      RowBox[{"En_", ",", "r_", ",", "l_"}], "]"}], ":=", 
     RowBox[{"SphericalHankelH1", "[", 
      RowBox[{"l", ",", 
       RowBox[{"I", " ", 
        RowBox[{"\[Kappa]", "[", "En", "]"}], " ", "r"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bbound", "[", 
      RowBox[{"En_", ",", "l_"}], "]"}], ":=", 
     RowBox[{
      FractionBox["rmax", 
       RowBox[{"wavebound", "[", 
        RowBox[{"En", ",", "rmax", ",", "l"}], "]"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"wavebound", "[", 
           RowBox[{"En", ",", "r", ",", "l"}], "]"}], ",", "r"}], "]"}], "/.", 
        RowBox[{"r", "\[Rule]", "rmax"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "HAMILTONIAN", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hnewbound", "[", 
      RowBox[{"En_", ",", "l_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"H", "=", "H0"}], ";", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"[", 
          RowBox[{"len", ",", "len"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"Vmat", "[", 
          RowBox[{"[", 
           RowBox[{"len", ",", "len"}], "]"}], "]"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"-", 
            SuperscriptBox["\[HBar]c", "2"]}], 
           RowBox[{"2", " ", "\[Mu]"}]], " ", 
          FractionBox["1", 
           SuperscriptBox["dr", "2"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dr", " ", 
             FractionBox[
              RowBox[{"Bbound", "[", 
               RowBox[{"En", ",", "l"}], "]"}], "rmax"]}], "-", "1"}], 
           ")"}]}]}]}], ";", "H"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"RETURNS", " ", "EIGENVALUE"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eigenvbound", "[", 
     RowBox[{"{", 
      RowBox[{"En_", ",", "i_", ",", "l_"}], "}"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eval", ",", "evec"}], "}"}], "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Eigensystem", "[", 
            RowBox[{"Hnewbound", "[", 
             RowBox[{"En", ",", "l"}], "]"}], "]"}], "]"}], ",", "First"}], 
         "]"}]}]}], ";", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"eval", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "i", ",", "l"}], "}"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.680493787218643*^9, 3.680493804155751*^9}, {
   3.6804938710911093`*^9, 3.680493948852131*^9}, {3.6804941097265577`*^9, 
   3.680494113717909*^9}, {3.680494509394868*^9, 3.680494509458496*^9}, {
   3.680494734285623*^9, 3.6804947465412903`*^9}, {3.680496579610886*^9, 
   3.680496580954191*^9}, {3.680496895422104*^9, 3.680496899852367*^9}, {
   3.680496960095098*^9, 3.680496970887083*^9}, {3.6804970681203327`*^9, 
   3.680497091616486*^9}, {3.6804971285852127`*^9, 3.6804971339127903`*^9}, 
   3.680497166283012*^9, {3.680497677656063*^9, 3.6804976778237762`*^9}, {
   3.6804977673611393`*^9, 3.680497775289358*^9}, {3.680497852282728*^9, 
   3.680497868346592*^9}, {3.6804979007632933`*^9, 3.6804979017870903`*^9}, {
   3.680498099701664*^9, 3.680498104421687*^9}, {3.680498254103931*^9, 
   3.680498275183907*^9}, {3.680498745678541*^9, 3.680498771886622*^9}, {
   3.680499313126048*^9, 3.680499317397732*^9}, {3.6805000268957253`*^9, 
   3.680500027440053*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "10"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evals", "=", 
   RowBox[{"List", "[", "]"}]}], ";", 
  RowBox[{"evecs", "=", 
   RowBox[{"List", "[", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6804942359992857`*^9, 3.680494236671685*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"RETURNS", " ", "EIGENSYSTEM"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"En", "=", 
     RowBox[{
      RowBox[{"NestWhileList", "[", 
       RowBox[{"eigenvbound", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "V0"}], "/", "2"}], ",", "n", ",", "l"}], "}"}], ",", 
        
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ">", "\[Epsilon]"}], 
         "&"}], ",", "2", ",", "10"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Re", "[", "En", "]"}], "<", "0"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"evals", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"evals", ",", "En"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"evecs", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"evecs", ",", 
         RowBox[{"evec", "[", 
          RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], ";", 
      RowBox[{"n", "++"}], ";", 
      RowBox[{"En", "=", 
       RowBox[{
        RowBox[{"NestWhileList", "[", 
         RowBox[{"eigenvbound", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "V0"}], "/", "2"}], ",", "n", ",", "l"}], "}"}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ">", "\[Epsilon]"}], 
           "&"}], ",", "2", ",", "10"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ";"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.680493969153164*^9, 3.680493994142394*^9}, {
  3.680494072933827*^9, 3.680494078885552*^9}, {3.68049475467763*^9, 
  3.6804947672214622`*^9}, {3.680498814335202*^9, 3.680498815855164*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MATCHES", " ", "AMPLITUDE"}], " ", "&"}], " ", "PLOTS"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"constbound", "[", "i_", "]"}], ":=", 
     FractionBox[
      RowBox[{"evecs", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], 
      RowBox[{"Abs", "[", 
       RowBox[{"wavebound", "[", 
        RowBox[{
         RowBox[{"evals", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "rmax", ",", "l"}], "]"}], 
       "]"}]]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rmaxx", "=", "10."}], ";"}], "\n", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"rlist", ",", 
            RowBox[{
            "evecs", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
            "}"}], "]"}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", 
            RowBox[{
             RowBox[{"constbound", "[", "i", "]"}], 
             RowBox[{"Abs", "[", 
              RowBox[{"wavebound", "[", 
               RowBox[{
                RowBox[{"evals", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"Range", "[", 
                 RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", "l"}],
                "]"}], "]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "evals", "]"}], ",", "1"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.680494020724709*^9, 3.6804940458850527`*^9}, {
  3.680494519499185*^9, 3.6804945227627296`*^9}, {3.680494623300119*^9, 
  3.6804946305560083`*^9}, {3.680494832958509*^9, 3.680494916479332*^9}, {
  3.6804950348811398`*^9, 3.680495045032901*^9}, {3.680498031669083*^9, 
  3.6804980518450747`*^9}, {3.68049808478157*^9, 3.680498089709523*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] \
of \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\)\[NoBreak] does not \
exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.68050303030229*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first two levels of \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\
\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0.01`\\\", \\\",\\\", \
\\\"0.02`\\\", \\\",\\\", \\\"0.03`\\\", \\\",\\\", \\\"0.04`\\\", \\\",\\\", \
\\\"0.05`\\\", \\\",\\\", \\\"0.060000000000000005`\\\", \\\",\\\", \
\\\"0.06999999999999999`\\\", \\\",\\\", \\\"0.08`\\\", \\\",\\\", \
\\\"0.09`\\\", \\\",\\\", \\\"0.09999999999999999`\\\", \\\",\\\", \
\\\"0.11`\\\", \\\",\\\", \\\"0.12`\\\", \\\",\\\", \\\"0.13`\\\", \\\",\\\", \
\\\"0.14`\\\", \\\",\\\", \\\"0.15000000000000002`\\\", \\\",\\\", \
\\\"0.16`\\\", \\\",\\\", \\\"0.17`\\\", \\\",\\\", \
\\\"0.18000000000000002`\\\", \\\",\\\", \\\"0.19`\\\", \\\",\\\", \\\"0.2`\\\
\", \\\",\\\", \\\"0.21000000000000002`\\\", \\\",\\\", \\\"0.22`\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\
\"}], \\\",\\\", \\\"0.3`\\\", \\\",\\\", \\\"0.31`\\\", \\\",\\\", \\\"0.32`\
\\\", \\\",\\\", \\\"0.33`\\\", \\\",\\\", \\\"0.34`\\\", \\\",\\\", \
\\\"0.35000000000000003`\\\", \\\",\\\", \\\"0.36000000000000004`\\\", \
\\\",\\\", \\\"0.37`\\\", \\\",\\\", \\\"0.38`\\\", \\\",\\\", \\\"0.39`\\\", \
\\\",\\\", \\\"0.4`\\\", \\\",\\\", \\\"0.41000000000000003`\\\", \\\",\\\", \
\\\"0.42000000000000004`\\\", \\\",\\\", \\\"0.43`\\\", \\\",\\\", \
\\\"0.44`\\\", \\\",\\\", \\\"0.45`\\\", \\\",\\\", \\\"0.46`\\\", \\\",\\\", \
\\\"0.47000000000000003`\\\", \\\",\\\", \\\"0.48000000000000004`\\\", \
\\\",\\\", \\\"0.49`\\\", \\\",\\\", \\\"0.5`\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"450\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}]\\)\[NoBreak] cannot be transposed. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", \
ButtonNote -> \\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680503030337358*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] \
of \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\)\[NoBreak] does not \
exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680503030426982*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] \
of \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\)\[NoBreak] does not \
exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680503030428039*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680503030428937*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListLinePlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0.01`\\\", \\\",\\\", \\\"0.02`\\\", \
\\\",\\\", \\\"0.03`\\\", \\\",\\\", \\\"0.04`\\\", \\\",\\\", \\\"0.05`\\\", \
\\\",\\\", \\\"0.060000000000000005`\\\", \\\",\\\", \\\"0.06999999999999999`\
\\\", \\\",\\\", \\\"0.08`\\\", \\\",\\\", \\\"0.09`\\\", \\\",\\\", \
\\\"0.09999999999999999`\\\", \\\",\\\", \\\"0.11`\\\", \\\",\\\", \
\\\"0.12`\\\", \\\",\\\", \\\"0.13`\\\", \\\",\\\", \\\"0.14`\\\", \\\",\\\", \
\\\"0.15000000000000002`\\\", \\\",\\\", \\\"0.16`\\\", \\\",\\\", \
\\\"0.17`\\\", \\\",\\\", \\\"0.18000000000000002`\\\", \\\",\\\", \
\\\"0.19`\\\", \\\",\\\", \\\"0.2`\\\", \\\",\\\", \\\"0.21000000000000002`\\\
\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"10\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", \\\"0.32`\\\", \\\",\\\", \\\"0.33`\\\", \
\\\",\\\", \\\"0.34`\\\", \\\",\\\", \\\"0.35000000000000003`\\\", \\\",\\\", \
\\\"0.36000000000000004`\\\", \\\",\\\", \\\"0.37`\\\", \\\",\\\", \
\\\"0.38`\\\", \\\",\\\", \\\"0.39`\\\", \\\",\\\", \\\"0.4`\\\", \\\",\\\", \
\\\"0.41000000000000003`\\\", \\\",\\\", \\\"0.42000000000000004`\\\", \
\\\",\\\", \\\"0.43`\\\", \\\",\\\", \\\"0.44`\\\", \\\",\\\", \\\"0.45`\\\", \
\\\",\\\", \\\"0.46`\\\", \\\",\\\", \\\"0.47000000000000003`\\\", \\\",\\\", \
\\\"0.48000000000000004`\\\", \\\",\\\", \\\"0.49`\\\", \\\",\\\", \\\"0.5`\\\
\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"450\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]\\)\[NoBreak] is not a \
list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListLinePlot\\\", ButtonNote -> \
\\\"ListLinePlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.68050303080683*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListLinePlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0.01`\\\", \\\",\\\", \\\"0.02`\\\", \
\\\",\\\", \\\"0.03`\\\", \\\",\\\", \\\"0.04`\\\", \\\",\\\", \\\"0.05`\\\", \
\\\",\\\", \\\"0.060000000000000005`\\\", \\\",\\\", \\\"0.06999999999999999`\
\\\", \\\",\\\", \\\"0.08`\\\", \\\",\\\", \\\"0.09`\\\", \\\",\\\", \
\\\"0.09999999999999999`\\\", \\\",\\\", \\\"0.11`\\\", \\\",\\\", \
\\\"0.12`\\\", \\\",\\\", \\\"0.13`\\\", \\\",\\\", \\\"0.14`\\\", \\\",\\\", \
\\\"0.15000000000000002`\\\", \\\",\\\", \\\"0.16`\\\", \\\",\\\", \
\\\"0.17`\\\", \\\",\\\", \\\"0.18000000000000002`\\\", \\\",\\\", \
\\\"0.19`\\\", \\\",\\\", \\\"0.2`\\\", \\\",\\\", \\\"0.21000000000000002`\\\
\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"10\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", \\\"0.32`\\\", \\\",\\\", \\\"0.33`\\\", \
\\\",\\\", \\\"0.34`\\\", \\\",\\\", \\\"0.35000000000000003`\\\", \\\",\\\", \
\\\"0.36000000000000004`\\\", \\\",\\\", \\\"0.37`\\\", \\\",\\\", \
\\\"0.38`\\\", \\\",\\\", \\\"0.39`\\\", \\\",\\\", \\\"0.4`\\\", \\\",\\\", \
\\\"0.41000000000000003`\\\", \\\",\\\", \\\"0.42000000000000004`\\\", \
\\\",\\\", \\\"0.43`\\\", \\\",\\\", \\\"0.44`\\\", \\\",\\\", \\\"0.45`\\\", \
\\\",\\\", \\\"0.46`\\\", \\\",\\\", \\\"0.47000000000000003`\\\", \\\",\\\", \
\\\"0.48000000000000004`\\\", \\\",\\\", \\\"0.49`\\\", \\\",\\\", \\\"0.5`\\\
\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"450\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]\\)\[NoBreak] is not a \
list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListLinePlot\\\", ButtonNote -> \
\\\"ListLinePlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680503031271001*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 751},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 11, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 102, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[707, 27, 4398, 104, 300, "Input"],
Cell[5108, 133, 23281, 388, 257, "Output"]
}, Open  ]],
Cell[28404, 524, 1161, 36, 104, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29602, 565, 105, 1, 64, "Section"],
Cell[29710, 568, 14721, 381, 589, "Input"],
Cell[CellGroupData[{
Cell[44456, 953, 789, 13, 46, "Input"],
Cell[45248, 968, 585, 11, 21, "Print"],
Cell[45836, 981, 74327, 1234, 328, "Output"]
}, Open  ]],
Cell[120178, 2218, 534, 15, 28, "Input"],
Cell[CellGroupData[{
Cell[120737, 2237, 725, 18, 28, "Input"],
Cell[121465, 2257, 4152, 80, 467, "Output"]
}, Open  ]],
Cell[125632, 2340, 1240, 34, 46, "Input"],
Cell[CellGroupData[{
Cell[126897, 2378, 233, 5, 28, "Input"],
Cell[127133, 2385, 157, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127327, 2392, 1561, 36, 63, "Input"],
Cell[128891, 2430, 7703, 140, 345, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136631, 2575, 591, 14, 51, "Input"],
Cell[137225, 2591, 183, 2, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[137457, 2599, 100, 1, 64, "Section"],
Cell[137560, 2602, 4503, 128, 271, "Input"],
Cell[142066, 2732, 509, 14, 63, "Input"],
Cell[142578, 2748, 2210, 61, 97, "Input"],
Cell[CellGroupData[{
Cell[144813, 2813, 2100, 60, 155, "Input"],
Cell[146916, 2875, 2141, 45, 330, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149094, 2925, 197, 3, 28, "Input"],
Cell[149294, 2930, 358, 7, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149701, 2943, 157, 2, 64, "Section"],
Cell[149861, 2947, 4060, 106, 237, "Input"],
Cell[153924, 3055, 406, 12, 63, "Input"],
Cell[154333, 3069, 2301, 66, 131, "Input"],
Cell[CellGroupData[{
Cell[156659, 3139, 2225, 60, 138, "Input"],
Cell[158887, 3201, 518, 11, 24, "Message"],
Cell[159408, 3214, 2127, 32, 58, "Message"],
Cell[161538, 3248, 519, 11, 24, "Message"],
Cell[162060, 3261, 519, 11, 24, "Message"],
Cell[162582, 3274, 560, 12, 24, "Message"],
Cell[163145, 3288, 2256, 34, 60, "Message"],
Cell[165404, 3324, 2257, 34, 60, "Message"]
}, Open  ]]
}, Open  ]]
}
]
*)

