(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    207924,       4152]
NotebookOptionsPosition[    205001,       4052]
NotebookOutlinePosition[    205361,       4068]
CellTagsIndexPosition[    205318,       4065]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["DEFINE PARAMETERS", "Section",
 CellChangeTimes->{{3.680493170118178*^9, 3.680493175475255*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["m", "N"], "=", "940"}], ";", 
  RowBox[{"\[HBar]c", "=", "197.327"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"V0", "=", "75"}], ";", 
  RowBox[{"R", "=", "2.55"}], ";", 
  RowBox[{"a", "=", "0.5"}], ";", 
  RowBox[{"\[Mu]", "=", 
   RowBox[{
    FractionBox["8", "9"], " ", 
    SubscriptBox["m", "N"]}]}], ";", 
  RowBox[{"l", "=", "2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rmax", "=", "20."}], ";", 
  RowBox[{"dr", "=", "0.02"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rlist", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"dr", ",", "rmax", ",", "dr"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"len", "=", 
   RowBox[{"Length", "[", "rlist", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vwoods", "[", "r_", "]"}], ":=", 
   FractionBox[
    RowBox[{"-", "V0"}], 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"r", "-", "R"}], "a"], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vcent", "[", "r_", "]"}], ":=", 
   FractionBox[
    RowBox[{"l", 
     RowBox[{"(", 
      RowBox[{"l", "+", "1"}], ")"}], 
     SuperscriptBox["\[HBar]c", "2"]}], 
    RowBox[{"2", "\[Mu]", " ", 
     SuperscriptBox["r", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V", "[", "r_", "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "V0"}], 
     RowBox[{"1", "+", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"r", "-", "R"}], "a"], "]"}]}]], "+", 
    FractionBox[
     RowBox[{"l", 
      RowBox[{"(", 
       RowBox[{"l", "+", "1"}], ")"}], 
      SuperscriptBox["\[HBar]c", "2"]}], 
     RowBox[{"2", "\[Mu]", " ", 
      SuperscriptBox["r", "2"]}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Vmat", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"V", "[", "rlist", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"V", "[", "rlist", "]"}], ",", 
     RowBox[{"Vwoods", "[", "rlist", "]"}], ",", 
     RowBox[{"Vcent", "[", "rlist", "]"}]}], "}"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"dr", ",", "rmax"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "V0"}], ",", "V0"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.679286728059107*^9, 3.679286751534897*^9}, {
   3.679286798295683*^9, 3.679286809263542*^9}, {3.679287253510089*^9, 
   3.679287322870791*^9}, 3.679289429930531*^9, {3.679289796355823*^9, 
   3.679289797938469*^9}, {3.679291047782339*^9, 3.679291048165627*^9}, {
   3.679291140911874*^9, 3.679291141375329*^9}, {3.6793008229741793`*^9, 
   3.679300823061451*^9}, {3.679301164043964*^9, 3.679301164138753*^9}, 
   3.679301319405847*^9, {3.679301744500462*^9, 3.67930174459568*^9}, {
   3.6793070233533278`*^9, 3.679307024200685*^9}, {3.6793071120422153`*^9, 
   3.679307112865924*^9}, {3.6793080233437357`*^9, 3.679308046871706*^9}, {
   3.679634080442708*^9, 3.6796340987636414`*^9}, {3.679634333800329*^9, 
   3.6796343349092484`*^9}, {3.679639176058004*^9, 3.679639188049914*^9}, {
   3.6798067461243887`*^9, 3.679806768795967*^9}, {3.679812310223147*^9, 
   3.679812338079535*^9}, {3.679812393568287*^9, 3.679812544050201*^9}, {
   3.679812590867487*^9, 3.679812635755251*^9}, {3.679812801742092*^9, 
   3.6798128018611383`*^9}, {3.679812860319036*^9, 3.679812864150773*^9}, {
   3.679813569689842*^9, 3.679813609697278*^9}, {3.679813646034247*^9, 
   3.679813682770708*^9}, {3.679813881677866*^9, 3.679813885669187*^9}, {
   3.6798170925811043`*^9, 3.679817093860159*^9}, {3.6804316284900513`*^9, 
   3.6804316285694857`*^9}, {3.680432080312958*^9, 3.68043210436097*^9}, {
   3.6804337032893887`*^9, 3.6804337702899103`*^9}, {3.680433811827347*^9, 
   3.680433818354754*^9}, {3.680434634847043*^9, 3.6804346356949663`*^9}, 
   3.680436005691721*^9, {3.680496540601735*^9, 3.68049654159378*^9}, {
   3.6804968302692003`*^9, 3.680496845685198*^9}, 3.680497920371483*^9, {
   3.6804983694494753`*^9, 3.6804983705134*^9}, {3.680498425538352*^9, 
   3.680498425626013*^9}, {3.680499023874032*^9, 3.6804990254019003`*^9}, {
   3.68049906177068*^9, 3.680499092482966*^9}, {3.680499420823485*^9, 
   3.680499429903269*^9}, {3.680499462552456*^9, 3.6804994639356956`*^9}, {
   3.68050001154576*^9, 3.680500022199564*^9}, {3.6805011173512287`*^9, 
   3.6805011307594337`*^9}, {3.680847646270734*^9, 3.680847652165984*^9}, 
   3.6808617668489733`*^9, {3.680863291423409*^9, 3.680863361441423*^9}, {
   3.68086397809017*^9, 3.680863996260049*^9}, {3.680864041051107*^9, 
   3.680864054554192*^9}, {3.680864142364551*^9, 3.680864144603826*^9}, {
   3.6808641838764343`*^9, 3.680864185020081*^9}, 3.680865542881545*^9, {
   3.6809311624884663`*^9, 3.680931166896529*^9}, {3.680945890545837*^9, 
   3.6809458912821503`*^9}, {3.6810189073365173`*^9, 3.681018910504404*^9}, {
   3.681019065277363*^9, 3.6810191557802467`*^9}, {3.681019367800095*^9, 
   3.6810193721672564`*^9}, {3.681020216003806*^9, 3.681020232028884*^9}, {
   3.68102056924151*^9, 3.6810206002009163`*^9}, {3.681020638689953*^9, 
   3.681020642553878*^9}, {3.681021075634112*^9, 3.6810210913527613`*^9}, {
   3.681021374502584*^9, 3.681021377798003*^9}, {3.681022830653883*^9, 
   3.681022846253093*^9}, {3.681023028568976*^9, 3.681023036183455*^9}, {
   3.681118051600419*^9, 3.681118074119561*^9}, {3.6811182114738092`*^9, 
   3.681118211945282*^9}, {3.6811186222166567`*^9, 3.681118622632099*^9}, {
   3.681118897964986*^9, 3.681118898034419*^9}, {3.681119126280704*^9, 
   3.6811191268398542`*^9}, {3.681119535822843*^9, 3.681119536430429*^9}, {
   3.681121190297098*^9, 3.681121193448151*^9}, {3.681121407764516*^9, 
   3.681121408331815*^9}, {3.681122379066957*^9, 3.681122401170539*^9}, {
   3.681122510237236*^9, 3.68112251031593*^9}, {3.681122584286319*^9, 
   3.6811225877743673`*^9}, {3.681122713168441*^9, 3.6811227525366507`*^9}, {
   3.681122915483767*^9, 3.681122922899178*^9}, {3.681123326344563*^9, 
   3.681123355393351*^9}, {3.681123425978519*^9, 3.681123426346305*^9}, {
   3.681123516604484*^9, 3.681123516955555*^9}, {3.681123590005522*^9, 
   3.681123591700783*^9}, 3.681124933152556*^9, 3.681184424698593*^9, 
   3.681184874187615*^9, 3.6811870842004766`*^9, {3.68119390143714*^9, 
   3.6811939081653757`*^9}, 3.6811940247372303`*^9, {3.681194119619151*^9, 
   3.681194123624754*^9}, {3.681194527609417*^9, 3.6811945312631493`*^9}, {
   3.6811952508596354`*^9, 3.681195250954818*^9}, {3.6811997479540873`*^9, 
   3.681199750825407*^9}, {3.681199861339694*^9, 3.681199886274234*^9}, {
   3.681200224521823*^9, 3.681200248440384*^9}, {3.681200367587726*^9, 
   3.6812003717381573`*^9}, {3.681200422829672*^9, 3.681200422939187*^9}, {
   3.68120045650988*^9, 3.681200456595654*^9}, {3.681200522686616*^9, 
   3.681200522860385*^9}, {3.681200581775519*^9, 3.681200581982325*^9}, {
   3.6812006246082172`*^9, 3.681200625110422*^9}, {3.681200657416971*^9, 
   3.681200657703292*^9}, {3.6812007037289877`*^9, 3.681200704112228*^9}, {
   3.681200752875016*^9, 3.6812007529533663`*^9}, {3.681200783913932*^9, 
   3.681200783951515*^9}, {3.6812008187636843`*^9, 3.681200833426429*^9}, {
   3.681202798601713*^9, 3.68120279891203*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
9tT9PwvJwxVKtrJ6qh8KycMV6QF+rceeF5KHK1S2B1U43iukz7e5Iv55aXby
lULycEWR9dPX604XkocrqlekHXI6WEgerrj7c0T/3zsLyYOPU9k21x+HFrLj
kePjsVt82v7lheTDx9Io/v0V8wvZ8anz4fOPomDW9EKqL3zcrLznMXk8jdeA
j+pXT7MmexSSHx+/6l5X+/Wj8VvxMfRqxMLVToXkycdvo5Thhy1oPlz4iA3c
vjJRt5B8+dCccKSwTrmQ3T/68/HWTTPSVaqQzpt8eOTpzw5pKWD3Ew8+Qrzz
xydXF5C/ZHwPb03kFRaw+8s4Phwsc6ceSCug9cBH6I6CKZxPBez+P42PFSsH
Dtnw6u/nDfk4JL9djpNQwNbneZKffzvv/P5bBbRe+Ni5+LiUXWwBO99L+Mj7
1Gj84XgBrR8+Pj6ZWRYcVcDO/1o+pn1Lmuywo4DWEx/MfPcplSEFrMdWPnjj
vuTdXV5A64sPxx/PKnYEFrAekXxc3jU0yH9mAa03PrzNrnuNmFTAehzh47bP
3F3CUQW0/vi48jaL6zC4gPU4x8eB7+crHIQFtB75mLlpXJMbr4D1uMaH4eg9
zl6mBbQ++fhsoLMnUKeA9bjPxyKdZ517lApoP+fDacvssMecAjZ/z/nwH5He
mP87n9YvH/smfc6bm5XP9g//8uHKeRXT+C6f1jMf5WGt5ifu57Me3/iobU4b
N+F8PtVjPjLWl6nqRuWzHjl8fDjzeUJtaD71S3y4z/LpyPwnnz0flfFh/CGg
M3VKPq1/yXou5AwpRj7rUcfHvbG+N6Rc8ikPEi+zGy4Co3zWo4OP4fEBD1cp
5FM+BHg7Uc7hdXMe5UOAoYZ9Q2yK8ygfAnQmJuw9kZJH+ZD8PLNkkvGLPMqH
AB5fJt6Lv5nH9pMGApRv23526sk8yocAo5yG9ijtyqN8CPDeIlucEpxH+RCg
VfbrtysBeZQPAaQP3zKJmpRH+ZBcb7HVoR1D89j9o78AWcV/9COd8mg/FKBf
ikPsecM81sNDgBcTrxv8q5BH/ZwAK86cWdrdkkv5EGBHxrDdw0tzKR8CqObW
zzj5I5fyIUC2gsXXnle5lA8Bfqr7p66Jz6V8CHDto+/MtnO5dF4V4Lf8l7H7
onIpHwJET7t83HVjLuVDgJLSdMeixbmUDwEOeWxouTgjl/IhQFi/l6XBXrmU
DwFOn/xd7tMvl/IhuX+jxdXDbXMpHwLEmN3LG8bNpXwIYLfPL36CbC7lQ4DE
swYTFzfmUH8vwMln964fKcqhfAhwf6zSnc/fcigfApjtMprAfZVD+RCAM7Fj
7ZL4HMqHADelfnBTYnIoHwI4T6oyHn4gh/Zzye/XORv2ZnMO5UPiZzvX1Gd5
DuVDgGUicWv97BzKh2R9HZvXcnZ8DvVDAhxx5ChNH5JD+RBguuMKS3PnHMqH
ACqck64txjmUDwHKTLdYZKnkUD4EGFcwoCK5K5vyIcCW6W1rkn9lUz4EeMjn
PMzIyaZ8CLBq6+3TjZ+yKR8C2F9drW/8PJvyIUB/2wwj79vZlA8hzDZsPHb0
bDblQwitDu3QsqhsyocQydcWPhixOZvyIcQ1g5kD4pdnUz6E0PXMbeP5Z1M+
hOi3oqs4bmI25UOIhtq06mHIpnwIoWF1QaqIn035EKJw4CXdAxbZlA8hak2H
Go/WyqZ8CGEzulBGQyab8iGE5kWdl8WNWZQPIfbOX8O8KcmifAgR+evWurup
WVQ/hBh/fafvzXdZlA8h4n99S7mbkEX5ECL765b0N9eyKB9C2GlG+ZWczKJ8
CDGgUdlbY28WW5/nCbHe2PKG18YsyocQMesUpkUty6J8CPFATXls3pwsyocQ
Vs27QwZNyqJ8SObLtOnbpWFZlA8hLDy+jTYUZVE+hNB+mfD9tHUW5UMI9dDJ
/va6WZQPIXKfzSxK6pNF+RBik3HshIXtmWz/dUSIqpkKxw2qMykfQpiO2BqX
lpNJ+RDC+4ja7pgvmZQPIRZlftANFmdSPoS4PTVrvM+9TMqHELFFoea4lEn5
EKL/z8Zt/Y5lUj6E0M+5FDRwdyblQwin3x0vvMIyKR9CzDdbuy1gaSbr8a9k
fqIvnt81J5PyIcTg6XYajydlUj6EuDHu3utGj0zKhxDp8n3uDHTPpHxIfBPa
3u6zy6R+SYgN6ku6Kg0yKR+S9629R3mrZNLzKcn9Tbt3/G1PBtuf1wnxsN/5
kuH1GfR8XYjXS2HxuTiD8iHE8RP/DpuXlkH5EOEAEzaQ8yGD8iHCmrhbf64/
y6B8iCBbmBQ+Jy6D8iHCg4X8VyYXMqgfFuHYlJAr5dEZlA8RVmk7OyRGZFA+
RDAOqsPp0AzKhwg5/dbk71yaQfkQwejo2o4Q/wzKhwjuu99FrPfOoHyIECo/
InTryAzKhwiz0rPeRffPoHyIkLQxIvCuYwblQ4Roo8memaYZlA8RFgVOCVTW
yqB8iLBg44N4T7kMyocIQ8uuW+xvS6d8iLBwyfpbedXplA8RNsitGDUgP53q
h2T8/9aVnP2eTv2VCLHvF29SeZfOeiwRQVplhlz4k3Q6L0nub+nI1X1up1M+
RDDd9e+T6PPplA8RemJ3frM/kk75kMz/Odc7H3alUz5EGJWx22vNhnTKhwg/
DOdE265Ip+dBIvyKiAwvDkinfIjQsrlF54ZvOuVDBJPDx/uFjUmnfIjwZsHK
4ilD0ykfIrTdOKjWT5hO+RDBtUXnjpVtOuVDBLWXts8MDNMpHyLM9+jiGail
Uz5EGLEyo8ZCOp3yIcLIDCUZt5Y0Oj+LUHq0dtbEqjTKhwiqQ2pr1+SlUT5E
eP5u88ML39MoHyKkbDK7mPEujfIhGU/1nDv6z9IoHyK8fpeWMu9OGtUPEQpz
nHruX0xjPcpE8JfRdlE/kUb5EEEo4zltzb40yocInyIOryzYmkb1Q4QvfZJX
+q5No3yIUJb4bULqojTKhxtSdkVLzZ6TxvwHtYLSkg==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
PzS+vLfVlPU/+pqS+g==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
IxAj5gG55BGBdKOZE359nkseEcwHcskjAoV1oyyuXMsljwhsFPOCXPKIxOBl
axpkh3LJI5L5QS55RCL4N+HsyrW55BGJY2KekEsekfhdWHEsbE4ueUQyX8gl
j0j0iUyeaDUylzwiMVzMG3LJIxKW3uumuHfPJY9I5g+55BGJI66jOnypyOV8
FYl/xDwilzwikTPnxLhbdrnkEcl8Ipc8IjH70JjxI+pzyCMSi8W8Iof9o+16
g7PuemXnkEck84sc8ojE/tgAd9vHOeQRCQsxz8ghj0iYnP6hOPRSjiB9vy2S
+UYOeUTCr9/Le4v25ZBHJPOOHPKIxH3fcZ3KV+eQh5b5R470PGZaaB7eT9w8
J4d8tMxDcqTns9ci62sf3bjROewvWuYjfF5PLS70e5o6NCqH/LTMS/j8wW2/
782ub74PyyFPLfMTvo8ILdKHb537l1sO+WqZp+RI9aOTFo2tfhsijXK4b2qZ
r2RL9SRKiyjbsoFPSrPJX8u8JVuqLwO0+Ca3eER8YjbPg5b5S7ZU/0dpMaVf
r27L7mbzfGiZx2RL/XmSFuWPZh3efDab50XLfCZbet+ztPjcusXn8e5snh8t
Jop5Tbb0/hdq8WDMk6GaVdk8T1rmN9kSjzgtjoclZl6ck83zpWWeky3x2KCF
x7NeUyeOzeZ50zLfyZZ47NDCxHr6On3vbJ4/LfaJeU+2xONg28+b/las0Wfz
PGqZ/2RLPE613a9RfHhfv2yeTy3zoGyJx2UtvMbfaf7ZKpv1XMt8KFvS3y0t
ik1yqrPKs3h+tegq5kVZ0vzwUIvUj48PVT/I4nnWMj/Kkni80GJFz6wBgw5n
sR9rmSdlSTzStUju82bQ+6VZnJe0zJeypP2oUItuGTOa33yZxfOvZd6UJfGo
0OLH1+N/N4rIoh60zJ+yJB5NbTyvf3N1nkUW9aFjHpVJfehw7UzXJSF5mdSH
jvlUJvWhw4mv5w7xuZ1JfeiYV2VK86SnDvux7sCIPZnUh475VSb1oYPnqqw7
zxdkUh865lmZ1IcOvgcu+G4akkl96JhvZUr1o5MOXx0y8dwQlsl6qGPelSnx
iNLh2d2zng8tMjnP6Zh/ZVAfOtxt12t9dEEG9aFjHpZBfejwQ0Pwf613M6gP
HfOxDOpDh5/ixoxtOJjBfVXHvCyD+tDBNfm33ZHLM6gPHfOzDOpDh9dbV9Qd
G5NBfeiYp2VQHzrMuPm+aHjHDOpDx3wtg/rQYZH7lcwerhnUh455Wwb10fbz
c7wHz6xO53yv498HpFMfOlg3Wp9/9iKd+tAxj0unPnQYmda8cNaFdOpDx3wu
nfrQwep2qU90fDrruY55XTr1ocPtxZP8hs9Jpz50/HuEdOpDB5N/J9cdGJjO
eUjHPC+d+tBB3n9uUEB4OvWhY76XTn20vW9VXGCqTTr1oWPel0Z9tP3+gY3z
n5SlUR86/v1DGvWhw5vJ5/ZVP02jPnTMA9OoDx3a1yd7D/sjjfrQMx9Moz70
aPnTZWnhpjTqQ8+8MI360OP2k7GdL8xJoz70zA/TqA899ju35J0bnEZ96Jkn
plEferz484hRrjaN+tAzX0yjPvQwO9Pdp59TGvWhZ96YRn3oMVnu+r+86lTq
Q8/8MZX60OPt138suvgmlf1DzzwylfrQI3fsy+cXr6VSH3rmk6nUhx7ZizaN
z9+TSn3omVemSv15kh4xsUG/912eSn3omV+mUh96fD3Vun9mTCr1oWeemUp9
6OE9p+bF8R6p1Iee+WYq9aFHpcX1l/vkqdSHnnlnKvWhh61sXG6CeSr1oWf+
mSLNXzv0SN9jsduzNIX60ONXMQ9NoT70+PZfu/WH/k2hPvTMR1OoDz2GbEwd
OPxSCvWhZ16aQn3o8ZdZzY8dd6VQH3rmpynUhx45Xs23+8amUB96DBTz1BSJ
x0M9Cm4dO7wuJoX60DNfTaE+9Dgw/9K96qgU6kPPvDWF+tBjZVrD378oUzgv
6Zm/plAfbTx7Des9zCaF/pQeHxZ9ymOTpfm8Qo/RIw/nR1cm01/XM59Npj70
yLrysMekxGTqw8C8Npn6MCD+0dmPp28mUx8G5rfJ1IcB/8Zp7/oeSeY8bGCe
m0x9GHBRHa75a20y9WFgvptMfRgwbcD8rNWzk6kPA/PeZOrDAM2+B2sXD0um
PgzMf5OpDwPSilMfbO+UTH0YmAcnUx8G3Awd2ifFL5n6MDAfTqY+DBi68cqF
PmbJ1IeBeXES9WFA2NLFZzNLk6gPA/PjJPYPA2a8rsg/8DKJ85WBeXKSxGOW
Abfcx5ituZHEfcnAfDmJ+jCgauvDG9sPJ1EfBubNSdSHAd+fijz/eF0S9WFg
/pxEfRhgK4/ZrvguiX6QgXl0EvVhwLJ1dS6/j0yiPgwYIObTSdSHAUe+m5v3
Zfck6sPAvDqJ+jBgXovL+WBFEvVhYH6dRH0Y4Nbvg8rTLon6MDDPTqI+DFiY
aWXSvi6R+3MbXzHfTqQ+DLgX9f79/MxE6sPAvDuR+jDAdZX/seQHidSHgfl3
IvXRdv9PEp9POp/I/mFgHp4o8Sg0IMPcOcL+10Tqw4BVYj6eSH0YULlh29zs
uET2DwPz8kTqw4A/77wY9GZGIvXRnvl5ovD/ZB33yg==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{398., Automatic},
  Method->{},
  PlotRange->{{0, 20.}, {-75, 75}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6790525019311647`*^9, 3.679052566523169*^9, 3.679196433941718*^9, {
   3.679197277655931*^9, 3.679197294275297*^9}, 3.679203964377475*^9, {
   3.679211502047686*^9, 3.679211535666667*^9}, 3.679211579918518*^9, 
   3.6792116311039762`*^9, 3.67921462355632*^9, 3.6792214221859913`*^9, {
   3.679283487206999*^9, 3.6792835073757553`*^9}, 3.6792846970975523`*^9, 
   3.6792868319626226`*^9, 3.679287023698317*^9, 3.6792873635378437`*^9, 
   3.679287540947575*^9, 3.679287851949174*^9, 3.6792894968350487`*^9, 
   3.679289801327577*^9, 3.67928988339225*^9, {3.679290586852947*^9, 
   3.6792906106198874`*^9}, 3.679291052837352*^9, 3.679291144824926*^9, 
   3.679300829791338*^9, 3.679301167845834*^9, 3.679301321689472*^9, 
   3.679301749581284*^9, {3.679301879491131*^9, 3.6793019059515667`*^9}, 
   3.679307028443761*^9, 3.679307118178897*^9, 3.679307330661931*^9, {
   3.679308027838118*^9, 3.6793080494175997`*^9}, 3.6793094652195168`*^9, 
   3.679312432920207*^9, 3.6793125177770147`*^9, 3.679628067813961*^9, {
   3.679634085969236*^9, 3.679634100282443*^9}, 3.679634336318362*^9, 
   3.679636276044846*^9, 3.679636365377068*^9, 3.679637324382835*^9, {
   3.679639179099791*^9, 3.6796391886563473`*^9}, 3.6796392420372267`*^9, 
   3.679639953216379*^9, 3.679645643238593*^9, 3.679648137146015*^9, 
   3.679648558755623*^9, 3.679649582465561*^9, 3.679649892552554*^9, 
   3.6796565493739023`*^9, 3.679800549882975*^9, 3.679805684060231*^9, {
   3.6798067479753227`*^9, 3.679806769222741*^9}, 3.679806880696198*^9, {
   3.6798123317269783`*^9, 3.6798123492156363`*^9}, {3.6798124041706867`*^9, 
   3.679812544911186*^9}, {3.679812591553905*^9, 3.679812636438826*^9}, {
   3.679812718504196*^9, 3.679812747888829*^9}, 3.679812802677163*^9, {
   3.679812860932942*^9, 3.679812864802289*^9}, 3.679813302146058*^9, {
   3.679813578762792*^9, 3.679813610783359*^9}, {3.679813648675354*^9, 
   3.679813683370983*^9}, {3.679813882391739*^9, 3.679813886280746*^9}, 
   3.67981709447731*^9, 3.6798320710687733`*^9, 3.679832963110623*^9, 
   3.6798336242071457`*^9, 3.6798337139394493`*^9, 3.679913793782613*^9, 
   3.679914230663097*^9, 3.6804223738238363`*^9, 3.6804316293653173`*^9, 
   3.680432578056477*^9, 3.6804329736743717`*^9, {3.6804337046803427`*^9, 
   3.6804337706961393`*^9}, {3.6804338121262703`*^9, 3.680433818879698*^9}, {
   3.680434636246229*^9, 3.6804346448073597`*^9}, {3.6804360062572927`*^9, 
   3.680436009281104*^9}, 3.68049183832864*^9, 3.6804935964277267`*^9, 
   3.680495634338409*^9, 3.680496543248508*^9, 3.680496849248814*^9, 
   3.680496946316475*^9, 3.6804974082055817`*^9, 3.680497920656809*^9, 
   3.680498333093705*^9, 3.6804983709465513`*^9, 3.680498426505479*^9, 
   3.680499026190254*^9, {3.680499069370472*^9, 3.680499099776496*^9}, 
   3.680499156845821*^9, {3.680499422359086*^9, 3.680499430439415*^9}, {
   3.680499464559601*^9, 3.680499482363248*^9}, {3.68050111909801*^9, 
   3.6805011312791567`*^9}, 3.680603920087531*^9, 3.680605216541439*^9, 
   3.6806054134055977`*^9, 3.680837663336501*^9, 3.680839525409697*^9, {
   3.680847646797854*^9, 3.680847652520033*^9}, 3.68085749805475*^9, {
   3.680863293075162*^9, 3.680863322124782*^9}, 3.680863470135618*^9, {
   3.680863978499679*^9, 3.680863996610461*^9}, {3.680864049568758*^9, 
   3.6808640548874903`*^9}, 3.680864145354349*^9, 3.6808641857169113`*^9, {
   3.680865540464802*^9, 3.680865543270047*^9}, {3.680931163850451*^9, 
   3.6809311738490458`*^9}, {3.68093202912009*^9, 3.680932037224578*^9}, 
   3.680945780862892*^9, {3.6809458757424593`*^9, 3.6809458917320642`*^9}, 
   3.6809524797656612`*^9, 3.6810189112022*^9, {3.68101906641998*^9, 
   3.681019156453628*^9}, {3.681019368823763*^9, 3.681019372761499*^9}, {
   3.681020216703933*^9, 3.68102023704841*^9}, 3.681020570108326*^9, 
   3.681020600762158*^9, {3.681020640096961*^9, 3.681020643185573*^9}, {
   3.681021078877264*^9, 3.681021091950119*^9}, {3.681021375571617*^9, 
   3.681021378133896*^9}, {3.6810228314569187`*^9, 3.681022846630259*^9}, {
   3.681023012725668*^9, 3.6810230365452347`*^9}, 3.681115385982119*^9, {
   3.6811180527797203`*^9, 3.681118074782379*^9}, 3.681118215250764*^9, 
   3.681118623620036*^9, 3.681118898602096*^9, {3.681119128027726*^9, 
   3.681119147219598*^9}, 3.6811195376264753`*^9, 3.68112098213967*^9, 
   3.681121194129303*^9, 3.681121409026726*^9, {3.681122379784981*^9, 
   3.681122401764859*^9}, 3.681122510984456*^9, 3.681122588147521*^9, {
   3.6811227141386213`*^9, 3.681122753002244*^9}, 3.681122923294692*^9, 
   3.681122953988894*^9, {3.6811233274562674`*^9, 3.681123355803927*^9}, 
   3.681123426813408*^9, 3.68112352403433*^9, 3.681123592428177*^9, 
   3.681124933885583*^9, 3.681184425368575*^9, 3.6811848745627613`*^9, 
   3.681187085735511*^9, 3.681193961433589*^9, 3.681194025462286*^9, 
   3.681194124082649*^9, {3.681194528262102*^9, 3.681194531962069*^9}, 
   3.6811952516270723`*^9, 3.681199658664875*^9, 3.681199751171175*^9, 
   3.6811998620185423`*^9, 3.681199900934174*^9, {3.681200225358182*^9, 
   3.681200252826766*^9}, {3.68120036864116*^9, 3.68120037386456*^9}, 
   3.681200423527287*^9, 3.6812004569328833`*^9, 3.681200523187395*^9, 
   3.681200582738505*^9, 3.681200625811017*^9, 3.6812006579681673`*^9, 
   3.681200704429785*^9, 3.6812007532623653`*^9, 3.681200784600788*^9, {
   3.6812008193033237`*^9, 3.681200833910379*^9}, 3.6812027997977962`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"INITIAL", " ", "HAMILTONIAN"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"one", "[", 
      RowBox[{"n_", ",", "d_"}], "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{
       RowBox[{"1", "+", 
        RowBox[{"0", 
         RowBox[{"Range", "[", 
          RowBox[{"n", "-", 
           RowBox[{"Abs", "[", "d", "]"}]}], "]"}]}]}], ",", "d"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0", ":=", 
     RowBox[{"Vmat", "+", 
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox["\[HBar]c", "2"]}], 
        RowBox[{"2", " ", "\[Mu]"}]], " ", 
       FractionBox["1", 
        SuperscriptBox["dr", "2"]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"one", "[", 
          RowBox[{"len", ",", 
           RowBox[{"-", "1"}]}], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"one", "[", 
           RowBox[{"len", ",", "0"}], "]"}]}], "+", 
         RowBox[{"one", "[", 
          RowBox[{"len", ",", "1"}], "]"}]}], ")"}]}]}]}], ";"}]}]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["BOUND SOLUTIONS", "Section",
 CellChangeTimes->{{3.680493744409877*^9, 3.680493748116157*^9}, {
  3.6805015455889893`*^9, 3.680501550293067*^9}, {3.6808653695727463`*^9, 
  3.680865370845078*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"BOUND", " ", "SOLUTION"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Kappa]", "[", "En_", "]"}], ":=", 
     RowBox[{"Sqrt", "[", 
      FractionBox[
       RowBox[{"2", "\[Mu]", " ", 
        RowBox[{"Abs", "[", "En", "]"}]}], 
       SuperscriptBox["\[HBar]c", "2"]], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"wavebound", "[", 
      RowBox[{"En_", ",", "r_", ",", "l_"}], "]"}], ":=", 
     RowBox[{"SphericalHankelH1", "[", 
      RowBox[{"l", ",", 
       RowBox[{"I", " ", 
        RowBox[{"\[Kappa]", "[", "En", "]"}], " ", "r"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bbound", "[", 
      RowBox[{"En_", ",", "l_"}], "]"}], ":=", 
     RowBox[{
      FractionBox["rmax", 
       RowBox[{"wavebound", "[", 
        RowBox[{"En", ",", "rmax", ",", "l"}], "]"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"wavebound", "[", 
           RowBox[{"En", ",", "r", ",", "l"}], "]"}], ",", "r"}], "]"}], "/.", 
        RowBox[{"r", "\[Rule]", "rmax"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "HAMILTONIAN", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hnewbound", "[", 
      RowBox[{"En_", ",", "l_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"H", "=", "H0"}], ";", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"[", 
          RowBox[{"len", ",", "len"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"Vmat", "[", 
          RowBox[{"[", 
           RowBox[{"len", ",", "len"}], "]"}], "]"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"-", 
            SuperscriptBox["\[HBar]c", "2"]}], 
           RowBox[{"2", " ", "\[Mu]"}]], " ", 
          FractionBox["1", 
           SuperscriptBox["dr", "2"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dr", " ", 
             FractionBox[
              RowBox[{"Bbound", "[", 
               RowBox[{"En", ",", "l"}], "]"}], "rmax"]}], "-", "1"}], 
           ")"}]}]}]}], ";", "H"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"RETURNS", " ", "EIGENVALUE"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eigenvbound", "[", 
     RowBox[{"{", 
      RowBox[{"En_", ",", "i_", ",", "l_"}], "}"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"evalbound", ",", "evecbound"}], "}"}], "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Eigensystem", "[", 
            RowBox[{"Hnewbound", "[", 
             RowBox[{"En", ",", "l"}], "]"}], "]"}], "]"}], ",", "First"}], 
         "]"}]}]}], ";", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"evalbound", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "i", ",", "l"}], "}"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.680493787218643*^9, 3.680493804155751*^9}, {
   3.6804938710911093`*^9, 3.680493948852131*^9}, {3.6804941097265577`*^9, 
   3.680494113717909*^9}, {3.680494509394868*^9, 3.680494509458496*^9}, {
   3.680494734285623*^9, 3.6804947465412903`*^9}, {3.680496579610886*^9, 
   3.680496580954191*^9}, {3.680496895422104*^9, 3.680496899852367*^9}, {
   3.680496960095098*^9, 3.680496970887083*^9}, {3.6804970681203327`*^9, 
   3.680497091616486*^9}, {3.6804971285852127`*^9, 3.6804971339127903`*^9}, 
   3.680497166283012*^9, {3.680497677656063*^9, 3.6804976778237762`*^9}, {
   3.6804977673611393`*^9, 3.680497775289358*^9}, {3.680497852282728*^9, 
   3.680497868346592*^9}, {3.6804979007632933`*^9, 3.6804979017870903`*^9}, {
   3.680498099701664*^9, 3.680498104421687*^9}, {3.680498254103931*^9, 
   3.680498275183907*^9}, {3.680498745678541*^9, 3.680498771886622*^9}, {
   3.680499313126048*^9, 3.680499317397732*^9}, {3.6805000268957253`*^9, 
   3.680500027440053*^9}, {3.68111539761263*^9, 3.681115405558079*^9}, 
   3.681123429636064*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "10"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evalsbound", "=", 
   RowBox[{"List", "[", "]"}]}], ";", 
  RowBox[{"evecsbound", "=", 
   RowBox[{"List", "[", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6804942359992857`*^9, 3.680494236671685*^9}, {
  3.681115406708366*^9, 3.6811154078683968`*^9}, {3.6811214547088346`*^9, 
  3.681121471196011*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"RETURNS", " ", "EIGENSYSTEM"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"En", "=", 
     RowBox[{
      RowBox[{"NestWhileList", "[", 
       RowBox[{"eigenvbound", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "V0"}], "/", "2"}], ",", "n", ",", "l"}], "}"}], ",", 
        
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ">", "\[Epsilon]"}], 
         "&"}], ",", "2", ",", "100"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Re", "[", "En", "]"}], "<", "0"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"evalsbound", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"evalsbound", ",", "En"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"evecsbound", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"evecsbound", ",", 
         RowBox[{"evecbound", "[", 
          RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], ";", 
      RowBox[{"n", "++"}], ";", 
      RowBox[{"En", "=", 
       RowBox[{
        RowBox[{"NestWhileList", "[", 
         RowBox[{"eigenvbound", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "V0"}], "/", "2"}], ",", "n", ",", "l"}], "}"}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ">", "\[Epsilon]"}], 
           "&"}], ",", "2", ",", "100"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ";"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.680493969153164*^9, 3.680493994142394*^9}, {
  3.680494072933827*^9, 3.680494078885552*^9}, {3.68049475467763*^9, 
  3.6804947672214622`*^9}, {3.680498814335202*^9, 3.680498815855164*^9}, {
  3.6811154104846888`*^9, 3.681115414605412*^9}, {3.6811195481104193`*^9, 
  3.681119559599695*^9}}],

Cell[CellGroupData[{

Cell[BoxData["evalsbound"], "Input",
 CellChangeTimes->{{3.681122433901002*^9, 3.681122439441162*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.681122436146991*^9, 3.6811224397957287`*^9}, 
   3.681122520953809*^9, 3.681122763070859*^9, {3.681122935908087*^9, 
   3.681122968676136*^9}, 3.6811233768172483`*^9, 3.6811234422529383`*^9, 
   3.681123541646081*^9, 3.681123606015389*^9, 3.681124951617283*^9, 
   3.681184737542118*^9, {3.6811940157757177`*^9, 3.681194035232164*^9}, 
   3.681194150672117*^9, 3.6811945828246*^9, 3.681195289631934*^9, 
   3.681195467256753*^9, 3.6811997001995087`*^9, 3.681199843563058*^9, 
   3.681200261970275*^9, 3.681200591021914*^9, 3.681200632606391*^9, 
   3.681200667540021*^9, 3.681200713543251*^9, {3.681200763850761*^9, 
   3.6812008098517017`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MATCHES", " ", "AMPLITUDE"}], " ", "&"}], " ", "PLOTS"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"constbound", "[", "i_", "]"}], ":=", 
     FractionBox[
      RowBox[{"evecsbound", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], 
      RowBox[{"Abs", "[", 
       RowBox[{"wavebound", "[", 
        RowBox[{
         RowBox[{"evalsbound", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "rmax", ",", "l"}], "]"}], 
       "]"}]]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rmaxx", "=", "25."}], ";"}], "\n", 
   RowBox[{
    RowBox[{"normbound", "[", "i_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Psi]", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Append", "[", 
              RowBox[{"rlist", ",", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"rmax", "+", "dr"}], ",", "rmaxx", ",", "dr"}], 
                "]"}]}], "]"}], "]"}], ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{
               "evecsbound", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{
                RowBox[{"constbound", "[", "i", "]"}], " ", 
                RowBox[{"wavebound", "[", 
                 RowBox[{
                  RowBox[{"evalsbound", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"Range", "[", 
                   RowBox[{
                    RowBox[{"rmax", "+", "dr"}], ",", "rmaxx", ",", "dr"}], 
                   "]"}], ",", "l"}], "]"}]}]}], "]"}], "]"}]}], "}"}], "]"}],
          "]"}]}], "}"}], ",", 
      RowBox[{"Sqrt", "[", 
       FractionBox["1", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "dr", ",", "rmaxx"}], "}"}]}], "]"}]], "]"}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"rlist", ",", 
            RowBox[{
             RowBox[{"normbound", "[", "i", "]"}], " ", 
             RowBox[{
             "evecsbound", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}]}]}], "}"}], "]"}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", 
            RowBox[{
             RowBox[{"normbound", "[", "i", "]"}], 
             RowBox[{"constbound", "[", "i", "]"}], 
             RowBox[{"Abs", "[", 
              RowBox[{"wavebound", "[", 
               RowBox[{
                RowBox[{"evalsbound", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"Range", "[", 
                 RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", "l"}],
                "]"}], "]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "evalsbound", "]"}], ",", "1"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.680494020724709*^9, 3.6804940458850527`*^9}, {
  3.680494519499185*^9, 3.6804945227627296`*^9}, {3.680494623300119*^9, 
  3.6804946305560083`*^9}, {3.680494832958509*^9, 3.680494916479332*^9}, {
  3.6804950348811398`*^9, 3.680495045032901*^9}, {3.680498031669083*^9, 
  3.6804980518450747`*^9}, {3.68049808478157*^9, 3.680498089709523*^9}, {
  3.681020386878789*^9, 3.681020392894148*^9}, {3.681020494448127*^9, 
  3.681020497663711*^9}, {3.681020654882617*^9, 3.681020655281308*^9}, {
  3.681115417444804*^9, 3.681115428861904*^9}, {3.6811157038110743`*^9, 
  3.681115800155685*^9}, {3.6811158764548683`*^9, 3.681115886750388*^9}, {
  3.681115943271462*^9, 3.6811159435029173`*^9}, {3.681116034513897*^9, 
  3.681116046895238*^9}, {3.68111958471163*^9, 3.681119585102779*^9}, {
  3.681194634082453*^9, 3.681194634498362*^9}}],

Cell[CellGroupData[{

Cell[BoxData["evalsbound"], "Input",
 CellChangeTimes->{{3.681023060145526*^9, 3.681023061288027*^9}, 
   3.681115432021977*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "16.448555942802944`"}], "+", 
   RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.681023061675569*^9, 3.681115468566716*^9, 
  3.68111607198595*^9, 3.681118322528517*^9, 3.681118659900012*^9, 
  3.681118935668347*^9, 3.681119168528427*^9, 3.68111958849706*^9, 
  3.681121258851962*^9, 3.681121435598476*^9, 3.681121467347857*^9, 
  3.681194640116444*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RESONANCE STATES", "Section",
 CellChangeTimes->{{3.68049963133504*^9, 3.680499640130438*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"RESONANCE", " ", "SOLUTION"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", 
      RowBox[{"En_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{"Sqrt", "[", 
      FractionBox[
       RowBox[{"2", "\[Mu]", " ", "En"}], 
       SuperscriptBox["\[HBar]c", "2"]], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"waveres", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "r_", ",", "l_"}], "]"}], ":=", 
     
     RowBox[{"SphericalHankelH1", "[", 
      RowBox[{"l", ",", 
       RowBox[{
        RowBox[{"k", "[", "En", "]"}], " ", "r"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bres", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
     RowBox[{
      FractionBox["rmax", 
       RowBox[{"waveres", "[", 
        RowBox[{"En", ",", "rmax", ",", "l"}], "]"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"waveres", "[", 
           RowBox[{"En", ",", "r", ",", "l"}], "]"}], ",", "r"}], "]"}], "/.", 
        RowBox[{"r", "\[Rule]", "rmax"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "HAMILTONIAN", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hnewres", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"H", "=", "H0"}], ";", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"[", 
          RowBox[{"len", ",", "len"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"Vmat", "[", 
          RowBox[{"[", 
           RowBox[{"len", ",", "len"}], "]"}], "]"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"-", 
            SuperscriptBox["\[HBar]c", "2"]}], 
           RowBox[{"2", " ", "\[Mu]"}]], " ", 
          FractionBox["1", 
           SuperscriptBox["dr", "2"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dr", " ", 
             FractionBox[
              RowBox[{"Bres", "[", 
               RowBox[{"En", ",", "l"}], "]"}], "rmax"]}], "-", "1"}], 
           ")"}]}]}]}], ";", "H"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"RETURNS", " ", "EIGENVALUE"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eigenvres", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "i_", ",", "l_"}], "}"}], "]"}],
     ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"evalres", ",", "evecres"}], "}"}], "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Eigensystem", "[", 
            RowBox[{"Hnewres", "[", 
             RowBox[{"En", ",", "l"}], "]"}], "]"}], "]"}], ",", "First"}], 
         "]"}]}]}], ";", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"evalres", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "i", ",", "l"}], "}"}]}], 
     ")"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"eigenvres1", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "i_", ",", "l_"}], "]"}], ":=", 
     
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eval", ",", "evec"}], "}"}], "=", 
        RowBox[{"Transpose", "@", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Eigensystem", "[", 
             RowBox[{"Hnewres", "[", 
              RowBox[{"En", ",", "l"}], "]"}], "]"}], "]"}], ",", "First"}], 
          "]"}]}]}], ";", 
       RowBox[{"eval", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6805000385526037`*^9, 3.6805000468476152`*^9}, {
  3.680501096542554*^9, 3.680501098062717*^9}, {3.680502334377017*^9, 
  3.680502340201043*^9}, {3.6805023808736467`*^9, 3.6805024082342777`*^9}, {
  3.6805028361446123`*^9, 3.680502876185357*^9}, {3.680502918658387*^9, 
  3.680502923714177*^9}, {3.680839507931978*^9, 3.6808395650924*^9}, {
  3.6808416388463593`*^9, 3.680841641365535*^9}, {3.680841958921052*^9, 
  3.680841964576708*^9}, {3.680842003609765*^9, 3.6808420100255537`*^9}, {
  3.680842073210662*^9, 3.680842086043502*^9}, {3.6808421859479933`*^9, 
  3.680842187898958*^9}, {3.681115477734735*^9, 3.6811154831740627`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "10"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evalsres", "=", 
   RowBox[{"List", "[", "]"}]}], ";", 
  RowBox[{"evecsres", "=", 
   RowBox[{"List", "[", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdyTtIQmEYgGGpCNoiDSxMskjM0EJNMqUy7Do4iA6VIRgJYSFUS4HSVjgU
FkRGKekxPArhgZYiKBukwaSQCKSlhggEg0obvNT/fcPLM7wCq8MwX8Visfgk
MDVu+6IWs1rRbQg1e4INIWKO4bPBwEbYCZb2k6hDbQjGiKpRIzpTZF5BReIc
Ffgt36AoYkUrIw/hEvF5QUmDvHDjWZnILzWhOo38CnTTCrR69igO3gWO0adY
fqVCpH4K6KU9Eu1aymqj10n0714llBBdaTU6LU0Mgbb8IxrQv5tBE+cDzWQ0
Fimx0DKADiZoJxgXF11gWzhyAEbGoqi7c5jdTfQ49Ohu7rQfnLygUVW6dRNM
2XtQY015G2xO1u2AHe2SPZAr7EMp73IQvGFOUKXAazAQt+YOUbZLlgClIhvK
UD65icjT+lHfp0wHrq/1ouK3zAR++gX9Xa2fArm1HPQfEFHypQ==
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"RETURNS", " ", "EIGENSYSTEM"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"En", "=", 
    RowBox[{
     RowBox[{"x", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Im", "[", 
          RowBox[{"eigenvres1", "[", 
           RowBox[{"x", ",", "n", ",", "l"}], "]"}], "]"}], "\[Equal]", 
         RowBox[{"Im", "[", "x", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"0.1", "+", 
           RowBox[{"0.", "I"}]}], ",", "0.", ",", "V0"}], "}"}]}], "]"}]}], "//",
      "Timing"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"En", "=", 
     RowBox[{
      RowBox[{"NestWhileList", "[", 
       RowBox[{"eigenvres", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "n", ",", "l"}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", 
            RowBox[{"Abs", "[", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ">", 
          "\[Epsilon]"}], "&"}], ",", "2", ",", "100"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"evalsres", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"evalsres", ",", "En"}], "]"}]}], ";", 
    RowBox[{"evecsres", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"evecsres", ",", 
       RowBox[{"evecres", "[", 
        RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.680503047340028*^9, 3.680503054139924*^9}, {
   3.680503123101305*^9, 3.680503144237377*^9}, {3.680503282744009*^9, 
   3.680503402865078*^9}, {3.680839576764056*^9, 3.680839610572544*^9}, {
   3.680839648053954*^9, 3.680839658525558*^9}, {3.6808397452223587`*^9, 
   3.680839814311363*^9}, {3.680839862606573*^9, 3.680839921952609*^9}, {
   3.680839988145401*^9, 3.680840076288315*^9}, {3.680840422295581*^9, 
   3.6808404247985563`*^9}, {3.680840465118589*^9, 3.680840475958631*^9}, {
   3.6808405774094257`*^9, 3.680840691825604*^9}, {3.680840742307818*^9, 
   3.680840758099163*^9}, {3.680840795268738*^9, 3.6808407988991737`*^9}, {
   3.6808409086525917`*^9, 3.680840915108686*^9}, {3.6808409973172283`*^9, 
   3.680841023279039*^9}, {3.680841153936676*^9, 3.6808411612796926`*^9}, {
   3.68084120073729*^9, 3.6808412525692577`*^9}, {3.6808415553484573`*^9, 
   3.68084158870053*^9}, {3.680841631709546*^9, 3.680841631893094*^9}, {
   3.6808416807501383`*^9, 3.680841726205883*^9}, {3.6808418712085123`*^9, 
   3.6808419117926407`*^9}, {3.6808419718332567`*^9, 3.680841979536775*^9}, {
   3.680842017025416*^9, 3.680842075153009*^9}, {3.680842178379879*^9, 
   3.680842199298946*^9}, {3.681115489310923*^9, 3.6811154936384363`*^9}, {
   3.681119219978983*^9, 3.681119220353364*^9}, 3.681200382771529*^9}],

Cell[CellGroupData[{

Cell[BoxData["evalsres"], "Input",
 CellChangeTimes->{{3.6811211221314793`*^9, 3.681121131702757*^9}, {
  3.681194112905054*^9, 3.6811941136086197`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8605228568217145`", "\[VeryThinSpace]", "-", 
   RowBox[{"0.020262864787682355`", " ", "\[ImaginaryI]"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.681121128498641*^9, 3.68112113242735*^9}, 
   3.6811212685001707`*^9, 3.681121379049745*^9, 3.68112156971334*^9, 
   3.681121817683502*^9, 3.68112249524575*^9, 3.6811225657577877`*^9, 
   3.681122642272084*^9, 3.681122788978294*^9, 3.681123001031281*^9, 
   3.68112342070739*^9, 3.681123463382389*^9, 3.681123515571694*^9, 
   3.681123581586417*^9, 3.6811236434708*^9, 3.681125042996297*^9, 
   3.68118479741781*^9, 3.6811850806169357`*^9, 3.681194114281213*^9, 
   3.6811943338658113`*^9, 3.681195183331118*^9, 3.6811961505218277`*^9, 
   3.681200287304125*^9, 3.68120039851834*^9, 3.681200441991637*^9, {
   3.681200515924395*^9, 3.681200556212236*^9}, 3.681200615477343*^9, 
   3.6812006515787992`*^9, 3.681200690052196*^9, 3.681200724646538*^9, 
   3.681201020465446*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "2"}], ",", 
   RowBox[{"i", "\[LessEqual]", "5"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"En", "=", 
     RowBox[{
      RowBox[{"NestWhileList", "[", 
       RowBox[{"eigenvres", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "i", ",", "l"}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", 
            RowBox[{"Abs", "[", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ">", 
          "\[Epsilon]"}], "&"}], ",", "2", ",", "100"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"evalsres", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"evalsres", ",", "En"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"evecsres", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"evecsres", ",", 
       RowBox[{"evecres", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.681196158597026*^9, 3.681196192203074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MATCHES", " ", "AMPLITUDE"}], " ", "&"}], " ", "PLOTS"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"constres", "[", "i_", "]"}], ":=", 
     FractionBox[
      RowBox[{"evecsres", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], 
      RowBox[{"waveres", "[", 
       RowBox[{
        RowBox[{"evalsres", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "rmax", ",", "l"}], "]"}]]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"rmaxx", "=", "25."}], ";"}], "\n", 
   RowBox[{
    RowBox[{"normres", "[", "i_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Psi]", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Append", "[", 
              RowBox[{"rlist", ",", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"rmax", "+", "dr"}], ",", "rmaxx", ",", "dr"}], 
                "]"}]}], "]"}], "]"}], ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{
               "evecsres", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{
                RowBox[{"constres", "[", "i", "]"}], " ", 
                RowBox[{"waveres", "[", 
                 RowBox[{
                  RowBox[{"evalsres", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"Range", "[", 
                   RowBox[{
                    RowBox[{"rmax", "+", "dr"}], ",", "rmaxx", ",", "dr"}], 
                   "]"}], ",", "l"}], "]"}]}]}], "]"}], "]"}]}], "}"}], "]"}],
          "]"}]}], "}"}], ",", 
      RowBox[{"Sqrt", "[", 
       FractionBox["1", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "dr", ",", "rmaxx"}], "}"}]}], "]"}]], "]"}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"rlist", ",", 
          RowBox[{
           RowBox[{"normres", "[", "1", "]"}], " ", 
           RowBox[{"Abs", "[", 
            RowBox[{
            "evecsres", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], "]"}]}]}], "}"}], "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", 
          RowBox[{
           RowBox[{"normres", "[", "1", "]"}], 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"constres", "[", "1", "]"}], " ", 
             RowBox[{"waveres", "[", 
              RowBox[{
               RowBox[{"evalsres", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"Range", "[", 
                RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", "l"}], 
              "]"}]}], "]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.680503075700597*^9, 3.680503091420573*^9}, {
  3.680503468546356*^9, 3.680503483730632*^9}, {3.680842233029224*^9, 
  3.680842268452716*^9}, {3.680863546955668*^9, 3.68086369095858*^9}, {
  3.680863734215122*^9, 3.6808638092221403`*^9}, {3.680863913016672*^9, 
  3.680863951512073*^9}, {3.6808642398704023`*^9, 3.6808642735418367`*^9}, {
  3.68094604426893*^9, 3.680946045091666*^9}, {3.681019256982608*^9, 
  3.681019257381146*^9}, {3.6810213263741837`*^9, 3.681021341917232*^9}, {
  3.681021879181209*^9, 3.681021891757553*^9}, {3.681022901342835*^9, 
  3.681022901421736*^9}, {3.681022937984734*^9, 3.681022938614279*^9}, {
  3.681115494983288*^9, 3.681115499551258*^9}, {3.681116085017191*^9, 
  3.6811161312324677`*^9}, {3.681125401705141*^9, 3.681125402598257*^9}, {
  3.68120105103024*^9, 3.681201051373983*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
CRUW
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
f7rVPZWjHzxNHecyVOeJHP3g6cTYWWVG+XL0g6fsjq8vbMqRox88Hf38t9uJ
+3L0g6c1O96apKbJ0Q+enIRNQ2ruytEPnibN1uyoe0uOfvAUrDKvM0+Sox88
re2V99depRz94ClAQ7/4ilSOfvAUsvdJwYurcvSDp4vnvZ9ox8vRD55sKqTP
jH+Xox88bahqLd8TA48jPCWHtNVcj4JHME992ud+rzwFjxCeasLW99YPh0cY
Tw4V9SPtQuARwdOTbN/ZIUfhcZqndquLdnmB8Ijk6XzRv+5ah+ARzdPGp9pH
5/rBI4Yn5WCf+IM+8IjlyfPa8/Q0T3jE8aSbdqtMYzc84nmaXpz0xXg7PK7w
dDDKqfchN3gk8BTewX7Ug83wkPFUMW3KrB7O8FDwtOKE7+Kl6+GRKK7f1FKH
U2vgkcRTUUiZy1/28EjmyV7XYLvhcnjc5innMrd7mw08UnhKS0/dlWwJjzSe
fEdbundcBI8MnhRFfhss58MjS9w/X2ptok3h8UDcb20TjD4QPPLE/Rv2YsgM
I3jk8zQ7OOTb4RnwKODpY+eqglIWHoU8tS32jB4/DR7FPM2qfb12/yR4lPB0
6cJt/aJx8CjlaZvThYJRo+FRJvpsmOjlMwIe5Tzp92wd9HQIPN7w5PL1mmyc
PjwqeTrc8emMXwfBo4qnUqHv7bL+8Kjm6UV5h8l8X3jU8DR+h/GZE9rwqOfJ
NH5rU303eDSI5+HGofMWacHjs3h+PPkadE0THk3i5zmn0rq1y9AP8flnh7/f
/E2GfvCkGXq808N/ZegHT+zUUX0nNsrQD4HGLW3uFdogk/xYzpoCTbaOa/1c
K0M/xM9FWWUr3svQD4F8L7QlpL6ToR8C3cuo3WJYIUM/BLqxc7LusXKZJPRH
PwQyHOF8o+mFDP0QKHn3FBPHEhn6IVCG6aS7uU9l6IdAU2LaR7BPZOiHQE73
Tb1i82Xoh0BdJsXc6ZUrQz8Eqgm4/sEnS4Z+CFR5rY9WbboM/RBIKnfVdkiV
oR8C3X6xRuPRbRn6IdCA+KPlc27K0A+BFt4Lv6xMlKEfAo3porvKUCFDPwRK
C0tpjrwuQz8EGhk/wq/3VRn6IZBtal1DwCV4CAINCUy1aI2Fx0yB3r8Sju2O
gYeRQMoX7Tfro+BB4vu8cyPP5TQ8TASK/6qRVRkODzOBBhv5xzuGwsNcIPna
8m1lwfCwEOibx63/2QfBY5FAo67fVD0PgIelQP8e9J24wh8eVgKpwuXHnu+H
h61AbxM/Fa3cB4/lAi2oqvn+ci88Vgr0hyP1cNwFDweBXgScbK3wgMcageb9
E/p0kxs81gk0wel5cN1meDiJ90v7jt3lDA9nge54VV7+th4eLgJpnvvc9ZAj
PFwFUjysXqjtAI9tAjmnbvY4vQIeHgLJVv9vz3A7eOwU6GX6NQeZFTx2C/Ru
2q0Rs5bAw1OgJWMa8nIs4OEtUMv8f62Wm8PDV6A+rnuSq+bCw0+gL+E6bXsI
Hv4CdWj2Gd7VCB4BAu1rsTWMmgGPQIF2TJynNZGDxxGBfrf6ej9tGjyCBbJY
NnCd3WR4hAg0dOWCFx/GwyNMIP14YcrBMfCIEGjzzePrBxnC47RARmyTh2IY
PCIFutuks2qBATyiBXr1PWpo5WB4xAhk7TMp3XcgPGLFz0+9Z+v2h0ecQMeO
jzuR1Ace8QL1d6lOt9aGxxVx/5o7PmzoBo8EgYbRTFmIFjxkAq2JGLllckd4
KMT9pMptK2iXoh8CmTHPXLd/l6If4u9VfFL0+ypFPwTqrHz86EaTFP0QaE5a
/wz7T1L0Q6Beq7cfa6+Xoh8C7dEIm3ypRvrTI0OgYMuhVxZWS9EPcf/q5X/5
9FaKfgh0aq2x3tk3UvRDoO/mE3VMy6Xoh7h+DI3e1r2Q/vQoEGi5l8HhMyVS
9EM8b+r3a5gWS9EP8f3Y91zc8ESKfgj0MXWX27lHUvRDoBkLnNctzJOiHwLZ
Lw0Z05ItRT8EilsWk3E1U4p+iN7dTCbbp0nRD4HWScZu65EiRT8ECv2meSDl
lhT9EGjqlv3rPG5I0Q+BOlZY6IxMlKIf4vt8OzDquVyKfgg0S+/kP8euw+Oz
QBEOO3RMr8KjSTw/4x17fLsEj2aBioZrF6p+h0eLQFuHj3d2PQ+PVvH8H7Yl
b2Q0PDRm0Ngs79byM1LJ/wEyv0cZ
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 25.}, {0, 0.5755474856838698}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6808636040630913`*^9, 3.680863660826084*^9}, 
   3.680863709442524*^9, {3.680863748781459*^9, 3.6808638097162523`*^9}, {
   3.6808639155055847`*^9, 3.680863951936891*^9}, 3.68086402206535*^9, 
   3.680864077429137*^9, 3.680864168851262*^9, {3.6808642265333977`*^9, 
   3.680864273933621*^9}, {3.680946016148404*^9, 3.680946016367608*^9}, 
   3.680946046765169*^9, {3.6810192525806923`*^9, 3.681019257893488*^9}, {
   3.681021342962283*^9, 3.6810213555669537`*^9}, 3.6810214290557613`*^9, 
   3.681021464704626*^9, {3.681021886026929*^9, 3.68102189261162*^9}, {
   3.681022895605833*^9, 3.681022901937476*^9}, 3.68102294072099*^9, 
   3.681023084781953*^9, {3.6811155269099693`*^9, 3.6811155316169653`*^9}, 
   3.6811161375156317`*^9, 3.681118363824643*^9, 3.681118709403619*^9, 
   3.681118746295023*^9, 3.6811189667393513`*^9, 3.6811215847645493`*^9, 
   3.681122701708785*^9, 3.681123031314942*^9, 3.6811234781229687`*^9, 
   3.68112365443233*^9, 3.681125333491094*^9, 3.68112540388129*^9, 
   3.6811850832736893`*^9, {3.6812010482872334`*^9, 3.68120105216042*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["evalsres"], "Input",
 CellChangeTimes->{{3.681023086693243*^9, 3.681023087816201*^9}, {
  3.681115538894541*^9, 3.681115539198378*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8605228568217145`", "\[VeryThinSpace]", "-", 
   RowBox[{"0.020262864787682355`", " ", "\[ImaginaryI]"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.681023088216405*^9, {3.6811155367933187`*^9, 3.68111553958364*^9}, 
   3.6811161535953197`*^9, 3.681118367755529*^9, 3.681118535146171*^9, 
   3.681118710236329*^9, 3.681118748949856*^9, 3.68111897368484*^9, 
   3.681121606891087*^9, 3.681122703713768*^9, 3.6811230366801023`*^9, 
   3.681123657673232*^9, 3.681185086737474*^9, 3.68120105652544*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SCATTERING SOLUTIONS", "Section",
 CellChangeTimes->{{3.680493373029624*^9, 3.680493376576358*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"SCATTERING", " ", "SOLUTION"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ks", "[", 
      RowBox[{"En_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{"Sqrt", "[", 
      FractionBox[
       RowBox[{"2", "\[Mu]", " ", "En"}], 
       SuperscriptBox["\[HBar]c", "2"]], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"wavescat", "[", 
      RowBox[{"En_", ",", "r_", ",", "\[Delta]_", ",", "l_"}], "]"}], ":=", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"Exp", "[", 
       RowBox[{"I", " ", "\[Delta]"}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Delta]", "]"}], 
         RowBox[{"SphericalBesselJ", "[", 
          RowBox[{"l", ",", 
           RowBox[{
            RowBox[{"ks", "[", "En", "]"}], " ", "r"}]}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Delta]", "]"}], " ", 
         RowBox[{"SphericalBesselY", "[", 
          RowBox[{"l", ",", 
           RowBox[{
            RowBox[{"ks", "[", "En", "]"}], " ", "r"}]}], "]"}]}]}], 
       ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Bscat", "[", 
       RowBox[{
        RowBox[{"En_", "?", "NumericQ"}], ",", 
        RowBox[{"\[Delta]_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"k", "[", "En", "]"}], " ", "rmax", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Delta]", "]"}], " ", 
              RowBox[{
               SubscriptBox["\[PartialD]", "x"], 
               RowBox[{"SphericalBesselJ", "[", 
                RowBox[{"l", ",", "x"}], "]"}]}]}], "/.", 
             RowBox[{"x", "\[Rule]", 
              RowBox[{
               RowBox[{"k", "[", "En", "]"}], " ", "rmax"}]}]}], ")"}], "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Delta]", "]"}], " ", 
              RowBox[{
               SubscriptBox["\[PartialD]", "x"], 
               RowBox[{"SphericalBesselY", "[", 
                RowBox[{"l", ",", "x"}], "]"}]}]}], "/.", 
             RowBox[{"x", "\[Rule]", 
              RowBox[{
               RowBox[{"k", "[", "En", "]"}], " ", "rmax"}]}]}], ")"}]}], 
          ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Delta]", "]"}], 
            RowBox[{"SphericalBesselJ", "[", 
             RowBox[{"l", ",", 
              RowBox[{
               RowBox[{"k", "[", "En", "]"}], " ", "rmax"}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Delta]", "]"}], 
            RowBox[{"SphericalBesselY", "[", 
             RowBox[{"l", ",", 
              RowBox[{
               RowBox[{"k", "[", "En", "]"}], " ", "rmax"}]}], "]"}]}]}], 
          ")"}]}], ")"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bscat", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", 
       RowBox[{"\[Delta]_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       FractionBox["rmax", 
        RowBox[{"wavescat", "[", 
         RowBox[{"En", ",", "rmax", ",", "\[Delta]", ",", "l"}], "]"}]], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"wavescat", "[", 
          RowBox[{"En", ",", "r", ",", "\[Delta]", ",", "l"}], "]"}], ",", 
         "r"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{"r", "\[Rule]", "rmax"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "HAMILTONIAN", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hnewscat", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", 
       RowBox[{"\[Delta]_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"H", "=", "H0"}], ";", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"[", 
          RowBox[{"len", ",", "len"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"Vmat", "[", 
          RowBox[{"[", 
           RowBox[{"len", ",", "len"}], "]"}], "]"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"-", 
            SuperscriptBox["\[HBar]c", "2"]}], 
           RowBox[{"2", " ", "\[Mu]"}]], " ", 
          FractionBox["1", 
           SuperscriptBox["dr", "2"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dr", " ", 
             FractionBox[
              RowBox[{"Bscat", "[", 
               RowBox[{"En", ",", "\[Delta]", ",", "l"}], "]"}], "rmax"]}], 
            "-", "1"}], ")"}]}]}]}], ";", "H"}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"RETURNS", " ", "EIGEINVALUE"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"eigenvscat", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "i_", ",", 
       RowBox[{"\[Delta]_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"evalscat", ",", "evecscat"}], "}"}], "=", 
        RowBox[{"Transpose", "@", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Eigensystem", "[", 
             RowBox[{"Hnewscat", "[", 
              RowBox[{"En", ",", "\[Delta]", ",", "l"}], "]"}], "]"}], "]"}], 
           ",", "First"}], "]"}]}]}], ";", 
       RowBox[{"evalscat", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"FINDS", " ", "ENERGY", " ", "LEVEL", " ", "AND", " ", "PHASE"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"findnd", "[", "En_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"phase", "=", 
          RowBox[{"List", "[", "]"}]}], ",", 
         RowBox[{"n", "=", "1"}]}], "}"}], ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"eigenvscat", "[", 
                 RowBox[{"{", 
                  RowBox[{"En", ",", "n", ",", "\[Delta]", ",", "l"}], "}"}], 
                 "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Delta]", ",", "0.", ",", "\[Pi]", ",", "0.01"}], 
                "}"}]}], "]"}], "]"}], "<", "En"}], ",", 
           RowBox[{
            RowBox[{"n", "++"}], ";"}]}], "]"}], ";", 
         RowBox[{"phase", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"eigenvscat", "[", 
                RowBox[{"{", 
                 RowBox[{"En", ",", "n", ",", "\[Delta]", ",", "l"}], "}"}], 
                "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "\[Delta]"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"\[Delta]", ",", "0", ",", "\[Pi]", ",", "0.001"}], 
             "}"}]}], "]"}]}], ";", 
         RowBox[{"\[Delta]", "=", 
          RowBox[{"phase", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"phase", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"Nearest", "[", 
                  RowBox[{
                   RowBox[{"phase", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "En"}], 
                  "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}], 
           "]"}]}], ";", 
         RowBox[{"{", 
          RowBox[{"n", ",", "\[Delta]"}], "}"}]}], ")"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"findnd", "[", 
      RowBox[{"En_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", "=", "1"}], "}"}], ",", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"eigenvscat", "[", 
               RowBox[{"En", ",", "n", ",", "x", ",", "l"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0.", ",", "\[Pi]", ",", "0.1"}], "}"}]}], 
             "]"}], "]"}], "<", "En"}], ",", 
          RowBox[{
           RowBox[{"n", "++"}], ";"}]}], "]"}], ";", 
        RowBox[{"\[Delta]", "=", 
         RowBox[{"x", "/.", 
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eigenvscat", "[", 
              RowBox[{"En", ",", "n", ",", "x", ",", "l"}], "]"}], "\[Equal]",
              "En"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0.", ",", 
              RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}]}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Delta]", "<", "0"}], ",", 
          RowBox[{"\[Delta]", "=", 
           RowBox[{"\[Pi]", "+", "\[Delta]"}]}]}], "]"}], ";", 
        RowBox[{"{", 
         RowBox[{"n", ",", "\[Delta]"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"MATCHES", " ", "AMPLITUDE", " ", "AND", " ", "PLOTS"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"constscat", "[", "i_", "]"}], ":=", 
     FractionBox[
      RowBox[{"evecscat", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], 
      RowBox[{"wavescat", "[", 
       RowBox[{
        RowBox[{"evalscat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "rmax", ",", "\[Delta]", ",", 
        "l"}], "]"}]]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rmaxx", "=", "25."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"normscat", "[", "i_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Psi]", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Append", "[", 
              RowBox[{"rlist", ",", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"rmax", "+", "dr"}], ",", "rmaxx", ",", "dr"}], 
                "]"}]}], "]"}], "]"}], ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{
               "evecscat", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{
                RowBox[{"constscat", "[", "i", "]"}], " ", 
                RowBox[{"wavescat", "[", 
                 RowBox[{
                  RowBox[{"evalscat", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"Range", "[", 
                   RowBox[{
                    RowBox[{"rmax", "+", "dr"}], ",", "rmaxx", ",", "dr"}], 
                   "]"}], ",", "\[Delta]", ",", "l"}], "]"}]}]}], "]"}], 
             "]"}]}], "}"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"Sqrt", "[", 
       FractionBox["1", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "dr", ",", "rmaxx"}], "}"}]}], "]"}]], "]"}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wvplot", "[", "En_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{
          RowBox[{"findnd", "[", "En", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"\[Delta]", "=", 
         RowBox[{
          RowBox[{"findnd", "[", "En", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"evalscat", ",", "evecscat"}], "}"}], "=", 
        RowBox[{"Transpose", "@", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Eigensystem", "[", 
             RowBox[{"Hnewscat", "[", 
              RowBox[{"En", ",", "\[Delta]", ",", "l"}], "]"}], "]"}], "]"}], 
           ",", "First"}], "]"}]}]}], ";", 
       RowBox[{"Print", "[", 
        RowBox[{"{", 
         RowBox[{"En", ",", 
          RowBox[{"evalscat", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", "n", ",", "\[Delta]"}], "}"}],
         "]"}], ";", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"rlist", ",", 
              RowBox[{
               RowBox[{"normscat", "[", "n", "]"}], " ", 
               RowBox[{"Abs", "[", 
                RowBox[{
                "evecscat", "\[LeftDoubleBracket]", "n", 
                 "\[RightDoubleBracket]"}], "]"}]}]}], "}"}], "]"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", 
              RowBox[{
               RowBox[{"normscat", "[", "n", "]"}], " ", 
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"constscat", "[", "n", "]"}], " ", 
                 RowBox[{"wavescat", "[", 
                  RowBox[{
                   RowBox[{"evalscat", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], ",", 
                   RowBox[{"Range", "[", 
                    RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", 
                   "\[Delta]", ",", "l"}], "]"}]}], "]"}]}]}], "}"}], "]"}]}],
           "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.6804224593223877`*^9, {3.6804301198261547`*^9, 3.680430144458576*^9}, {
   3.680430430343828*^9, 3.680430544799755*^9}, {3.680430644682653*^9, 
   3.680430732963834*^9}, {3.680431100002173*^9, 3.680431108185492*^9}, {
   3.680431248963966*^9, 3.68043127818853*^9}, {3.680431378286174*^9, 
   3.680431506512566*^9}, {3.680431572353176*^9, 3.680431601074061*^9}, {
   3.680432012479787*^9, 3.680432016784362*^9}, {3.68043213137788*^9, 
   3.680432206715345*^9}, {3.680432308869207*^9, 3.6804323090770197`*^9}, {
   3.6804323571333923`*^9, 3.6804323572532587`*^9}, 3.680432483961399*^9, {
   3.68043286865368*^9, 3.680432890349701*^9}, {3.680432925302455*^9, 
   3.680432932038418*^9}, {3.6804330636080437`*^9, 3.680433088696362*^9}, {
   3.680433180529482*^9, 3.680433195649756*^9}, {3.680433293483571*^9, 
   3.680433304403652*^9}, {3.680437056612307*^9, 3.6804370569238653`*^9}, {
   3.680492215015047*^9, 3.6804922238631973`*^9}, {3.6804924477222233`*^9, 
   3.6804925295318403`*^9}, {3.680492968313734*^9, 3.680492968889697*^9}, {
   3.68049301130617*^9, 3.680493047650674*^9}, {3.680493188406488*^9, 
   3.6804933696002607`*^9}, {3.68049341608704*^9, 3.68049357299198*^9}, {
   3.680493631961183*^9, 3.680493638217081*^9}, {3.6804938954049263`*^9, 
   3.6804938977327127`*^9}, {3.680496558276001*^9, 3.680496560250619*^9}, {
   3.680500017432419*^9, 3.6805000178328123`*^9}, {3.68050355159664*^9, 
   3.680503553236487*^9}, {3.680603939581233*^9, 3.680603953284528*^9}, {
   3.680604007173369*^9, 3.6806040493582973`*^9}, {3.680604303282702*^9, 
   3.6806043051142607`*^9}, {3.680605149927103*^9, 3.6806052129594193`*^9}, {
   3.680605351212398*^9, 3.6806054232990294`*^9}, 3.680605762784666*^9, 
   3.680605818513176*^9, {3.680606111901723*^9, 3.6806061523255463`*^9}, {
   3.6806062735919647`*^9, 3.680606309711711*^9}, {3.680606370936944*^9, 
   3.680606376769084*^9}, {3.680606419649418*^9, 3.680606423953417*^9}, {
   3.6806064594185133`*^9, 3.680606463657946*^9}, {3.6808423957916107`*^9, 
   3.680842397582231*^9}, {3.680843168824945*^9, 3.680843176927113*^9}, {
   3.6808437234800673`*^9, 3.680843725686363*^9}, 3.6808439834914417`*^9, {
   3.680952421082633*^9, 3.680952428560569*^9}, {3.6811155462883253`*^9, 
   3.6811155934496317`*^9}, {3.6811161734837303`*^9, 3.681116254508862*^9}, {
   3.6811165651921167`*^9, 3.681116573720078*^9}, {3.681200107250054*^9, 
   3.681200107744721*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Pi]", "+", 
  RowBox[{
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"eigenvscat", "[", 
       RowBox[{
        RowBox[{"80", "/", "100"}], ",", "1", ",", "x", ",", "l"}], "]"}], 
      "\[Equal]", 
      RowBox[{"80", "/", "100"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "5"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.681201694790498*^9, 3.681201711678915*^9}, 
   3.6812018407686977`*^9, {3.681202334553011*^9, 3.6812023451625*^9}, {
   3.681202443131371*^9, 3.681202469547086*^9}, {3.6812025233809557`*^9, 
   3.68120253269223*^9}, {3.681202619663351*^9, 3.681202649373466*^9}, {
   3.6812028531307087`*^9, 3.681202873209072*^9}, {3.68120294074825*^9, 
   3.68120297797149*^9}}],

Cell[BoxData["3.09729063905116893291189202442860012286`6.844558484684872"], \
"Output",
 CellChangeTimes->{{3.681202345220109*^9, 3.681202355381845*^9}, {
   3.681202461972434*^9, 3.681202478525592*^9}, 3.6812025420340242`*^9, {
   3.6812026345548267`*^9, 3.681202658814988*^9}, {3.681202839656294*^9, 
   3.6812028620164633`*^9}, 3.68120291991794*^9, {3.681202950345971*^9, 
   3.6812029844799356`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eigenvscat", "[", 
     RowBox[{
      RowBox[{"925", "/", "100"}], ",", "1", ",", "x", ",", "l"}], "]"}], 
    "\[Equal]", 
    RowBox[{"925", "/", "100"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.", ",", 
     RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
   RowBox[{"WorkingPrecision", "\[Rule]", "5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.681202972090543*^9, 3.681202981537969*^9}, {
  3.681203036436157*^9, 3.681203039939724*^9}, {3.681204126556594*^9, 
  3.681204131891794*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"5.`\\\"}]\\)\[NoBreak] digits of working \
precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681203097368423*^9, 3.681204182772554*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "2.86114266746196269268266478495708176017`5."}], 
  "}"}]], "Output",
 CellChangeTimes->{3.681203020121449*^9, 3.6812030973691797`*^9, 
  3.681204182773872*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenvscat", "[", 
  RowBox[{
  "0.8605229999999998", ",", "1", ",", "1.1906810151347154", ",", "2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.681202676787457*^9, 3.68120271345463*^9}, {
  3.681202749209202*^9, 3.681202766631157*^9}}],

Cell[BoxData[
 RowBox[{"0.8602811973586556`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.681202694687521*^9, 3.681202717588922*^9}, 
   3.681202770081822*^9, {3.6812028095548077`*^9, 3.681202825754236*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Precision", "[", "eigenvscat", "]"}]], "Input",
 CellChangeTimes->{{3.681202412181859*^9, 3.6812024227780657`*^9}}],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{3.6812024231115026`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"wvplot", "[", "0.860523", "]"}], "//", "Timing"}]], "Input",
 CellChangeTimes->{{3.680433373868791*^9, 3.6804333746598167`*^9}, 
   3.680435854489259*^9, {3.680436959498003*^9, 3.680436963481512*^9}, {
   3.6804370529151783`*^9, 3.680437053114812*^9}, {3.680491835440606*^9, 
   3.68049183593636*^9}, {3.680493580672111*^9, 3.680493583479937*^9}, {
   3.6805035600119133`*^9, 3.680503562539624*^9}, {3.6805042099500313`*^9, 
   3.680504212021035*^9}, {3.680604323561583*^9, 3.680604325001102*^9}, {
   3.680605273439784*^9, 3.680605274727408*^9}, {3.680606243406543*^9, 
   3.68060624589408*^9}, {3.6806065039542713`*^9, 3.680606505089884*^9}, {
   3.6808575162760277`*^9, 3.680857557761392*^9}, {3.6808642998138647`*^9, 
   3.680864302357315*^9}, {3.681019279389553*^9, 3.681019280629363*^9}, {
   3.681023106329789*^9, 3.681023108960766*^9}, {3.6811161709911013`*^9, 
   3.681116171753017*^9}, {3.681118403621785*^9, 3.681118406892433*^9}, 
   3.681118477183106*^9, {3.681118547630986*^9, 3.681118592310817*^9}, {
   3.681118793065896*^9, 3.681118794129755*^9}, {3.6811188478835897`*^9, 
   3.681118849755221*^9}, {3.681118988110978*^9, 3.6811189907250147`*^9}, {
   3.681122804130081*^9, 3.681122806960294*^9}, {3.681123043941864*^9, 
   3.681123045219904*^9}, {3.6811236660310287`*^9, 3.681123666525186*^9}, {
   3.681185095259922*^9, 3.681185095883513*^9}, {3.6812000513435087`*^9, 
   3.681200053605173*^9}, {3.6812001322805557`*^9, 3.681200157983265*^9}, {
   3.681200190673547*^9, 3.6812001915356417`*^9}, {3.68120106482263*^9, 
   3.681201066356558*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.860523`", ",", 
   RowBox[{"0.8605229999999998`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", "1", ",", 
   RowBox[{"1.1906810151347154`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.68111669326823*^9, 3.6811184228762913`*^9, 3.6811184975959253`*^9, {
   3.681118565716236*^9, 3.6811186084957237`*^9}, {3.6811188037116632`*^9, 
   3.681118820534734*^9}, 3.6811188665860643`*^9, 3.681119001045556*^9, 
   3.6811194357702827`*^9, 3.681122816321213*^9, 3.681123057028652*^9, 
   3.681123680059318*^9, 3.681185240077036*^9, 3.681200063137868*^9, {
   3.681200118831984*^9, 3.6812001461744556`*^9}, 3.68120017678403*^9, 
   3.6812002139671497`*^9, 3.6812013650903463`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"855.92`", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.005555555555555556], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw83Xc8Vf8fwHHZe+99XePium4qSeO8KSMq2tpaKglRSEtDSkPJSGlSqWTv
vUdG9t6ViDKKhPK733qfX//8Hn507/m8n5/XPW733vOl7HPZcJCdjY2thoeN
7b//PS0ZY9HrfZnw/bVta0PFlRX/vg4i/gSXDIZWpKxIU/YdWp/2iKCo57iv
XVqP348kQtW0HWnv+lfcD/vvzyvCmG9IwhomV6T//fkYQuepi9V+Iw6C9QXr
/4knhFb2m8pfEib+/f0kYpWy59GeQmmCvznCdTl/KvFi7TnDrQtUib83F5ZO
fGKGfAw31CS0dwYUTNCyiO8JC91X3NQj/h1PDvG1cJmPJX0BEcn6280ReYRc
Xn5t104jYvjv/eUTt2urcrsOryAWLvjvTyHxYpmh5+Y4U7z/IiLS6aWY2Wtz
onCCxrqHYmKTkmT0Bh1rQuDv8ZQSMhekT5go2hIb/t5hGeFldLXywLcNxL/1
lhPGSzsPXxbZQvR5/3eD74jBV4nTfpe24fFWEgIP2Q6uXbeLOP7f4blWEfoX
6dSGdHvi33yqCblj9IK4mX0E298/NUStp7zTA+eDuJ4a4mueCeOY5GHCsve/
O6glfrRRhX99c8T11RIv2V7UCrA5E7cL/ltAHUHpmPiQHOlK/F3ugnri2yG3
1U4ObsTf5TTXE3mW77y4zE/g+huI1LnrZttXeRAq/x2OciPx3Mmok9jnhfNo
JFpu3Xzr98SbOOTw358m4sHmJdZzc2dwPs3Ea8ufdq4XzhP/3ZpkTDMR9Onm
4hrxCzivFqKlufRClMdFYvK/m5toIfocVF49Hr6E82sl4pT/qImf9CVW/N0A
bYTW0RHmdlE/nGcb8cj0RuP7nKvE38PzbSf4zj8vL/Pxx/l2EF81Yo7f23KD
qKr8708H0dPsUB8At3DenYRT9aficyq3Cam/B9hFPHz4rE9a+w7Ov4uoeSoi
s2h5IPH35nZ2E59/Pf05u+MuevQQn/0e1972DcL19BCO+4teiGUEo08PodQu
qP34Vwiur4d45B+ZsnXVPfTqJaR5Zjbb3Q/D9fYSZ57+ic+auY9+vcSajLPS
jw+H4/r7iGDlWCfZ3ofo2Ucc+di7GA4+Jv7dXB8h8kBndYj3E/T9QFivUJQ6
ZfkU5/OBYNAcVTYoPkPvD8TStd/W6Uw+w3l9JMrVPGr4miLQ/yOh4RosNZUZ
ifP7SISZ3aqfefkc98Mn4s2qdewK91/gPD8RRfsvtG8PfIn74xPRtymjNfd2
FM63n9ibFJe6NvgV7pd+olA92IXnyWucdz/h6XnaeCTuDfb+mTDgaA/gLovG
+X8mhM00NNZ9eov76TOR3O/2tZg3Fj0GiD9PI24YysWhxwARbbpIgBIfhx4D
hJ7BVwvKmnj0GCDeNA2kLPoSjx6DxKzZd8ed1xPQY5C40PpY6q5+InoMErsX
uvI0NyWixxdCJZ+LqXEhCT2+ELmvdit7M5Jxf34hgtcoz6vrSkaPIeIEo/cF
LTAFPYYIO8fwc6csU9FjiEgP572XOy8NPYaJdAvZyInsNPQYJrZHn5qQOpuO
HsOEvIT6BXkiAz2+EqfPjnbNcmSix1eCN325VUpFJnp8JfLLHz8jQrLQ4xvx
5el9pzv7s9HjGyGveLguYkEOenwjcmjlkc7cuegxQjir9e0YbM9FjxGiQUHs
Btf2PPQYIX4P319/sDQPPUaJcyIXjUQM83E9owSnzw7bP8/z0WeU2DH/8zk9
mQJc3yjxY/CRT+i1AvQaJTY5Ww0a/i7A9Y4SGUP31LndCtFvlOgPzvWY+1yI
6x8jFI8o/VbcU4SeY4Q4+8cYu+YinMcYEXO6eFe0bTH6jhE3TF+miFUU43zG
CIWqbaYXzUvQe4zYprnZ4WdBCc5rnMgy8j7oCKXoP06sLWmxb8gpxfmNE51T
p+wYK8pwP4wTdE99+vGcMjwfjROSAw7hwUQ59jpOcFbPsw7KL8f5fiekIudn
HVz1DvfLd2Kjut1W9rJ3OO/vxJ3HQ4f2ranA/fOd2LFmj/K52gqc/3fiyAmR
O2u3VuJ++k78PjA/u6yzEj1+EJPcpX6fD1Shxw9Cgj0k5+lwFXr8IKxt1ORG
TlSjxw/iqkL0ktLf1ejxg1jUyYyh+L1Hjx/E/pzUKW/eGvT4QTik/Ux+uLYG
PSaI21t8M34E1qDHBFFH+f3qdEsNekwQIu/cVBnKtegxQTT9+JXAc6AWPSaI
W0zmKMfrWvSYIM5Pl9orj9aixyQhVyx5dYNhHXpMElNDoR8fnKlDj0nC8uKt
0YmCOvSYJO4PnFfbyVePHpMEh3TV13KbevSYJIZ8oNA4pB49fhLGdx+Jve6o
R4+fxMsgQ3MJagN6/CSe/nSvOn6kAT1+EjzjLhL5sQ3o8ZOIX3vp8uxEA3r8
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
4sPSmjwZJsffP/pT7Mrge2+95cP/C00fI30=
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.005555555555555556], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
MKnu/A==
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{537., Automatic},
    Method->{},
    PlotRange->{{0, 25.}, {0, 0.5887745226453526}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.681116693562469*^9, 3.6811184231114483`*^9, 3.68111849783709*^9, {
   3.6811185659513893`*^9, 3.681118608727056*^9}, {3.681118803969149*^9, 
   3.6811188208102207`*^9}, 3.681118866837831*^9, 3.681119001333509*^9, 
   3.681119435985536*^9, 3.6811228183832083`*^9, 3.6811230573057127`*^9, 
   3.6811236820913277`*^9, 3.68118524021299*^9, 3.681200063837183*^9, {
   3.6812001197677813`*^9, 3.681200147100339*^9}, 3.681200177712318*^9, 
   3.681200214894271*^9, 3.6812013652319098`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"phasedata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"findnd", "[", "x", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.1", ",", "0.9", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.680849096466652*^9, 3.680849143712572*^9}, {
   3.68085026882513*^9, 3.680850314609213*^9}, {3.6808540727228413`*^9, 
   3.68085407673076*^9}, 3.680863397223774*^9, {3.680864355382566*^9, 
   3.680864362062392*^9}, {3.681123064692511*^9, 3.681123070332335*^9}, {
   3.6811236907663383`*^9, 3.6811236911579437`*^9}, {3.681185359447818*^9, 
   3.6811853675279512`*^9}, {3.681186349605983*^9, 3.681186356757679*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"phasedata", ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], ",", "Red"}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.680849096466652*^9, 3.680849143712572*^9}, {
  3.68085026882513*^9, 3.680850300510682*^9}, {3.6808590520905037`*^9, 
  3.680859119875533*^9}, {3.680859165863468*^9, 3.6808591883320227`*^9}, {
  3.680859229714102*^9, 3.6808592309827347`*^9}, {3.680859321591283*^9, 
  3.680859408409452*^9}, {3.680864826438867*^9, 3.680864834917656*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.1, 3.138800109267336}, {0.2, 3.128311801470156}, {
      0.30000000000000004`, 3.110977630464092}, {0.4, 3.089354282750749}, {
      0.5, 3.066771964727697}, {0.6, 3.048281233054938}, {0.7000000000000001, 
      3.0464076139289866`}, {0.8, 3.1350250927567864`}, {0.9, 
      2.4266978021665015`}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 2.902215460008285},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->NCache[{None, {{Rational[1, 2] Pi, 
       RGBColor[1, 0, 0]}}}, {None, {{1.5707963267948966`, 
       RGBColor[1, 0, 0]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{726., Automatic},
  Method->{},
  PlotRange->{{0, 0.9}, {2.913481395687287, 3.138800109267336}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.680850200243445*^9, 3.680850291729999*^9, 3.680850356872921*^9, 
   3.6808552100008163`*^9, 3.680858427095522*^9, {3.6808590582600727`*^9, 
   3.680859085883705*^9}, 3.680859120410627*^9, 3.680859173036498*^9, 
   3.6808592316728897`*^9, {3.680859327086535*^9, 3.68085940906669*^9}, 
   3.680864585112508*^9, {3.680864829292768*^9, 3.680864835460553*^9}, 
   3.6811232020680447`*^9, 3.6811247119985027`*^9, 3.68118633470546*^9, 
   3.6811870603528423`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"findres", "[", "n_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"phase", "[", 
      RowBox[{"y_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"eigenvscat", "[", 
           RowBox[{"y", ",", "n", ",", "x", ",", "l"}], "]"}], "\[Equal]", 
          "y"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0.", ",", 
           RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    RowBox[{
     SubscriptBox["\[Delta]", "res"], "=", 
     RowBox[{"y", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", "y", "]"}], "\[Equal]", 
         RowBox[{"Pi", "/", "2"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0.925", ",", "0.9", ",", "0.95"}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "6"}]}], "]"}]}]}]}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.6808468810888042`*^9, 3.6808468909956417`*^9}, {
  3.680846934612537*^9, 3.680846961132778*^9}, {3.680847194568553*^9, 
  3.680847374282238*^9}, {3.6808584570164757`*^9, 3.680858458266645*^9}, {
  3.680864725116372*^9, 3.680864734236668*^9}, {3.6811232151435337`*^9, 
  3.681123221039124*^9}, {3.681124748085923*^9, 3.681124752045969*^9}, {
  3.681203055099395*^9, 3.681203060699506*^9}, {3.6812035697071133`*^9, 
  3.681203577522913*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Delta]", "res"], "=", 
  RowBox[{"findres", "[", "1", "]"}]}]], "Input",
 CellChangeTimes->{{3.680847386525696*^9, 3.680847388906041*^9}, {
   3.6808585682661333`*^9, 3.6808585812516108`*^9}, {3.680863478297586*^9, 
   3.68086347867348*^9}, 3.681123231015163*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.681204105310439*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"funcphasedata", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"phasedata", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Spline\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dfuncphasedata", "=", 
   RowBox[{"funcphasedata", "'"}]}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"funcphasedata", "[", "x", "]"}], ",", 
      RowBox[{"dfuncphasedata", "[", "x", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1.0", ",", "1.4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["\[Delta]", "res"], ",", "Red"}], "}"}], "}"}], ",", 
      "None"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.680849857510713*^9, 3.6808498762348013`*^9}, {
   3.680849914067349*^9, 3.680849916899426*^9}, 3.680853163149538*^9, 
   3.680853299647491*^9, {3.680853888520605*^9, 3.6808538912716923`*^9}, {
   3.680853969705566*^9, 3.68085398831341*^9}, 3.680854159675955*^9, 
   3.680855292396118*^9, {3.680855848205282*^9, 3.6808558854377604`*^9}, {
   3.680855972430798*^9, 3.680855972590219*^9}, {3.680856016536673*^9, 
   3.680856020799489*^9}, {3.680856190786376*^9, 3.680856219466021*^9}, {
   3.680858610648383*^9, 3.680858671299796*^9}, {3.680858746218295*^9, 
   3.680858879872031*^9}, {3.680858917514893*^9, 3.6808590299644327`*^9}, {
   3.6808593551417913`*^9, 3.680859361387748*^9}, {3.6808648394705677`*^9, 
   3.6808648453416224`*^9}, {3.681123290561391*^9, 3.6811232931839046`*^9}, {
   3.681124839863171*^9, 3.68112486224726*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
yA==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
yQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{{1.2138647992632816`, 
      RGBColor[1, 0, 0]}}, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.680855304336458*^9, 3.680855846619293*^9, {3.680855877819531*^9, 
   3.680855885803811*^9}, {3.6808559985490026`*^9, 3.680856021351102*^9}, 
   3.680856220244144*^9, {3.680858623771412*^9, 3.680858639960702*^9}, 
   3.680858672851179*^9, 3.68085878546294*^9, {3.680858818577733*^9, 
   3.680858829339715*^9}, {3.6808588738933887`*^9, 3.6808588804679413`*^9}, {
   3.680858921214861*^9, 3.680858937691805*^9}, {3.680858969358975*^9, 
   3.680858975733376*^9}, {3.680859013792292*^9, 3.6808590306940193`*^9}, {
   3.680859356561607*^9, 3.680859361803726*^9}, 3.6808648089602957`*^9, 
   3.6808648460233173`*^9, {3.681123277927638*^9, 3.6811232935442343`*^9}, {
   3.681124829387413*^9, 3.681124862728868*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["1", 
  StyleBox[
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"funcphasedata", "[", "x", "]"}], ",", "x"}], "]"}], "/.", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"findres", "[", "1", "]"}]}]}],
   FontWeight->"Plain"]]], "Input",
 CellChangeTimes->{{3.680855414706579*^9, 3.680855420452979*^9}, {
  3.6808556868025217`*^9, 3.680855695073987*^9}, {3.680855753060021*^9, 
  3.6808557532672567`*^9}, {3.680855898526195*^9, 3.680855920416067*^9}, {
  3.680855967478841*^9, 3.680855968126485*^9}, {3.6808560356168947`*^9, 
  3.680856037032143*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681124887779998*^9}],

Cell[BoxData["0.03837356439097371`"], "Output",
 CellChangeTimes->{3.680855724447871*^9, 3.6808557833661613`*^9, 
  3.680855950861974*^9, 3.680855998469925*^9, 3.6808594489815273`*^9, 
  3.680864947277627*^9, 3.681123327298113*^9, 3.6811249200207167`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1680, 991},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CellContext->Notebook,
FrontEndVersion->"10.3 for Linux x86 (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 102, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[707, 27, 7279, 145, 421, "Input"],
Cell[7989, 174, 46572, 762, 254, "Output"]
}, Open  ]],
Cell[54576, 939, 1161, 36, 137, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55774, 980, 202, 3, 67, "Section"],
Cell[55979, 985, 4146, 107, 321, "Input"],
Cell[60128, 1094, 518, 14, 77, "Input"],
Cell[60649, 1110, 2437, 69, 165, "Input"],
Cell[CellGroupData[{
Cell[63111, 1183, 102, 1, 32, "Input"],
Cell[63216, 1186, 713, 11, 32, "Output"]
}, Open  ]],
Cell[63944, 1200, 4554, 114, 365, "Input"],
Cell[CellGroupData[{
Cell[68523, 1318, 128, 2, 32, "Input"],
Cell[68654, 1322, 442, 9, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69145, 1337, 100, 1, 67, "Section"],
Cell[69248, 1340, 4560, 128, 342, "Input"],
Cell[73811, 1470, 867, 21, 77, "Input"],
Cell[74681, 1493, 3067, 69, 121, "Input"],
Cell[CellGroupData[{
Cell[77773, 1566, 153, 2, 32, "Input"],
Cell[77929, 1570, 967, 16, 32, "Output"]
}, Open  ]],
Cell[78911, 1589, 1298, 36, 77, "Input"],
Cell[CellGroupData[{
Cell[80234, 1629, 4309, 109, 321, "Input"],
Cell[84546, 1740, 37299, 621, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121882, 2366, 149, 2, 32, "Input"],
Cell[122034, 2370, 543, 10, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[122626, 2386, 105, 1, 67, "Section"],
Cell[122734, 2389, 17016, 435, 972, "Input"],
Cell[CellGroupData[{
Cell[139775, 2828, 923, 22, 32, "Input"],
Cell[140701, 2852, 404, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141142, 2863, 577, 15, 32, "Input"],
Cell[141722, 2880, 718, 13, 41, "Message"],
Cell[142443, 2895, 215, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142695, 2905, 260, 6, 32, "Input"],
Cell[142958, 2913, 265, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143260, 2922, 139, 2, 32, "Input"],
Cell[143402, 2926, 82, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143521, 2932, 1598, 23, 32, "Input"],
Cell[145122, 2957, 811, 14, 23, "Print"],
Cell[145936, 2973, 37418, 628, 352, "Output"]
}, Open  ]],
Cell[183369, 3604, 805, 18, 32, "Input"],
Cell[CellGroupData[{
Cell[184199, 3626, 668, 15, 32, "Input"],
Cell[184870, 3643, 1767, 39, 473, "Output"]
}, Open  ]],
Cell[186652, 3685, 1547, 39, 55, "Input"],
Cell[CellGroupData[{
Cell[188224, 3728, 305, 6, 32, "Input"],
Cell[188532, 3736, 77, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188646, 3742, 1762, 39, 77, "Input"],
Cell[190411, 3783, 12964, 226, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203412, 4014, 591, 14, 65, "Input"],
Cell[204006, 4030, 709, 13, 41, "Message"],
Cell[204718, 4045, 255, 3, 32, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

