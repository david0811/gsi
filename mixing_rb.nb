(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     53081,       1306]
NotebookOptionsPosition[     50697,       1218]
NotebookOutlinePosition[     51034,       1233]
CellTagsIndexPosition[     50991,       1230]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{"Mixing", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"one", " ", "res"}], ",", " ", 
     RowBox[{"one", " ", "bound"}]}], ")"}]}], "Title"]], "Input",
 CellChangeTimes->{{3.680865499578436*^9, 3.6808655011509447`*^9}, {
  3.681624053578092*^9, 3.681624058993946*^9}, {3.681634341206436*^9, 
  3.6816343415261803`*^9}}],

Cell[CellGroupData[{

Cell["DEFINE PARAMTERS", "Section",
 CellChangeTimes->{{3.680865514566743*^9, 3.680865520663179*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["m", "N"], "=", "940"}], ";", 
  RowBox[{"\[HBar]c", "=", "197.327"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"V0", "=", "8"}], ";", 
  RowBox[{"R", "=", "2.55"}], ";", 
  RowBox[{"a", "=", "0.5"}], ";", 
  RowBox[{"\[Mu]", "=", 
   RowBox[{
    FractionBox["8", "9"], " ", 
    SubscriptBox["m", "N"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"E2", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rmax", "=", "10."}], ";", 
  RowBox[{"dr", "=", "0.01"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rlist", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"dr", ",", "rmax", ",", "dr"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"len", "=", 
   RowBox[{"Length", "[", "rlist", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vwoods", "[", "r_", "]"}], ":=", 
   FractionBox[
    RowBox[{"-", "V0"}], 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"r", "-", "R"}], "a"], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vcent", "[", 
    RowBox[{"r_", ",", "l_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"l", 
     RowBox[{"(", 
      RowBox[{"l", "+", "1"}], ")"}], 
     SuperscriptBox["\[HBar]c", "2"]}], 
    RowBox[{"2", "\[Mu]", " ", 
     SuperscriptBox["r", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V00", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Vwoods", "[", "r", "]"}], "+", 
    RowBox[{"Vcent", "[", 
     RowBox[{"r", ",", "0"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V22", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Vwoods", "[", "r", "]"}], "+", 
    RowBox[{"Vcent", "[", 
     RowBox[{"r", ",", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V00mat", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"V00", "[", "rlist", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V22mat", "=", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"V22", "[", "rlist", "]"}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", "MIXING", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V02mat", "=", 
    RowBox[{"V20mat", "=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"Vwoods", "[", "rlist", "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"INITIAL", " ", "HAMILTONIAN"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"one", "[", 
    RowBox[{"n_", ",", "d_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{
     RowBox[{"1", "+", 
      RowBox[{"0", 
       RowBox[{"Range", "[", 
        RowBox[{"n", "-", 
         RowBox[{"Abs", "[", "d", "]"}]}], "]"}]}]}], ",", "d"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H000", ":=", 
   RowBox[{"V00mat", "+", 
    RowBox[{
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox["\[HBar]c", "2"]}], 
      RowBox[{"2", " ", "\[Mu]"}]], " ", 
     FractionBox["1", 
      SuperscriptBox["dr", "2"]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"one", "[", 
        RowBox[{"len", ",", 
         RowBox[{"-", "1"}]}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"one", "[", 
         RowBox[{"len", ",", "0"}], "]"}]}], "+", 
       RowBox[{"one", "[", 
        RowBox[{"len", ",", "1"}], "]"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H022", ":=", 
   RowBox[{"V22mat", "+", 
    RowBox[{
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox["\[HBar]c", "2"]}], 
      RowBox[{"2", " ", "\[Mu]"}]], " ", 
     FractionBox["1", 
      SuperscriptBox["dr", "2"]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"one", "[", 
        RowBox[{"len", ",", 
         RowBox[{"-", "1"}]}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"one", "[", 
         RowBox[{"len", ",", "0"}], "]"}]}], "+", 
       RowBox[{"one", "[", 
        RowBox[{"len", ",", "1"}], "]"}]}], ")"}]}], "+", "E2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H0", ":=", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"H000", ",", "V02mat"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"V20mat", ",", "H022"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"V00", "[", "rlist", "]"}], ",", 
     RowBox[{"V22", "[", "rlist", "]"}]}], "}"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"dr", ",", "rmax"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "V0"}], ",", "V0"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.680865572851472*^9, 3.680865584456111*^9}, 
   3.6808659985044823`*^9, {3.680866385990489*^9, 3.68086649200599*^9}, {
   3.680866607287784*^9, 3.680866670067314*^9}, 3.680866706281349*^9, {
   3.680866746289213*^9, 3.6808668181468687`*^9}, {3.6808674646928387`*^9, 
   3.680867464771639*^9}, {3.68086759659118*^9, 3.680867605426921*^9}, {
   3.680867681023897*^9, 3.680867688559404*^9}, {3.680942063291539*^9, 
   3.680942086203082*^9}, {3.6810199119908237`*^9, 3.6810199289669027`*^9}, {
   3.6810200290824347`*^9, 3.6810200322411346`*^9}, 3.681023218299921*^9, {
   3.681119080319104*^9, 3.6811190898066387`*^9}, {3.681124483057832*^9, 
   3.681124483161131*^9}, {3.681189772799046*^9, 3.68118978801467*^9}, {
   3.681190069450693*^9, 3.6811900702982807`*^9}, {3.681190218924685*^9, 
   3.681190219556695*^9}, {3.681190280826458*^9, 3.6811903111586657`*^9}, {
   3.6811906343968487`*^9, 3.681190685668676*^9}, {3.68119103605015*^9, 
   3.681191036848613*^9}, {3.6811910672434683`*^9, 3.681191111419383*^9}, {
   3.681192714828454*^9, 3.6811927153233147`*^9}, {3.6812031204533978`*^9, 
   3.681203120548655*^9}, {3.6812053756331987`*^9, 3.681205392195472*^9}, {
   3.6815495565473633`*^9, 3.681549566657702*^9}, 3.681627993228239*^9, {
   3.681631147382188*^9, 3.681631148626247*^9}, 3.681633498626193*^9, {
   3.681634402415247*^9, 3.6816344026072598`*^9}, {3.681634485979477*^9, 
   3.6816344861124563`*^9}, {3.6816347489414597`*^9, 3.681634766834074*^9}, 
   3.681634899569803*^9, {3.681635646253395*^9, 3.681635646379505*^9}, 
   3.681635690638803*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
br6U/wcfMXkz
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
f47X5fhhVuShxuyl3NnL+1mRhxoVHQbM29rNijzU+GbKPHO+rRVKLQOq8cua
7x5fpVbkocZ9tfJ8Fwcr8lBjPd8wakkTlzzM44/tUvmsmkseGnj+mTzav4xL
HhpkbcrYdqGESx4apO5+v92vgEseGtwrdBzy+DSXPDTIbbmcEneQSx4a8/7y
ObxDOpc8NCgfu3L3mxQueWhg7Jg5OHsZlzw0uHY/tn/SfC55aHDy6a8Lo6Zy
yUODGwP/Lh8XyiUPDRqmNUSMHcYlDw2az32umdKfSx4a9Nk05I+EHlzy0EDF
qfq+pz2XPDQo3pqPUiWXPDT41bfqF7Erl84PDV5brVNP5HDpPDdfT1HjmjM/
OPS8q8Hg8M3rNe849H6uQd6HZ4qUZxzy0KBINlXmUsghDw1sj1XHbrnMIQ8N
sNTL0/MUhzw02Gns1b74AIc8tHhUWD7yj3QOeWhxueeYzL4bOOShxZCBd+2t
kjjkoUW+TfKch7Ec8tAiIZJdeDKaQx5a3JHuFeyeyCEPLfoFu3RMC+GQhxYB
OZ/ttw/mkIcWPs68XQe8OeShRaL/sBdXunDIQ4sB2swT79ty6PnKfD32eqlK
wSEPLQKt3n8b7cIhDy3mzfDxzuBwyEMLv6dzK77XsMnDPL93NU9++cCm80ML
G2WA4PxLNnlo0bzfIb7bfTZ5aLEmrNL++HU2eZj/fGrmYVMemzy0uOjTdkzp
UTYeWTy0iJw8pmVBFps8tLAaFpDcZhubPLS4AEXL02Q2eWhxS9bYN305+///
f4YtXXr7TItlM/Ox1mHEz12+95/BJh8djjqOG952MpuZn6sO7DWmQYLRbDpf
dEhZvOiW/VCar1yHfpHX7zj2Z5OfDn+Or+on60XzN5p/3tczCk93NnnqUFTn
ERCsp/vRSYe/YgcXLJSwyVcHv4S2i486spn9o7cOq75VR35lsel9U4fq5ZXz
vWpYzH7SX4e9sRO2J39gkb8OJ9Zfuf3pFYvZXwJ1wOu1jSGlLFoPOnicHqK6
fovF7P+jdHCevt3ge5FF60MH9yG9ODdPspjzeaIOdtPLj4w5xKL1osP71AWq
bxks5n5P06FY+9pncyqL1o8O6/KNDgPWspj7H6ND1z+GzKlfyqL1pMPBDXHT
zvyPxXgs0SHL8927pTNYtL50yI5/XhbyG4vxWGUeLzLHv+tYFq03HcrW3HaV
BbMYj006fHY50sl2IIvWnw75S8q3tHqxGI90HaIu2Q1gd2XRetRh8+tCvVN7
FuOxX4eB1k0ddBoWrU8dSr1Cg71FLMYjV4ces+//OdmBRfu5eb34j761gcVi
+sszr4cfD4WbP7WamPVr9lo9KEb2pNVkGe6aDsFJgZmHClpNzHrWYeOeoHUj
cltNFo8iHVRfHiscdrWamPNYh4DktB4la1pNFo9nOjguG33jcGyriXle0qH9
PPbFtIhWk+X9qFIHxcJ029RfWk3M+jdf77vRKzPRarJ4fNHBJIjtdNWj1cT0
oMMKScSbH4pWk8WjQYfehzO39LJrNTF96NHr89Nuq360mJg+9JhsuLX7U3mL
ielDD7fEX4omFraYmD70WKuYe7Ayr8XE9KFH6nw/dfzBFpPleVKuh2g1V2hI
azExfehxZx439lFSi4npQw+Hwae9ds5rMTF9mL//9VH/+ZNaTEwfejQc3/5n
WHCLielDD6/1/apH+rSYLMu5tx7lCYmTQt1bTMx+qMecpKklcxUtjEd/PdRL
HTpts2thPPz1cKzeNb64ptnE9KFH3uklIfI3zYzHcD0ahfLmmSXNjMcoPawG
fh9QerGZ8QjVo/3CU9LAnGbGY6IeB1MNEUXpzYxHhHk+Djx1xNpmxmOa+f7s
mPeTQ3wz4zFLj5FDx8fnRTUzHjF6zJPWs5aMaWY84vTILVyeNXxQM+OxRI8Z
deHjuvZqZjwS9XizptnZ0K6Z8VilR8HLz4d04mbGI1kPj2kv2nWyamY8NulR
mLUqasi3JsYjTY+tz+9GxJQ3MR7p5uvjpjtkFzUxHnvM46/m+tXmNzEe+/U4
YDJaB+U0MR5HzPdX9HOf3J1NjEeuHqu4aSXtkpsYj9N6hJQdyd+f0MR45Okh
6dHypfeMJupDjwqeYeTDsCbqw3y/3t9+vGxoE+NxW4+02ddn+3g3UR96jI7+
4Wjr0UR96PEpJWDLc1UT9aFH2KjHNpecmqgPPR49u+x/vKmR+tDj5OmBAcc/
NlIfejx8mMu+9KyR+tDDe9Tccc9vN1IfenwM5w62yWukPvQQN9f+0/dwI/Vh
wBJ2Y8aSHY3UhwEDH9+qLlrbSH0YcCXKtKFzQiP1YcCTr6ZF22c0Uh8GRD67
vUs8vpH6MMBlX8OnbcMaqQ8D+v7zb4gnGqkPAyL8v92417mR+jAgvd0wr0X6
RurDAP/j0dt6CRqpD/P3Z9982sJppD4MqJfUfCr+1kB9GNDLYdPl3IoG6sOA
g5mhQRkPGkzM+WEA77VyybaCBurDgAn/Ozpk96kG6sOAcad4u07sb6A+DBgU
jTkP0hqoDwNeXhqby17dYLKczxMNSFGtDekT30B9GPCmQRqwOLqB+jCg29Og
pMLwBurDgOWyLfUewQ3UhwEHbk9PTe3XQH0YkHV09Ajnbg3UhwGduQ2q5DYN
1IcBKyaw36skDdSHAbOOdDl00raB+jAgpn78r6H19SbL89cmA0JGz33q/KGe
+jBg/93fOt16Vk99GHDb09R/09166sOASrbWYWp+PfVhgM/ErrGDj9VTHwbk
vD69tMfeeurDgJnxXIXH5nrqw4C34+d17byynvow4MHbhAs+cfXUhwHbFuw7
Pnp6PeNxzYA7E5ZZJ4TXUx8G3L92OvNIcD31YUD5ypaV7/vXUx8GOKtVe7r0
qKc+DFi/+N3bZW71jEeZAb8IhwWUyeupDwM2rfS7ONip3sT8fsqAc5ceeOe1
1Jks0/1ivp/nZSe8vtaZmN+vGyD9Xy/l1dd11IcBiUVRv40praM+jJgZ27i8
7nod9WHEmaJ+s3efraM+jNhUmqkedaSO+jB/bb0zQZJRx3iIjOD5HV/5amMd
9WHEX7cWdj6RVEd9GLHbdlvUptg66sOI2SsKOiZMr6M+jGh+dTFyzvg66sMI
bB0vmT2ijvowIp7/R4c4vzrqw4jiKZLUtb3rqA8jKsdrRh7sWEd9GPHP2KyQ
Ek0d9WHEFfebKdaCOurDCHv+8YZ+1nXUhxGxKdtXrqyrpT7MX0+76fn4Qy31
YcTyZRvedHtZS+eHES1XRu3cUlxrYp6vjOjCXz3CtqCW8ZhmRGT7g98Xn6ll
PGYZ4bfJdyHncC31YYRmw9en63bVUh9GZDSPcWq7qZb6MGK9VzfO1RW11IcR
u9ogd8bCWurDiGVfgsWGmbUm5vdBRsj0AzQvJ9VSH0ZciGZfyfy1lvow4t6R
ZU0xQ2qpDyNMN+7mDfOppT6MCNn6vblr11rqw4jtr4W52na11If5/vYcXSJW
1FIfRiwqrx8pdqmlPoyIee7dScOppT6MUB6PCelcU2Ni3p+NSJ7Xmh/wvob6
MCJxm9/vs17UUB/m9cO+4JNeXEN9GPH31WrvBwU11IcRQabfxonP1lAfZs/K
f9aGZ9fQ+WFEre/WWzl7ahiPSiMWvDrh6LSlhvowmt937/jOWlNDfRhRPfNg
9PMlNXR+GJGX77bol5ga6sOIiIo2UcVTa6iPNnjru77j2PAa0/8BhYuuBQ==

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 10.}, {-8, 8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6811903119554663`*^9, {3.681190634855093*^9, 3.6811906860917673`*^9}, 
   3.681191037683758*^9, {3.6811910680713377`*^9, 3.681191117307337*^9}, 
   3.6811911680701113`*^9, 3.681192717311887*^9, 3.681193727811401*^9, {
   3.681205354990773*^9, 3.6812053925735273`*^9}, {3.681549560504405*^9, 
   3.681549567254446*^9}, 3.681552318862555*^9, 3.6815536641149473`*^9, 
   3.681627994158841*^9, 3.681631153481192*^9, 3.681633499158752*^9, {
   3.681634478511766*^9, 3.681634486488409*^9}, {3.681634749345681*^9, 
   3.681634767225904*^9}, 3.681634899912034*^9, 3.681635648249351*^9, 
   3.6816356915446978`*^9, 3.681635919890347*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SOLUTIONS", "Section",
 CellChangeTimes->{{3.680493744409877*^9, 3.680493748116157*^9}, {
  3.6805015455889893`*^9, 3.680501550293067*^9}, {3.6808653695727463`*^9, 
  3.680865370845078*^9}, {3.681549695292163*^9, 3.6815497025801353`*^9}}],

Cell[BoxData[
 RowBox[{"(*", "DEFINITIONS", "*)"}]], "Input",
 CellChangeTimes->{{3.681550586937327*^9, 3.681550590874784*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"k0", "[", 
    RowBox[{"En_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    FractionBox[
     RowBox[{"2", "\[Mu]", " ", "En"}], 
     SuperscriptBox["\[HBar]c", "2"]], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k2", "[", 
    RowBox[{"En_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    FractionBox[
     RowBox[{"2", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"En", "-", "E2"}], ")"}]}], 
     SuperscriptBox["\[HBar]c", "2"]], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"wave0", "[", 
    RowBox[{"En_", ",", "r_"}], "]"}], ":=", 
   RowBox[{"SphericalHankelH1", "[", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"k0", "[", "En", "]"}], " ", "r"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wave2", "[", 
    RowBox[{"En_", ",", "r_"}], "]"}], ":=", 
   RowBox[{"SphericalHankelH1", "[", 
    RowBox[{"2", ",", 
     RowBox[{
      RowBox[{"k2", "[", "En", "]"}], " ", "r"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B0", "[", "En_", "]"}], ":=", 
   RowBox[{
    FractionBox["rmax", 
     RowBox[{"wave0", "[", 
      RowBox[{"En", ",", "rmax"}], "]"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"wave0", "[", 
         RowBox[{"En", ",", "r"}], "]"}], ",", "r"}], "]"}], "/.", 
      RowBox[{"r", "\[Rule]", "rmax"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B2", "[", "En_", "]"}], ":=", 
    RowBox[{
     FractionBox["rmax", 
      RowBox[{"wave2", "[", 
       RowBox[{"En", ",", "rmax"}], "]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"wave2", "[", 
          RowBox[{"En", ",", "r"}], "]"}], ",", "r"}], "]"}], "/.", 
       RowBox[{"r", "\[Rule]", "rmax"}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "HAMILTONIAN", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Hnew", "[", "En_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"H", "=", "H0"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"[", 
          RowBox[{"len", ",", "len"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"V00mat", "[", 
          RowBox[{"[", 
           RowBox[{"len", ",", "len"}], "]"}], "]"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"-", 
            SuperscriptBox["\[HBar]c", "2"]}], 
           RowBox[{"2", " ", "\[Mu]"}]], " ", 
          FractionBox["1", 
           SuperscriptBox["dr", "2"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dr", " ", 
             FractionBox[
              RowBox[{"B0", "[", "En", "]"}], "rmax"]}], "-", "1"}], 
           ")"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", " ", "len"}], ",", 
           RowBox[{"2", " ", "len"}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"V22mat", "[", 
          RowBox[{"[", 
           RowBox[{"len", ",", "len"}], "]"}], "]"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"-", 
            SuperscriptBox["\[HBar]c", "2"]}], 
           RowBox[{"2", " ", "\[Mu]"}]], " ", 
          FractionBox["1", 
           SuperscriptBox["dr", "2"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dr", " ", 
             FractionBox[
              RowBox[{"B2", "[", "En", "]"}], "rmax"]}], "-", "1"}], 
           ")"}]}]}]}], ";", "H"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"RETURNS", " ", "EIGEMVALUE"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "5"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evals", "=", 
   RowBox[{"List", "[", "]"}]}], ";", 
  RowBox[{"evecs", "=", 
   RowBox[{"List", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eigenv", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"En_", "?", "NumericQ"}], ",", "i_"}], "}"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eval", ",", "evec"}], "}"}], "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Eigensystem", "[", 
           RowBox[{"Hnew", "[", "En", "]"}], "]"}], "]"}], ",", "First"}], 
        "]"}]}]}], ";", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"eval", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "i"}], "}"}]}], ")"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.681550625529065*^9, {3.681551277494691*^9, 3.681551281390258*^9}, {
   3.6815513629352837`*^9, 3.681551381033184*^9}, {3.68155142152118*^9, 
   3.681551431057551*^9}, {3.681551497714632*^9, 3.6815516032118073`*^9}, {
   3.681551874153425*^9, 3.6815518748157673`*^9}, {3.681551974865007*^9, 
   3.6815519753288193`*^9}, {3.681552157388617*^9, 3.681552159883445*^9}, {
   3.681552342457534*^9, 3.681552353055757*^9}, 3.6815524455774527`*^9, {
   3.6815537710458384`*^9, 3.681553772023654*^9}, {3.6815544640557756`*^9, 
   3.6815544643999853`*^9}, {3.681554873253602*^9, 3.681554873454049*^9}, {
   3.681555406111061*^9, 3.681555406493878*^9}, {3.681631134084893*^9, 
   3.6816311408615417`*^9}, {3.68163451992476*^9, 3.681634569204987*^9}, 
   3.681635936945003*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"RETURNS", " ", "EIGENSYSTEM"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"En", "=", 
    RowBox[{
     RowBox[{"x", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Im", "[", 
          RowBox[{"eigenvres1", "[", 
           RowBox[{"x", ",", "n", ",", "l"}], "]"}], "]"}], "\[Equal]", 
         RowBox[{"Im", "[", "x", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"0.1", "+", 
           RowBox[{"0.", "I"}]}], ",", "0.", ",", "V0"}], "}"}]}], "]"}]}], "//",
      "Timing"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"En", "=", 
     RowBox[{
      RowBox[{"NestWhileList", "[", 
       RowBox[{"eigenv", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "n"}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", 
            RowBox[{"Abs", "[", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ">", 
          "\[Epsilon]"}], "&"}], ",", "2", ",", "100"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"evals", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"evals", ",", "En"}], "]"}]}], ";", 
    RowBox[{"evecs", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"evecs", ",", 
       RowBox[{"evec", "[", 
        RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.681634595114966*^9, 3.681634612818973*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenv", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.681635706474167*^9, 3.6816357069554453`*^9}, {
  3.6816359319116507`*^9, 3.681635956552288*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.059471314297634366`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.681635961218308*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenv", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.68163595876165*^9, 3.681635966056192*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.20991816105994424`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.681635973126392*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenv", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.17404930706021726`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.13816669518256885`", " ", "\[ImaginaryI]"}]}], ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.681635995447217*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenv", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.10135664033302978`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.15414853126073924`", " ", "\[ImaginaryI]"}]}], ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.681636020003146*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenv", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.07455129319965588`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.1400425991713603`", " ", "\[ImaginaryI]"}]}], ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.681636040169703*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenv", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.06870379895092774`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.12751191037374773`", " ", "\[ImaginaryI]"}]}], ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.681636060514041*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenv", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.0701600622461519`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.12098070586111959`", " ", "\[ImaginaryI]"}]}], ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.681636081088777*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenv", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.07274350596816925`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.11890937395846013`", " ", "\[ImaginaryI]"}]}], ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.681636101348505*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenv", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.07438626613923749`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.118933519105871`", " ", "\[ImaginaryI]"}]}], ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.681636121580888*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenv", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.075001144668944`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.1194639683906702`", " ", "\[ImaginaryI]"}]}], ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.681636141866742*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenv", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.07506510146617716`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.11985878662623484`", " ", "\[ImaginaryI]"}]}], ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6816361625982437`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenv", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.07496448034887608`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.12002774524969044`", " ", "\[ImaginaryI]"}]}], ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.681636182846706*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenv", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.07487326376513`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.12005967611008594`", " ", "\[ImaginaryI]"}]}], ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.681636203297213*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenv", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.07482880162141022`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.12004295314573435`", " ", "\[ImaginaryI]"}]}], ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.681636223561887*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenv", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.07481730854934496`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.12002262716482386`", " ", "\[ImaginaryI]"}]}], ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.681636244227457*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MATCHES", " ", "AMPLITUDE"}], " ", "&"}], " ", "PLOTS"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"const0", "[", "i_", "]"}], ":=", 
     FractionBox[
      RowBox[{"evec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"-", "len"}], "-", "1"}]}], "]"}], "]"}], 
      RowBox[{"wave0", "[", 
       RowBox[{
        RowBox[{"eval", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "rmax", ",", "\[Delta]"}], 
       "]"}]]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"const2", "[", "i_", "]"}], ":=", 
     FractionBox[
      RowBox[{"evec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], 
      RowBox[{"wave2", "[", 
       RowBox[{
        RowBox[{"eval", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "rmax"}], "]"}]]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rmaxx", "=", "20."}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.680494020724709*^9, 3.6804940458850527`*^9}, {
   3.680494519499185*^9, 3.6804945227627296`*^9}, {3.680494623300119*^9, 
   3.6804946305560083`*^9}, {3.680494832958509*^9, 3.680494916479332*^9}, {
   3.6804950348811398`*^9, 3.680495045032901*^9}, {3.680498031669083*^9, 
   3.6804980518450747`*^9}, {3.68049808478157*^9, 3.680498089709523*^9}, {
   3.680931548900985*^9, 3.6809315577498627`*^9}, {3.680931605343502*^9, 
   3.6809316078549843`*^9}, {3.68093169224754*^9, 3.680931856926944*^9}, 
   3.6809330830895844`*^9, {3.6809449924592257`*^9, 3.680945012490768*^9}, {
   3.680945096211441*^9, 3.6809451084846907`*^9}, {3.680945178862546*^9, 
   3.6809451950940866`*^9}, {3.680945246871758*^9, 3.680945302800239*^9}, {
   3.680945385128928*^9, 3.680945388921481*^9}, {3.680945454340214*^9, 
   3.6809454567711143`*^9}, {3.680945961042178*^9, 3.680945980299838*^9}, {
   3.681020734564837*^9, 3.681020736116143*^9}, {3.681020808838698*^9, 
   3.681020810494034*^9}, {3.681020846981532*^9, 3.681020858085*^9}, {
   3.68102089296712*^9, 3.681020893097727*^9}, {3.681102316257114*^9, 
   3.6811023476663446`*^9}, {3.68110244965441*^9, 3.6811025063086557`*^9}, {
   3.68110467062079*^9, 3.6811046828832827`*^9}, {3.681105421046069*^9, 
   3.681105508406723*^9}, {3.681105551407761*^9, 3.6811056008753443`*^9}, {
   3.681105838858261*^9, 3.681105861546764*^9}, {3.681105920109398*^9, 
   3.681105945540165*^9}, {3.681105981620817*^9, 3.681106017006546*^9}, {
   3.681106070078547*^9, 3.6811061339991207`*^9}, {3.681106270337122*^9, 
   3.681106282408279*^9}, {3.681106549036982*^9, 3.681106559756618*^9}, {
   3.6811066125907383`*^9, 3.68110666014261*^9}, {3.681106819369233*^9, 
   3.681106823800709*^9}, {3.681107245512433*^9, 3.6811072632145653`*^9}, {
   3.68110824598249*^9, 3.6811083107836847`*^9}, {3.6811083931610727`*^9, 
   3.6811084385136757`*^9}, {3.681108643019228*^9, 3.6811086576942177`*^9}, {
   3.681113833085256*^9, 3.681113923358642*^9}, {3.681114158466652*^9, 
   3.681114162545319*^9}, {3.681205411497468*^9, 3.68120541188029*^9}, {
   3.681551647213601*^9, 3.6815517604299717`*^9}, {3.681551817295065*^9, 
   3.6815518176216593`*^9}, 3.681552126619034*^9, {3.681556336771564*^9, 
   3.681556337195362*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"rlist", ",", 
        RowBox[{"Part", "[", 
         RowBox[{
          RowBox[{"evecs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"1", ";;", "len"}]}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"rlist", ",", 
        RowBox[{"Part", "[", 
         RowBox[{
          RowBox[{"evecs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"len", "+", "1"}], ";;", 
           RowBox[{"2", " ", "len"}]}]}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"const0", "[", "i", "]"}], " ", 
         RowBox[{"wave0", "[", 
          RowBox[{
           RowBox[{"evals", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}]}], "]"}]}]}], 
       "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"const2", "[", "i", "]"}], " ", 
         RowBox[{"wave2", "[", 
          RowBox[{
           RowBox[{"evals", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}]}], "]"}]}]}], 
       "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input"]
}, Open  ]]
},
WindowSize->{1680, 991},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Linux x86 (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 360, 9, 73, "Input"],
Cell[CellGroupData[{
Cell[943, 33, 101, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[1069, 38, 6329, 177, 686, "Input"],
Cell[7401, 217, 25019, 421, 234, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32469, 644, 244, 3, 67, "Section"],
Cell[32716, 649, 127, 2, 32, "Input"],
Cell[32846, 653, 5644, 170, 562, "Input"],
Cell[38493, 825, 1773, 52, 121, "Input"],
Cell[CellGroupData[{
Cell[40291, 881, 225, 5, 32, "Input"],
Cell[40519, 888, 218, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40774, 899, 124, 2, 32, "Input"],
Cell[40901, 903, 217, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41155, 913, 59, 1, 32, "Input"],
Cell[41217, 916, 237, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41491, 927, 59, 1, 32, "Input"],
Cell[41553, 930, 237, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41827, 941, 59, 1, 32, "Input"],
Cell[41889, 944, 236, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42162, 955, 59, 1, 32, "Input"],
Cell[42224, 958, 237, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42498, 969, 59, 1, 32, "Input"],
Cell[42560, 972, 236, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42833, 983, 59, 1, 32, "Input"],
Cell[42895, 986, 237, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43169, 997, 59, 1, 32, "Input"],
Cell[43231, 1000, 235, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43503, 1011, 59, 1, 32, "Input"],
Cell[43565, 1014, 234, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43836, 1025, 59, 1, 32, "Input"],
Cell[43898, 1028, 239, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44174, 1039, 59, 1, 32, "Input"],
Cell[44236, 1042, 237, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44510, 1053, 59, 1, 32, "Input"],
Cell[44572, 1056, 234, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44843, 1067, 59, 1, 32, "Input"],
Cell[44905, 1070, 237, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45179, 1081, 59, 1, 32, "Input"],
Cell[45241, 1084, 237, 6, 32, "Output"]
}, Open  ]],
Cell[45493, 1093, 3314, 67, 177, "Input"],
Cell[48810, 1162, 1871, 53, 99, "Input"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
