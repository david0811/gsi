(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[     22736,        505]
NotebookOptionsPosition[     22009,        474]
NotebookOutlinePosition[     22371,        490]
CellTagsIndexPosition[     22328,        487]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{"Infinite", " ", "Potential", " ", "Well"}], 
  "Subsubsection"]], "Input",
 CellChangeTimes->{{3.678686784483429*^9, 3.6786867909719143`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"min", "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{"max", "=", "1"}], ";", 
  RowBox[{"step", "=", "500"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"d", "=", 
   FractionBox[
    RowBox[{"max", "-", "min"}], "step"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"min", ",", "max", ",", "d"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"V", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"min", ",", "max"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6786146942768793`*^9, 3.678614702768167*^9}, {
  3.678616363081992*^9, 3.67861637965816*^9}, {3.678683896080324*^9, 
  3.678683915736652*^9}, {3.678684259750231*^9, 3.6786842641575127`*^9}, {
  3.6786842984544697`*^9, 3.678684346046599*^9}, {3.678684631339473*^9, 
  3.678684633306905*^9}, {3.6786850974103813`*^9, 3.6786851009294662`*^9}, {
  3.6786851722435827`*^9, 3.678685179981084*^9}, {3.678685261493104*^9, 
  3.6786852615801487`*^9}, {3.678685295085607*^9, 3.6786852966769657`*^9}, {
  3.678685684820086*^9, 3.6786856904909353`*^9}, {3.6786858955105953`*^9, 
  3.678685924942692*^9}, {3.678686688475543*^9, 3.678686697666915*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd2X2s12UZx/EjY4w55pxjrho5VEKa+VSZYhlWWqaZZs05x5xj1hhjSA3N
FAl7AjWSygdKy6OiojtjSHQiOuERD4aKqHiU5wcfwccwM03F+buvz9Xn3a7f
P/ra4ff9fe/vfV/XdX+v++BJF5393SFdXV1v7dPV1f6rz577/vd/PaPOu/Dz
O/5pnzt+2ZpLVuKh5+x3xNI/4CU/mPzr12biideuemvcRDw8Lojb1W75GL7g
hccP2fLf1+0RQw6fc+AmvPygn7/yreW4c3NnzrsR7x83iPtm/PYjQ8/B7e4m
HItHLv7aM5eNxP0P33pK75uv2VN3vXf3G+vxR2PAePXoGLH9/RP33XD7dPzx
9vjOxA+14R6FL263tx8+OC73qv3o2vbBP3pp7DHDe/Anhl15/VeuwU90nt6s
KfiKCceev+Lr+JMxIfipS9sFcbva1F2v2G1y73oQb1r39refuwO32ehMiX1M
TDDeNqbdIL7qS22Gcbu7EUNwZzI6M/KyPe/GaQf8tB/H8rsFv9iWyyz8mza9
5+Mvtuk4Eb/cHt8ofEMb7nsv2V+OBYhfb5dbgX//u/bBX+19c+/gpfhf68+Y
tP+5+I+dp3f6cfi0WND4P+PahOy2bzulXRB/c1Jb0fjdWVM6SxrfedNAZwXi
syNA8AeDbYLxPW+0G8QK3112hNs6HOGxGMdynoeHacHYsVxOxzG9h+OYjn2x
Ht+Ldgx3DY7buwvH5ebg78UHdxZLJ4Jxi7ZtY/CUSAj4wFjQL9gtW127Ck+L
C+J2tWFX4s7ktiVtR/qbgCNdHYQfaell7/P2D+MG8aEtfPvwYy3cbsKXR8LC
h0XA4Sfb8huPfxwDxjG9bz9nx3RswPH4enEM93octzcDz9EDtD8TH9yy87QD
8C8joT5rHx8JAT9/R1vQeH5MCP5CXBDvbun5DHxdS6dH4JMiweBXI109Yy+I
CcYnt3RwN97TwvcqfHMLt8n4VCUs+99tOY/F3bFg8Ddiuey032nTO4AXtum4
HZ8VCRC/34Y7CS+KBYi/0y43GuuDVb93lHqNVZ+x6vH2Un+x6i1WfcWqp9vs
mJ6lOIY7Hcd24Cis8rrVjnLVgyP9T8GRTsfhn0R62mJvjvqFPx0DxldHfcLP
xvRutk+I+oNVb7DqC1Y92VTqB1a9wKoPWPVgY8n/WPkeK79j5fMNJX9j5Wus
/IyVj58u+Rcr32LlV6x8+lTJn1j5Esdy2Ttox/T24ZiOy3A8vvH4U5GQnrR/
FgsQb438hT8b+QorP60v+Qgr/2DlG6z88kTJJ1j5AytfYOWHx0s+wIp/rHjH
iu/HSjxjxe+6Eq9Y8floiUes+Ftb4g1vjPh6xJ4b8YSPj/h5mPwd8YIXRHw8
RH6NeMDvxPpfQ/6L9Y4nxvr+hz0i1jPui/X7oD011iseFetztb021uOAPTPW
H9Z6e6CsL6z1tKqsH6z1cn9ZH1jrob/Mf3+Z7/vK/K4s8/n3Mn99Zb7+VuZn
RZmPv5bnv5zfj+f9F34/nm8vvx/P88/8fjy/Zfx+PK8/8fvxfJby+/E87uX3
Y/xLqC8x3sX27BhfD/U/xnMP9TA2RIv4ftzvnXw/7m8h34/7uY3vR4LtLr93
c7n+gnK968r355d/P7f8fXbx9FLP/++jv08o38e6fvn7fDvvr/z7Bfxd4yvf
77bz+ZTrLbTz+ZbrL+L7mp/yez18X/Nbfn+J3a31Ue5nqb1T66vc3zJ7tNZn
ud9e+wKt73L/y/l9xUcZzwp+X/FVxtfH7ys+y3hX8vuKb1vrv98+VfnBVrzc
b+9WfrEVX6vsucpPtuLxAXuc8put+B2w1yg/2or31fZk5Vdb+QEPV362lU9w
5nfGr/zP+FUfGL/qB+NXfWH8qj+MX/WJ8at+MX7VN8av+sf4VR8Zv+on41d9
Zfyqv4xf9Znxq37bWd/trP927g/s3D/Yub+wc/9h5/7Ezv2LnfsbO/c/du6P
7Nw/2bm/snP/Zef+zM79mz2o/Z2t+ovHaH9oq17jGdpf2qrveED7U1v7gaft
kdrf2to/4Au1P7a139hgL9P+2tb+BA/V/rys9432Wdrfl/WPu/V+UOJhk71H
7xclPvBJej8p8bLZnq/3mxI/eKfej0o8bbGP1vtViS88W+9nJd622vl+V+IP
5/thicdtdr5flvjE+X5a4nW7ne+3JX5xvh+XeN5h5/t1iW+cT7HEO873+xL/
OPsDJR/g7C+U/ICzP1HyBc7+RskfOPsjJZ/g7K+U/IKzP1PyDc7+Tsk/OPtD
JR/h7C+V/IR3qj9V8hWeq/5WyV/4aPXHSj7DG9VfK/kNz1J/ztb7LB6r/p6t
91+8Tv1BW+/LWOGA9X6Nsz9pZ//Szv6mnf1PO/ujdvZP7eyv2tl/tbM/a2f/
1s7+rp39Xzv7w3b2j+3sL9vZf7azP21n/9rO/rad/W87++N29s/t7K/b2X+3
sz9vZ//ezv6+nf1/O88H7Dw/sPN8wc7zBzvPJ+w8v7DzfMPO8w87z0fsPD+x
83zFzvMXO89n7Dy/sfN8x1b/Df9K50O2+nX4czpfstXfw9t1PmWrH4h/ofMt
W/1DfKTOx2z1G/GgztdKfcMzdT5X6h0eo/O9Uv/wWp0PlnqIZ+h8sdRHPErn
k6Ve4gFdsNRPnOejpZ7iPF8t9RXn+WyptzjPd0v9xXk+XOoxzvPlUp9xnk+X
eo3zfLvUb5zn46We77E/BOwoalM=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-1., 1.}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6786151046396*^9, 3.678615128066221*^9}, 
   3.678616332379602*^9, 3.6786164014697027`*^9, 3.678616984353117*^9, {
   3.678683709029666*^9, 3.678683722892446*^9}, {3.678683910341303*^9, 
   3.6786839169425297`*^9}, 3.6786842651298523`*^9, {3.678684302040604*^9, 
   3.678684350161867*^9}, 3.678684634020692*^9, 3.678685101897797*^9, {
   3.678685174658226*^9, 3.6786851808105583`*^9}, 3.6786852621898623`*^9, 
   3.678685297401219*^9, 3.6786856928217993`*^9, {3.6786859045674953`*^9, 
   3.67868592539534*^9}, 3.678686690132173*^9, 3.678686749001972*^9, 
   3.6786889065502462`*^9, 3.6786893295301228`*^9, 3.678693186164338*^9, 
   3.678693307205164*^9, 3.6786951165154943`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"En", "=", 
   RowBox[{"4", "*", "1.24"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{"V", "-", "En"}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.678616466750724*^9, 3.678616495491948*^9}, {
  3.6786831430534163`*^9, 3.678683143229347*^9}, {3.678683194046431*^9, 
  3.6786832176063337`*^9}, {3.6786832978799543`*^9, 3.678683306783752*^9}, {
  3.678683337600561*^9, 3.678683348688443*^9}, {3.678683467642438*^9, 
  3.6786834709380913`*^9}, {3.678683757182954*^9, 3.67868375912614*^9}, {
  3.6786839244251623`*^9, 3.678683960537249*^9}, {3.678684001986133*^9, 
  3.678684087610792*^9}, {3.678684278934169*^9, 3.67868433715825*^9}, {
  3.678684648083509*^9, 3.678684674986862*^9}, {3.6786864985766497`*^9, 
  3.678686547488315*^9}, {3.678686617297947*^9, 3.678686641065769*^9}, {
  3.678686762612631*^9, 3.678686763203809*^9}, {3.678688865964342*^9, 
  3.678688919764531*^9}, {3.678689340059615*^9, 3.67868934112335*^9}, {
  3.678690417516177*^9, 3.678690420435964*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "step"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "step"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "=", "1"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"boundary", " ", "conditions"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"[", "2", "]"}], "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d", "2"], " ", 
        RowBox[{"f", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "12"]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"[", "1", "]"}], "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d", "2"], " ", 
        RowBox[{"f", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "12"]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"[", "step", "]"}], "]"}], "=", 
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"[", "step", "]"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["d", "2"], " ", 
          RowBox[{"f", "[", 
           RowBox[{"[", "step", "]"}], "]"}]}], "12"]}], ")"}]}]}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.678616518321178*^9, 3.678616607149979*^9}, {
   3.678617509787722*^9, 3.6786175103795347`*^9}, {3.678682422187222*^9, 
   3.678682456835513*^9}, 3.678682559581512*^9, {3.678683155365037*^9, 
   3.678683172531664*^9}, {3.678683414010478*^9, 3.678683416609338*^9}, {
   3.6786859419634132`*^9, 3.67868594424693*^9}, {3.678686323829844*^9, 
   3.678686326612713*^9}, {3.678686704277*^9, 3.678686709050984*^9}, {
   3.678686753028493*^9, 3.678686755995716*^9}, {3.678687272654913*^9, 
   3.678687276070261*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"[", 
       RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"g", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "-", 
      RowBox[{"g", "[", 
       RowBox[{"[", 
        RowBox[{"i", "-", "1"}], "]"}], "]"}], "+", 
      RowBox[{
       SuperscriptBox["d", "2"], " ", 
       RowBox[{"f", " ", "[", 
        RowBox[{"[", "i", "]"}], "]"}], 
       RowBox[{"u", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}]}]}], ";", 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"[", 
       RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
     FractionBox[
      RowBox[{"g", "[", 
       RowBox[{"[", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["d", "2"], " ", 
         RowBox[{"f", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "12"]}]]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "2", ",", 
     RowBox[{"step", "-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"g", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"min", ",", "max"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.678617124588895*^9, 3.678617150237863*^9}, {
   3.678617716342824*^9, 3.678617716574532*^9}, {3.6786187493346148`*^9, 
   3.678618751966629*^9}, {3.678618960129904*^9, 3.678619022786751*^9}, {
   3.678619053787405*^9, 3.678619063003419*^9}, {3.6786190991000357`*^9, 
   3.6786191151640997`*^9}, {3.678619235918398*^9, 3.678619240350347*^9}, {
   3.678619286639468*^9, 3.678619289350926*^9}, {3.678619430609083*^9, 
   3.678619459705339*^9}, {3.6786195725797243`*^9, 3.6786195860436153`*^9}, {
   3.678619653685053*^9, 3.678619654972802*^9}, {3.678619838695816*^9, 
   3.678619848935487*^9}, {3.678619979745821*^9, 3.678619981625348*^9}, {
   3.6786829866835012`*^9, 3.678683056476622*^9}, 3.678683314942306*^9, {
   3.678683435202478*^9, 3.678683443841717*^9}, {3.678683483459157*^9, 
   3.6786834835863028`*^9}, {3.6786839365853853`*^9, 
   3.6786839396286087`*^9}, {3.678684171253171*^9, 3.678684186404684*^9}, {
   3.678686441831718*^9, 3.6786864443189487`*^9}, {3.678686653354891*^9, 
   3.6786866743228617`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-1., 0.9999999999999998}, {-79.37821556620958, 
   79.37759234834623}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.678686674819788*^9, {3.6786867601077557`*^9, 3.6786867673477697`*^9}, {
   3.678688870830954*^9, 3.6786889248867292`*^9}, {3.67868933572491*^9, 
   3.6786893459179077`*^9}, 3.678690424827944*^9, 3.678693199939734*^9, 
   3.678693317570842*^9, 3.6786951246060133`*^9}]
}, Open  ]]
},
WindowSize->{1260, 903},
WindowMargins->{{26, Automatic}, {Automatic, 26}},
CellContext->Notebook,
FrontEndVersion->"10.3 for Linux x86 (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 178, 4, 41, "Input"],
Cell[CellGroupData[{
Cell[603, 21, 1463, 35, 160, "Input"],
Cell[2069, 58, 4293, 80, 269, "Output"]
}, Open  ]],
Cell[6377, 141, 1063, 20, 55, "Input"],
Cell[7443, 163, 2231, 69, 246, "Input"],
Cell[CellGroupData[{
Cell[9699, 236, 2408, 59, 112, "Input"],
Cell[12110, 297, 9883, 174, 236, "Output"]
}, Open  ]]
}
]
*)

