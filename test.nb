(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    205409,       4062]
NotebookOptionsPosition[    203002,       3981]
NotebookOutlinePosition[    203339,       3996]
CellTagsIndexPosition[    203296,       3993]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["DEFINE PARAMETERS", "Section",
 CellChangeTimes->{{3.680493170118178*^9, 3.680493175475255*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["m", "N"], "=", "940"}], ";", 
  RowBox[{"\[HBar]c", "=", "197.327"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"V0", "=", "77"}], ";", 
  RowBox[{"R", "=", "2.55"}], ";", 
  RowBox[{"a", "=", "0.5"}], ";", 
  RowBox[{"\[Mu]", "=", 
   RowBox[{
    FractionBox["8", "9"], " ", 
    SubscriptBox["m", "N"]}]}], ";", 
  RowBox[{"l", "=", "2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rmax", "=", "10."}], ";", 
  RowBox[{"dr", "=", "0.01"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rlist", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"dr", ",", "rmax", ",", "dr"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"len", "=", 
   RowBox[{"Length", "[", "rlist", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vwoods", "[", "r_", "]"}], ":=", 
   FractionBox[
    RowBox[{"-", "V0"}], 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"r", "-", "R"}], "a"], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vcent", "[", "r_", "]"}], ":=", 
   FractionBox[
    RowBox[{"l", 
     RowBox[{"(", 
      RowBox[{"l", "+", "1"}], ")"}], 
     SuperscriptBox["\[HBar]c", "2"]}], 
    RowBox[{"2", "\[Mu]", " ", 
     SuperscriptBox["r", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V", "[", "r_", "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "V0"}], 
     RowBox[{"1", "+", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"r", "-", "R"}], "a"], "]"}]}]], "+", 
    FractionBox[
     RowBox[{"l", 
      RowBox[{"(", 
       RowBox[{"l", "+", "1"}], ")"}], 
      SuperscriptBox["\[HBar]c", "2"]}], 
     RowBox[{"2", "\[Mu]", " ", 
      SuperscriptBox["r", "2"]}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Vmat", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"V", "[", "rlist", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"V", "[", "rlist", "]"}], ",", 
     RowBox[{"Vwoods", "[", "rlist", "]"}], ",", 
     RowBox[{"Vcent", "[", "rlist", "]"}]}], "}"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"dr", ",", "rmax"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "V0"}], ",", "V0"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.679286728059107*^9, 3.679286751534897*^9}, {
   3.679286798295683*^9, 3.679286809263542*^9}, {3.679287253510089*^9, 
   3.679287322870791*^9}, 3.679289429930531*^9, {3.679289796355823*^9, 
   3.679289797938469*^9}, {3.679291047782339*^9, 3.679291048165627*^9}, {
   3.679291140911874*^9, 3.679291141375329*^9}, {3.6793008229741793`*^9, 
   3.679300823061451*^9}, {3.679301164043964*^9, 3.679301164138753*^9}, 
   3.679301319405847*^9, {3.679301744500462*^9, 3.67930174459568*^9}, {
   3.6793070233533278`*^9, 3.679307024200685*^9}, {3.6793071120422153`*^9, 
   3.679307112865924*^9}, {3.6793080233437357`*^9, 3.679308046871706*^9}, {
   3.679634080442708*^9, 3.6796340987636414`*^9}, {3.679634333800329*^9, 
   3.6796343349092484`*^9}, {3.679639176058004*^9, 3.679639188049914*^9}, {
   3.6798067461243887`*^9, 3.679806768795967*^9}, {3.679812310223147*^9, 
   3.679812338079535*^9}, {3.679812393568287*^9, 3.679812544050201*^9}, {
   3.679812590867487*^9, 3.679812635755251*^9}, {3.679812801742092*^9, 
   3.6798128018611383`*^9}, {3.679812860319036*^9, 3.679812864150773*^9}, {
   3.679813569689842*^9, 3.679813609697278*^9}, {3.679813646034247*^9, 
   3.679813682770708*^9}, {3.679813881677866*^9, 3.679813885669187*^9}, {
   3.6798170925811043`*^9, 3.679817093860159*^9}, {3.6804316284900513`*^9, 
   3.6804316285694857`*^9}, {3.680432080312958*^9, 3.68043210436097*^9}, {
   3.6804337032893887`*^9, 3.6804337702899103`*^9}, {3.680433811827347*^9, 
   3.680433818354754*^9}, {3.680434634847043*^9, 3.6804346356949663`*^9}, 
   3.680436005691721*^9, {3.680496540601735*^9, 3.68049654159378*^9}, {
   3.6804968302692003`*^9, 3.680496845685198*^9}, 3.680497920371483*^9, {
   3.6804983694494753`*^9, 3.6804983705134*^9}, {3.680498425538352*^9, 
   3.680498425626013*^9}, {3.680499023874032*^9, 3.6804990254019003`*^9}, {
   3.68049906177068*^9, 3.680499092482966*^9}, {3.680499420823485*^9, 
   3.680499429903269*^9}, {3.680499462552456*^9, 3.6804994639356956`*^9}, {
   3.68050001154576*^9, 3.680500022199564*^9}, {3.6805011173512287`*^9, 
   3.6805011307594337`*^9}, {3.680847646270734*^9, 3.680847652165984*^9}, 
   3.6808617668489733`*^9, {3.680863291423409*^9, 3.680863361441423*^9}, {
   3.68086397809017*^9, 3.680863996260049*^9}, {3.680864041051107*^9, 
   3.680864054554192*^9}, {3.680864142364551*^9, 3.680864144603826*^9}, {
   3.6808641838764343`*^9, 3.680864185020081*^9}, 3.680865542881545*^9, {
   3.6809311624884663`*^9, 3.680931166896529*^9}, {3.680945890545837*^9, 
   3.6809458912821503`*^9}, {3.6810189073365173`*^9, 3.681018910504404*^9}, {
   3.681019065277363*^9, 3.6810191557802467`*^9}, {3.681019367800095*^9, 
   3.6810193721672564`*^9}, {3.681020216003806*^9, 3.681020232028884*^9}, {
   3.68102056924151*^9, 3.6810206002009163`*^9}, {3.681020638689953*^9, 
   3.681020642553878*^9}, {3.681021075634112*^9, 3.6810210913527613`*^9}, {
   3.681021374502584*^9, 3.681021377798003*^9}, {3.681022830653883*^9, 
   3.681022846253093*^9}, {3.681023028568976*^9, 3.681023036183455*^9}, {
   3.681118051600419*^9, 3.681118074119561*^9}, {3.6811182114738092`*^9, 
   3.681118211945282*^9}, {3.6811186222166567`*^9, 3.681118622632099*^9}, {
   3.681118897964986*^9, 3.681118898034419*^9}, {3.681119126280704*^9, 
   3.6811191268398542`*^9}, {3.681119535822843*^9, 3.681119536430429*^9}, {
   3.681121190297098*^9, 3.681121193448151*^9}, {3.681121407764516*^9, 
   3.681121408331815*^9}, {3.681122379066957*^9, 3.681122401170539*^9}, {
   3.681122510237236*^9, 3.68112251031593*^9}, {3.681122584286319*^9, 
   3.6811225877743673`*^9}, {3.681122713168441*^9, 3.6811227525366507`*^9}, {
   3.681122915483767*^9, 3.681122922899178*^9}, {3.681123326344563*^9, 
   3.681123355393351*^9}, {3.681123425978519*^9, 3.681123426346305*^9}, {
   3.681123516604484*^9, 3.681123516955555*^9}, {3.681123590005522*^9, 
   3.681123591700783*^9}, 3.681124933152556*^9, 3.681184424698593*^9, 
   3.681184874187615*^9, 3.6811870842004766`*^9, {3.68119390143714*^9, 
   3.6811939081653757`*^9}, 3.6811940247372303`*^9, {3.681194119619151*^9, 
   3.681194123624754*^9}, {3.681194527609417*^9, 3.6811945312631493`*^9}, {
   3.6811952508596354`*^9, 3.681195250954818*^9}, {3.6811997479540873`*^9, 
   3.681199750825407*^9}, {3.681199861339694*^9, 3.681199886274234*^9}, {
   3.681200224521823*^9, 3.681200248440384*^9}, {3.681200367587726*^9, 
   3.6812003717381573`*^9}, {3.681200422829672*^9, 3.681200422939187*^9}, {
   3.68120045650988*^9, 3.681200456595654*^9}, {3.681200522686616*^9, 
   3.681200522860385*^9}, {3.681200581775519*^9, 3.681200581982325*^9}, {
   3.6812006246082172`*^9, 3.681200625110422*^9}, {3.681200657416971*^9, 
   3.681200657703292*^9}, {3.6812007037289877`*^9, 3.681200704112228*^9}, {
   3.681200752875016*^9, 3.6812007529533663`*^9}, {3.681200783913932*^9, 
   3.681200783951515*^9}, {3.6812008187636843`*^9, 3.681200833426429*^9}, {
   3.681202798601713*^9, 3.68120279891203*^9}, {3.681204692661262*^9, 
   3.6812047210211973`*^9}, {3.68120475298239*^9, 3.681204831622251*^9}, {
   3.681204906625869*^9, 3.681204906727339*^9}, 3.6812049417380466`*^9, {
   3.681205094731576*^9, 3.681205095202448*^9}, {3.681206069115714*^9, 
   3.681206072297268*^9}, {3.6812129877964363`*^9, 3.681212994927252*^9}, {
   3.681213043389126*^9, 3.681213043506983*^9}, 3.681213128742594*^9, {
   3.681468605877235*^9, 3.68146861632972*^9}, {3.681469015642395*^9, 
   3.6814690157756777`*^9}, {3.6814690528908443`*^9, 3.681469055008506*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
TA==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw12nc8Vf8fB3B7j3txr8t13UWpyExKdd72HvfeliKrqJSRlJaGtPvZ7Z12
RDQ03KtdqCijaCgaVAgR4ne/7vv65/u4X5zz+Xye79f78zkn7Ig4/iI5GRmZ
b/IyMv/9d51egUfz2q3Em8YrF3eyBSLJ5xyC9jmT+ZMlEN00Tmvn3TxGjMRZ
J/mxpN/PIzY/eXX4IlMgOnTwv68LhINJQqqC+HPp6M8XELe9iunzjQUi8Qfx
/ykiNo7pERQwpL9fQliFT6MPGwlEavWn46er3SAOfnEK8xZ/Hr3cwVKiPT6K
nE0XiMYFp9/rNbtDxKleN2owlI6njDi2tTXOQPw5T/zb9adFxPr+wP7ZBgLR
j9H7lRMCi4FTGTSByM72v6/7xHGV7cGP9KX3f0B4/SbI/VSB6H6vmfgODwld
O618U/Fn9dHxPCasBWvpARSBiD96wycEa+FFj5V6AtHh0fE9JfbNDTPK1RWI
Pq3974LPiIse/alFOgLR+NHxVhKkwqjFT8kCUcJ/w4uvItJL7IubSNL1eU6k
83f4tWsLRDKjXy+J51larF4t6XxeEl4lmroDmgKRZ/N/N6gmXHhBWgMa0vlV
E7tT+H971AWijHv/TaCGGGxpvdWmJp3vK4JTu3NKo6pANDqd+ldEyKxp8x+p
SOf/mmCO36x4WVkgYv43HONa4mZDKGOPkkA0erl7tURCXvj2KEWBKDrqv686
wmlb+lhHBen61BPyzPhmVXmB6L+r6RXUE7w8xQM1stL1aiDMnlRY5MoIRH3/
Xa63gQg4fG0rb4SP9fKGuL50QoryMF80Y7QA3hKf9qsMXh/ii0an2/yWSFx2
sDF0kC/aNlpAjYTm9wMjsgN8XN8m4nD6RPej/XxRVeV/X03E5HE/9lr38XG9
3xGvtleUlPXyRZTRAb4nHrmYH3Dt4eP6vydSk6r17v/mi0YvF/yBOBrzQWlq
Fx89PhIzQ954Xejg43w+Em0Gx2+SfvHR5yPRXbLUIv4HX/RndH4fiQ7L55sf
t/HRq5mIZhf9j/pdOt9m4muQv3nIVz76NROq261tDrdK5/+JUK21W/3yM180
Opz0T4R2ekr1UDMf6+sTcbUshcr6yEffz0Tvsx+GU9/zRaN8aZ8JW/2HV72b
+Oj9mVh2yr2I95aP+WkhAs51fvNv4KN/C7F9+qYJznXS9WshyoZ+ek14zcd6
aCWaT8boqdXwRaPTjW8ljG+Ez3v/go95aSUmE8vbzlVJ1/cLcWthSFZUBV80
Wi5RX4hCC2um4VPpen8h1tlRQu494mPevxKJUeH6oQ+k6/+V+PtkH62znC+6
MlpPX4kqt5DxSUKpxzfCc+Nmyq87Uo9vhG/+75PzbvFFZ0YH+I24lyrad+uG
1OMbkcQ1uKV5TerxnbCmelQLrvKxv3wnhmZfObHnitTjO7Eq+kX7jctSjzbC
PdExqfaC1KONOL7lyHDLWalHG9Fxp8Dzy2mpRzvx4A6h++aE1KOd0P9jzrh7
lC9qGPVoJ3StIkyyDkk9fhBndBta5+yXevwgNF5mMbRypB4/iBN1J7aVZEg9
fhLeVwwavfdK6/sn0fbF6PXLnVKPn4StQfU4921Sj1/EHP3I7Itb+JjfX4S+
heLjfyl87J+/iIq0X2uIdVKPDuL91Xlhcav5opDRCXcQq2fttNibyMd8dxDK
P+9mH4iTenQSQZWEa2aMdD6dhNLkeR2roqU+nYTehWBXr0jp/DqJU96Hu5RD
pfnpJNIy4/KuzpPOt5N4rTNF1Wu21K+TWLRtQcUznnT+XYT1sH/uZD+pZxfR
IkglpXtK16OL2Pl8Y+tLF2neuogjcnW3h2ZI16eLqPw1ZqrOVD7uR11E0hxT
JfIk6Xr9JsIiDzzot5T6/yaG1i0weDpeWs+/iZWJ8ec2m/Kx3/4m1LpbSByW
tL5/E5Ptev5cMJT2r99Ej9LQXxqFj/2ym7g+dmtprDZfNFoutt1E3lfn1xdV
pfXfTewbx/lWKS+tn24i+Lpr1ut/PFz/bkK2XT2uvI+H+e4mUu8zDLO7eOjR
QxS6xkz0audhf+whyj0mu39u4aFHD+F2kTEY9p6HHj3EvxbDL+X1PPToIfw1
co4rVvPQo4eonhYqnPCMhx49xM5VlU2293mi0eka9xIx3wv+x7jDE40Oz6OX
yL0WFfOthIcevYSI3a6Sk89Dj14i3Lt2iHmWhx69xGOfmKbdx3iYP/Hvf780
rX4fTzQ6PL0/xMtr867KpvNEo5eb/oe4V6pRo7adh/X8h8g7NcnqdwoPPf4Q
M1ZOCr+xiocefwi3+1F/g2J56PGH8FpjsffNIh7Wex/RxlUqmhTCQ48+ovZl
7t/lM3lY/31E9+pbg5t9eLj/9BHavYd9E5ylHn2EZtbdzY5TpB59RDaHZP3R
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
MfQ=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
vQ==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{398., Automatic},
  Method->{},
  PlotRange->{{0, 10.}, {-77, 77}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6790525019311647`*^9, 3.679052566523169*^9, 3.679196433941718*^9, {
   3.679197277655931*^9, 3.679197294275297*^9}, 3.679203964377475*^9, {
   3.679211502047686*^9, 3.679211535666667*^9}, 3.679211579918518*^9, 
   3.6792116311039762`*^9, 3.67921462355632*^9, 3.6792214221859913`*^9, {
   3.679283487206999*^9, 3.6792835073757553`*^9}, 3.6792846970975523`*^9, 
   3.6792868319626226`*^9, 3.679287023698317*^9, 3.6792873635378437`*^9, 
   3.679287540947575*^9, 3.679287851949174*^9, 3.6792894968350487`*^9, 
   3.679289801327577*^9, 3.67928988339225*^9, {3.679290586852947*^9, 
   3.6792906106198874`*^9}, 3.679291052837352*^9, 3.679291144824926*^9, 
   3.679300829791338*^9, 3.679301167845834*^9, 3.679301321689472*^9, 
   3.679301749581284*^9, {3.679301879491131*^9, 3.6793019059515667`*^9}, 
   3.679307028443761*^9, 3.679307118178897*^9, 3.679307330661931*^9, {
   3.679308027838118*^9, 3.6793080494175997`*^9}, 3.6793094652195168`*^9, 
   3.679312432920207*^9, 3.6793125177770147`*^9, 3.679628067813961*^9, {
   3.679634085969236*^9, 3.679634100282443*^9}, 3.679634336318362*^9, 
   3.679636276044846*^9, 3.679636365377068*^9, 3.679637324382835*^9, {
   3.679639179099791*^9, 3.6796391886563473`*^9}, 3.6796392420372267`*^9, 
   3.679639953216379*^9, 3.679645643238593*^9, 3.679648137146015*^9, 
   3.679648558755623*^9, 3.679649582465561*^9, 3.679649892552554*^9, 
   3.6796565493739023`*^9, 3.679800549882975*^9, 3.679805684060231*^9, {
   3.6798067479753227`*^9, 3.679806769222741*^9}, 3.679806880696198*^9, {
   3.6798123317269783`*^9, 3.6798123492156363`*^9}, {3.6798124041706867`*^9, 
   3.679812544911186*^9}, {3.679812591553905*^9, 3.679812636438826*^9}, {
   3.679812718504196*^9, 3.679812747888829*^9}, 3.679812802677163*^9, {
   3.679812860932942*^9, 3.679812864802289*^9}, 3.679813302146058*^9, {
   3.679813578762792*^9, 3.679813610783359*^9}, {3.679813648675354*^9, 
   3.679813683370983*^9}, {3.679813882391739*^9, 3.679813886280746*^9}, 
   3.67981709447731*^9, 3.6798320710687733`*^9, 3.679832963110623*^9, 
   3.6798336242071457`*^9, 3.6798337139394493`*^9, 3.679913793782613*^9, 
   3.679914230663097*^9, 3.6804223738238363`*^9, 3.6804316293653173`*^9, 
   3.680432578056477*^9, 3.6804329736743717`*^9, {3.6804337046803427`*^9, 
   3.6804337706961393`*^9}, {3.6804338121262703`*^9, 3.680433818879698*^9}, {
   3.680434636246229*^9, 3.6804346448073597`*^9}, {3.6804360062572927`*^9, 
   3.680436009281104*^9}, 3.68049183832864*^9, 3.6804935964277267`*^9, 
   3.680495634338409*^9, 3.680496543248508*^9, 3.680496849248814*^9, 
   3.680496946316475*^9, 3.6804974082055817`*^9, 3.680497920656809*^9, 
   3.680498333093705*^9, 3.6804983709465513`*^9, 3.680498426505479*^9, 
   3.680499026190254*^9, {3.680499069370472*^9, 3.680499099776496*^9}, 
   3.680499156845821*^9, {3.680499422359086*^9, 3.680499430439415*^9}, {
   3.680499464559601*^9, 3.680499482363248*^9}, {3.68050111909801*^9, 
   3.6805011312791567`*^9}, 3.680603920087531*^9, 3.680605216541439*^9, 
   3.6806054134055977`*^9, 3.680837663336501*^9, 3.680839525409697*^9, {
   3.680847646797854*^9, 3.680847652520033*^9}, 3.68085749805475*^9, {
   3.680863293075162*^9, 3.680863322124782*^9}, 3.680863470135618*^9, {
   3.680863978499679*^9, 3.680863996610461*^9}, {3.680864049568758*^9, 
   3.6808640548874903`*^9}, 3.680864145354349*^9, 3.6808641857169113`*^9, {
   3.680865540464802*^9, 3.680865543270047*^9}, {3.680931163850451*^9, 
   3.6809311738490458`*^9}, {3.68093202912009*^9, 3.680932037224578*^9}, 
   3.680945780862892*^9, {3.6809458757424593`*^9, 3.6809458917320642`*^9}, 
   3.6809524797656612`*^9, 3.6810189112022*^9, {3.68101906641998*^9, 
   3.681019156453628*^9}, {3.681019368823763*^9, 3.681019372761499*^9}, {
   3.681020216703933*^9, 3.68102023704841*^9}, 3.681020570108326*^9, 
   3.681020600762158*^9, {3.681020640096961*^9, 3.681020643185573*^9}, {
   3.681021078877264*^9, 3.681021091950119*^9}, {3.681021375571617*^9, 
   3.681021378133896*^9}, {3.6810228314569187`*^9, 3.681022846630259*^9}, {
   3.681023012725668*^9, 3.6810230365452347`*^9}, 3.681115385982119*^9, {
   3.6811180527797203`*^9, 3.681118074782379*^9}, 3.681118215250764*^9, 
   3.681118623620036*^9, 3.681118898602096*^9, {3.681119128027726*^9, 
   3.681119147219598*^9}, 3.6811195376264753`*^9, 3.68112098213967*^9, 
   3.681121194129303*^9, 3.681121409026726*^9, {3.681122379784981*^9, 
   3.681122401764859*^9}, 3.681122510984456*^9, 3.681122588147521*^9, {
   3.6811227141386213`*^9, 3.681122753002244*^9}, 3.681122923294692*^9, 
   3.681122953988894*^9, {3.6811233274562674`*^9, 3.681123355803927*^9}, 
   3.681123426813408*^9, 3.68112352403433*^9, 3.681123592428177*^9, 
   3.681124933885583*^9, 3.681184425368575*^9, 3.6811848745627613`*^9, 
   3.681187085735511*^9, 3.681193961433589*^9, 3.681194025462286*^9, 
   3.681194124082649*^9, {3.681194528262102*^9, 3.681194531962069*^9}, 
   3.6811952516270723`*^9, 3.681199658664875*^9, 3.681199751171175*^9, 
   3.6811998620185423`*^9, 3.681199900934174*^9, {3.681200225358182*^9, 
   3.681200252826766*^9}, {3.68120036864116*^9, 3.68120037386456*^9}, 
   3.681200423527287*^9, 3.6812004569328833`*^9, 3.681200523187395*^9, 
   3.681200582738505*^9, 3.681200625811017*^9, 3.6812006579681673`*^9, 
   3.681200704429785*^9, 3.6812007532623653`*^9, 3.681200784600788*^9, {
   3.6812008193033237`*^9, 3.681200833910379*^9}, 3.6812027997977962`*^9, {
   3.681204698309122*^9, 3.681204721435245*^9}, {3.6812047565113163`*^9, 
   3.681204832302074*^9}, 3.681204907044599*^9, 3.6812049422556677`*^9, 
   3.6812050961969967`*^9, 3.6812060728184357`*^9, {3.68121298833259*^9, 
   3.681212995295992*^9}, 3.681213044125404*^9, 3.681213129005698*^9, 
   3.681468541630156*^9, {3.681468606585001*^9, 3.681468616577989*^9}, 
   3.681469016286271*^9, 3.681469055326206*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"INITIAL", " ", "HAMILTONIAN"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"one", "[", 
      RowBox[{"n_", ",", "d_"}], "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{
       RowBox[{"1", "+", 
        RowBox[{"0", 
         RowBox[{"Range", "[", 
          RowBox[{"n", "-", 
           RowBox[{"Abs", "[", "d", "]"}]}], "]"}]}]}], ",", "d"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0", ":=", 
     RowBox[{"Vmat", "+", 
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox["\[HBar]c", "2"]}], 
        RowBox[{"2", " ", "\[Mu]"}]], " ", 
       FractionBox["1", 
        SuperscriptBox["dr", "2"]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"one", "[", 
          RowBox[{"len", ",", 
           RowBox[{"-", "1"}]}], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"one", "[", 
           RowBox[{"len", ",", "0"}], "]"}]}], "+", 
         RowBox[{"one", "[", 
          RowBox[{"len", ",", "1"}], "]"}]}], ")"}]}]}]}], ";"}]}]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["BOUND SOLUTIONS", "Section",
 CellChangeTimes->{{3.680493744409877*^9, 3.680493748116157*^9}, {
  3.6805015455889893`*^9, 3.680501550293067*^9}, {3.6808653695727463`*^9, 
  3.680865370845078*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"BOUND", " ", "SOLUTION"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Kappa]", "[", "En_", "]"}], ":=", 
     RowBox[{"Sqrt", "[", 
      FractionBox[
       RowBox[{"2", "\[Mu]", " ", 
        RowBox[{"Abs", "[", "En", "]"}]}], 
       SuperscriptBox["\[HBar]c", "2"]], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"wavebound", "[", 
      RowBox[{"En_", ",", "r_", ",", "l_"}], "]"}], ":=", 
     RowBox[{"SphericalHankelH1", "[", 
      RowBox[{"l", ",", 
       RowBox[{"I", " ", 
        RowBox[{"\[Kappa]", "[", "En", "]"}], " ", "r"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bbound", "[", 
      RowBox[{"En_", ",", "l_"}], "]"}], ":=", 
     RowBox[{
      FractionBox["rmax", 
       RowBox[{"wavebound", "[", 
        RowBox[{"En", ",", "rmax", ",", "l"}], "]"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"wavebound", "[", 
           RowBox[{"En", ",", "r", ",", "l"}], "]"}], ",", "r"}], "]"}], "/.", 
        RowBox[{"r", "\[Rule]", "rmax"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "HAMILTONIAN", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hnewbound", "[", 
      RowBox[{"En_", ",", "l_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"H", "=", "H0"}], ";", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"[", 
          RowBox[{"len", ",", "len"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"Vmat", "[", 
          RowBox[{"[", 
           RowBox[{"len", ",", "len"}], "]"}], "]"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"-", 
            SuperscriptBox["\[HBar]c", "2"]}], 
           RowBox[{"2", " ", "\[Mu]"}]], " ", 
          FractionBox["1", 
           SuperscriptBox["dr", "2"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dr", " ", 
             FractionBox[
              RowBox[{"Bbound", "[", 
               RowBox[{"En", ",", "l"}], "]"}], "rmax"]}], "-", "1"}], 
           ")"}]}]}]}], ";", "H"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"RETURNS", " ", "EIGENVALUE"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eigenvbound", "[", 
     RowBox[{"{", 
      RowBox[{"En_", ",", "i_", ",", "l_"}], "}"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"evalbound", ",", "evecbound"}], "}"}], "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Eigensystem", "[", 
            RowBox[{"Hnewbound", "[", 
             RowBox[{"En", ",", "l"}], "]"}], "]"}], "]"}], ",", "First"}], 
         "]"}]}]}], ";", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"evalbound", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "i", ",", "l"}], "}"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.680493787218643*^9, 3.680493804155751*^9}, {
   3.6804938710911093`*^9, 3.680493948852131*^9}, {3.6804941097265577`*^9, 
   3.680494113717909*^9}, {3.680494509394868*^9, 3.680494509458496*^9}, {
   3.680494734285623*^9, 3.6804947465412903`*^9}, {3.680496579610886*^9, 
   3.680496580954191*^9}, {3.680496895422104*^9, 3.680496899852367*^9}, {
   3.680496960095098*^9, 3.680496970887083*^9}, {3.6804970681203327`*^9, 
   3.680497091616486*^9}, {3.6804971285852127`*^9, 3.6804971339127903`*^9}, 
   3.680497166283012*^9, {3.680497677656063*^9, 3.6804976778237762`*^9}, {
   3.6804977673611393`*^9, 3.680497775289358*^9}, {3.680497852282728*^9, 
   3.680497868346592*^9}, {3.6804979007632933`*^9, 3.6804979017870903`*^9}, {
   3.680498099701664*^9, 3.680498104421687*^9}, {3.680498254103931*^9, 
   3.680498275183907*^9}, {3.680498745678541*^9, 3.680498771886622*^9}, {
   3.680499313126048*^9, 3.680499317397732*^9}, {3.6805000268957253`*^9, 
   3.680500027440053*^9}, {3.68111539761263*^9, 3.681115405558079*^9}, 
   3.681123429636064*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "10"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evalsbound", "=", 
   RowBox[{"List", "[", "]"}]}], ";", 
  RowBox[{"evecsbound", "=", 
   RowBox[{"List", "[", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6804942359992857`*^9, 3.680494236671685*^9}, {
  3.681115406708366*^9, 3.6811154078683968`*^9}, {3.6811214547088346`*^9, 
  3.681121471196011*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"RETURNS", " ", "EIGENSYSTEM"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"En", "=", 
     RowBox[{
      RowBox[{"NestWhileList", "[", 
       RowBox[{"eigenvbound", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "V0"}], "/", "2"}], ",", "n", ",", "l"}], "}"}], ",", 
        
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ">", "\[Epsilon]"}], 
         "&"}], ",", "2", ",", "100"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Re", "[", "En", "]"}], "<", "0"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"evalsbound", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"evalsbound", ",", "En"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"evecsbound", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"evecsbound", ",", 
         RowBox[{"evecbound", "[", 
          RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], ";", 
      RowBox[{"n", "++"}], ";", 
      RowBox[{"En", "=", 
       RowBox[{
        RowBox[{"NestWhileList", "[", 
         RowBox[{"eigenvbound", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "V0"}], "/", "2"}], ",", "n", ",", "l"}], "}"}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ">", "\[Epsilon]"}], 
           "&"}], ",", "2", ",", "100"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ";"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.680493969153164*^9, 3.680493994142394*^9}, {
  3.680494072933827*^9, 3.680494078885552*^9}, {3.68049475467763*^9, 
  3.6804947672214622`*^9}, {3.680498814335202*^9, 3.680498815855164*^9}, {
  3.6811154104846888`*^9, 3.681115414605412*^9}, {3.6811195481104193`*^9, 
  3.681119559599695*^9}}],

Cell[CellGroupData[{

Cell[BoxData["evalsbound"], "Input",
 CellChangeTimes->{{3.681122433901002*^9, 3.681122439441162*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.681122436146991*^9, 3.6811224397957287`*^9}, 
   3.681122520953809*^9, 3.681122763070859*^9, {3.681122935908087*^9, 
   3.681122968676136*^9}, 3.6811233768172483`*^9, 3.6811234422529383`*^9, 
   3.681123541646081*^9, 3.681123606015389*^9, 3.681124951617283*^9, 
   3.681184737542118*^9, {3.6811940157757177`*^9, 3.681194035232164*^9}, 
   3.681194150672117*^9, 3.6811945828246*^9, 3.681195289631934*^9, 
   3.681195467256753*^9, 3.6811997001995087`*^9, 3.681199843563058*^9, 
   3.681200261970275*^9, 3.681200591021914*^9, 3.681200632606391*^9, 
   3.681200667540021*^9, 3.681200713543251*^9, {3.681200763850761*^9, 
   3.6812008098517017`*^9}, 3.681204708746768*^9, 3.681204741648273*^9, 
   3.6812047721227818`*^9, 3.681204855449479*^9, 3.681204921874279*^9, 
   3.6812049548251266`*^9, 3.6812060900755033`*^9, {3.6812130316082363`*^9, 
   3.681213058047027*^9}, 3.681213146161263*^9, 3.681469065838176*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MATCHES", " ", "AMPLITUDE"}], " ", "&"}], " ", "PLOTS"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"constbound", "[", "i_", "]"}], ":=", 
     FractionBox[
      RowBox[{"evecsbound", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], 
      RowBox[{"Abs", "[", 
       RowBox[{"wavebound", "[", 
        RowBox[{
         RowBox[{"evalsbound", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "rmax", ",", "l"}], "]"}], 
       "]"}]]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rmaxx", "=", "25."}], ";"}], "\n", 
   RowBox[{
    RowBox[{"normbound", "[", "i_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Psi]", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Append", "[", 
              RowBox[{"rlist", ",", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"rmax", "+", "dr"}], ",", "rmaxx", ",", "dr"}], 
                "]"}]}], "]"}], "]"}], ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{
               "evecsbound", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{
                RowBox[{"constbound", "[", "i", "]"}], " ", 
                RowBox[{"wavebound", "[", 
                 RowBox[{
                  RowBox[{"evalsbound", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"Range", "[", 
                   RowBox[{
                    RowBox[{"rmax", "+", "dr"}], ",", "rmaxx", ",", "dr"}], 
                   "]"}], ",", "l"}], "]"}]}]}], "]"}], "]"}]}], "}"}], "]"}],
          "]"}]}], "}"}], ",", 
      RowBox[{"Sqrt", "[", 
       FractionBox["1", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "dr", ",", "rmaxx"}], "}"}]}], "]"}]], "]"}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"rlist", ",", 
            RowBox[{
             RowBox[{"normbound", "[", "i", "]"}], " ", 
             RowBox[{
             "evecsbound", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}]}]}], "}"}], "]"}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", 
            RowBox[{
             RowBox[{"normbound", "[", "i", "]"}], 
             RowBox[{"constbound", "[", "i", "]"}], 
             RowBox[{"Abs", "[", 
              RowBox[{"wavebound", "[", 
               RowBox[{
                RowBox[{"evalsbound", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"Range", "[", 
                 RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", "l"}],
                "]"}], "]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "evalsbound", "]"}], ",", "1"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.680494020724709*^9, 3.6804940458850527`*^9}, {
  3.680494519499185*^9, 3.6804945227627296`*^9}, {3.680494623300119*^9, 
  3.6804946305560083`*^9}, {3.680494832958509*^9, 3.680494916479332*^9}, {
  3.6804950348811398`*^9, 3.680495045032901*^9}, {3.680498031669083*^9, 
  3.6804980518450747`*^9}, {3.68049808478157*^9, 3.680498089709523*^9}, {
  3.681020386878789*^9, 3.681020392894148*^9}, {3.681020494448127*^9, 
  3.681020497663711*^9}, {3.681020654882617*^9, 3.681020655281308*^9}, {
  3.681115417444804*^9, 3.681115428861904*^9}, {3.6811157038110743`*^9, 
  3.681115800155685*^9}, {3.6811158764548683`*^9, 3.681115886750388*^9}, {
  3.681115943271462*^9, 3.6811159435029173`*^9}, {3.681116034513897*^9, 
  3.681116046895238*^9}, {3.68111958471163*^9, 3.681119585102779*^9}, {
  3.681194634082453*^9, 3.681194634498362*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["RESONANCE STATES", "Section",
 CellChangeTimes->{{3.68049963133504*^9, 3.680499640130438*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"RESONANCE", " ", "SOLUTION"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", 
      RowBox[{"En_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{"Sqrt", "[", 
      FractionBox[
       RowBox[{"2", "\[Mu]", " ", "En"}], 
       SuperscriptBox["\[HBar]c", "2"]], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"waveres", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "r_", ",", "l_"}], "]"}], ":=", 
     
     RowBox[{"SphericalHankelH1", "[", 
      RowBox[{"l", ",", 
       RowBox[{
        RowBox[{"k", "[", "En", "]"}], " ", "r"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bres", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
     RowBox[{
      FractionBox["rmax", 
       RowBox[{"waveres", "[", 
        RowBox[{"En", ",", "rmax", ",", "l"}], "]"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"waveres", "[", 
           RowBox[{"En", ",", "r", ",", "l"}], "]"}], ",", "r"}], "]"}], "/.", 
        RowBox[{"r", "\[Rule]", "rmax"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "HAMILTONIAN", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hnewres", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"H", "=", "H0"}], ";", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"[", 
          RowBox[{"len", ",", "len"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"Vmat", "[", 
          RowBox[{"[", 
           RowBox[{"len", ",", "len"}], "]"}], "]"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"-", 
            SuperscriptBox["\[HBar]c", "2"]}], 
           RowBox[{"2", " ", "\[Mu]"}]], " ", 
          FractionBox["1", 
           SuperscriptBox["dr", "2"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dr", " ", 
             FractionBox[
              RowBox[{"Bres", "[", 
               RowBox[{"En", ",", "l"}], "]"}], "rmax"]}], "-", "1"}], 
           ")"}]}]}]}], ";", "H"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"RETURNS", " ", "EIGENVALUE"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eigenvres", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "i_", ",", "l_"}], "}"}], "]"}],
     ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"evalres", ",", "evecres"}], "}"}], "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Eigensystem", "[", 
            RowBox[{"Hnewres", "[", 
             RowBox[{"En", ",", "l"}], "]"}], "]"}], "]"}], ",", "First"}], 
         "]"}]}]}], ";", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"evalres", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "i", ",", "l"}], "}"}]}], 
     ")"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"eigenvres1", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "i_", ",", "l_"}], "]"}], ":=", 
     
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eval", ",", "evec"}], "}"}], "=", 
        RowBox[{"Transpose", "@", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Eigensystem", "[", 
             RowBox[{"Hnewres", "[", 
              RowBox[{"En", ",", "l"}], "]"}], "]"}], "]"}], ",", "First"}], 
          "]"}]}]}], ";", 
       RowBox[{"eval", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6805000385526037`*^9, 3.6805000468476152`*^9}, {
  3.680501096542554*^9, 3.680501098062717*^9}, {3.680502334377017*^9, 
  3.680502340201043*^9}, {3.6805023808736467`*^9, 3.6805024082342777`*^9}, {
  3.6805028361446123`*^9, 3.680502876185357*^9}, {3.680502918658387*^9, 
  3.680502923714177*^9}, {3.680839507931978*^9, 3.6808395650924*^9}, {
  3.6808416388463593`*^9, 3.680841641365535*^9}, {3.680841958921052*^9, 
  3.680841964576708*^9}, {3.680842003609765*^9, 3.6808420100255537`*^9}, {
  3.680842073210662*^9, 3.680842086043502*^9}, {3.6808421859479933`*^9, 
  3.680842187898958*^9}, {3.681115477734735*^9, 3.6811154831740627`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "10"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evalsres", "=", 
   RowBox[{"List", "[", "]"}]}], ";", 
  RowBox[{"evecsres", "=", 
   RowBox[{"List", "[", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdyU0og3EcwPGFlHKQTaF5GdFMGw3LbGGa14PD05bG9BRZCa1wobbcsAON
EvKS7aHneVbaUy6kZg5PDiNaUsuFg5SivMxhL/x/v8O3z+GrGHFSYxkSiaSM
BN70OD6ZyTeT8vIQtXv9+YfEd6FUCvoWWBeY3IigTgPlDxL1XRZ0KCE8gY3i
CarYp79AJT+Cpjtv2STxYVzHgXK24DhFLE0WoWZjwzno4RrRzOGdMHjl20Xv
gz8zaSLzHUfPJvhA7dSbKRCKoH/X+mo10R01oIMasR10/Nyhvv4XO2iVvaKx
mJHWEOMlrWibyLnAsCrhBitYfhPkuwOop6ZDWkf0OvvRtfejFrDvlEP10fJF
8GaiHrVkpVbA4kjOKlhVqV4HC6ubUWZr2g9eCAeoTrFFUcSl0W1U6taKoEbp
QAVmr8FKlJv20b0PrRmcn2tCVc+xXvzcI/o7m2cDC7NlKL2caxsgBkO0HfwH
eFH5/Q==
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"RETURNS", " ", "EIGENSYSTEM"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"En", "=", 
    RowBox[{
     RowBox[{"x", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Im", "[", 
          RowBox[{"eigenvres1", "[", 
           RowBox[{"x", ",", "n", ",", "l"}], "]"}], "]"}], "\[Equal]", 
         RowBox[{"Im", "[", "x", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"0.1", "+", 
           RowBox[{"0.", "I"}]}], ",", "0.", ",", "V0"}], "}"}]}], "]"}]}], "//",
      "Timing"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"En", "=", 
     RowBox[{
      RowBox[{"NestWhileList", "[", 
       RowBox[{"eigenvres", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "n", ",", "l"}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", 
            RowBox[{"Abs", "[", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ">", 
          "\[Epsilon]"}], "&"}], ",", "2", ",", "100"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"evalsres", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"evalsres", ",", "En"}], "]"}]}], ";", 
    RowBox[{"evecsres", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"evecsres", ",", 
       RowBox[{"evecres", "[", 
        RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.680503047340028*^9, 3.680503054139924*^9}, {
   3.680503123101305*^9, 3.680503144237377*^9}, {3.680503282744009*^9, 
   3.680503402865078*^9}, {3.680839576764056*^9, 3.680839610572544*^9}, {
   3.680839648053954*^9, 3.680839658525558*^9}, {3.6808397452223587`*^9, 
   3.680839814311363*^9}, {3.680839862606573*^9, 3.680839921952609*^9}, {
   3.680839988145401*^9, 3.680840076288315*^9}, {3.680840422295581*^9, 
   3.6808404247985563`*^9}, {3.680840465118589*^9, 3.680840475958631*^9}, {
   3.6808405774094257`*^9, 3.680840691825604*^9}, {3.680840742307818*^9, 
   3.680840758099163*^9}, {3.680840795268738*^9, 3.6808407988991737`*^9}, {
   3.6808409086525917`*^9, 3.680840915108686*^9}, {3.6808409973172283`*^9, 
   3.680841023279039*^9}, {3.680841153936676*^9, 3.6808411612796926`*^9}, {
   3.68084120073729*^9, 3.6808412525692577`*^9}, {3.6808415553484573`*^9, 
   3.68084158870053*^9}, {3.680841631709546*^9, 3.680841631893094*^9}, {
   3.6808416807501383`*^9, 3.680841726205883*^9}, {3.6808418712085123`*^9, 
   3.6808419117926407`*^9}, {3.6808419718332567`*^9, 3.680841979536775*^9}, {
   3.680842017025416*^9, 3.680842075153009*^9}, {3.680842178379879*^9, 
   3.680842199298946*^9}, {3.681115489310923*^9, 3.6811154936384363`*^9}, {
   3.681119219978983*^9, 3.681119220353364*^9}, 3.681200382771529*^9}],

Cell[CellGroupData[{

Cell[BoxData["evalsres"], "Input",
 CellChangeTimes->{{3.6811211221314793`*^9, 3.681121131702757*^9}, {
  3.681194112905054*^9, 3.6811941136086197`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.17644033970308426`", "\[VeryThinSpace]", "-", 
   RowBox[{"0.00035892640930603804`", " ", "\[ImaginaryI]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.681121128498641*^9, 3.68112113242735*^9}, 
   3.6811212685001707`*^9, 3.681121379049745*^9, 3.68112156971334*^9, 
   3.681121817683502*^9, 3.68112249524575*^9, 3.6811225657577877`*^9, 
   3.681122642272084*^9, 3.681122788978294*^9, 3.681123001031281*^9, 
   3.68112342070739*^9, 3.681123463382389*^9, 3.681123515571694*^9, 
   3.681123581586417*^9, 3.6811236434708*^9, 3.681125042996297*^9, 
   3.68118479741781*^9, 3.6811850806169357`*^9, 3.681194114281213*^9, 
   3.6811943338658113`*^9, 3.681195183331118*^9, 3.6811961505218277`*^9, 
   3.681200287304125*^9, 3.68120039851834*^9, 3.681200441991637*^9, {
   3.681200515924395*^9, 3.681200556212236*^9}, 3.681200615477343*^9, 
   3.6812006515787992`*^9, 3.681200690052196*^9, 3.681200724646538*^9, 
   3.681201020465446*^9, 3.681205080422347*^9, 3.6812052131923447`*^9, 
   3.681469430587965*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "2"}], ",", 
   RowBox[{"i", "\[LessEqual]", "5"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"En", "=", 
     RowBox[{
      RowBox[{"NestWhileList", "[", 
       RowBox[{"eigenvres", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "i", ",", "l"}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", 
            RowBox[{"Abs", "[", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ">", 
          "\[Epsilon]"}], "&"}], ",", "2", ",", "100"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"evalsres", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"evalsres", ",", "En"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"evecsres", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"evecsres", ",", 
       RowBox[{"evecres", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.681196158597026*^9, 3.681196192203074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MATCHES", " ", "AMPLITUDE"}], " ", "&"}], " ", "PLOTS"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"constres", "[", "i_", "]"}], ":=", 
     FractionBox[
      RowBox[{"evecsres", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], 
      RowBox[{"waveres", "[", 
       RowBox[{
        RowBox[{"evalsres", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "rmax", ",", "l"}], "]"}]]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"rmaxx", "=", "25."}], ";"}], "\n", 
   RowBox[{
    RowBox[{"normres", "[", "i_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Psi]", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Append", "[", 
              RowBox[{"rlist", ",", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"rmax", "+", "dr"}], ",", "rmaxx", ",", "dr"}], 
                "]"}]}], "]"}], "]"}], ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{
               "evecsres", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{
                RowBox[{"constres", "[", "i", "]"}], " ", 
                RowBox[{"waveres", "[", 
                 RowBox[{
                  RowBox[{"evalsres", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"Range", "[", 
                   RowBox[{
                    RowBox[{"rmax", "+", "dr"}], ",", "rmaxx", ",", "dr"}], 
                   "]"}], ",", "l"}], "]"}]}]}], "]"}], "]"}]}], "}"}], "]"}],
          "]"}]}], "}"}], ",", 
      RowBox[{"Sqrt", "[", 
       FractionBox["1", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "dr", ",", "rmaxx"}], "}"}]}], "]"}]], "]"}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"rlist", ",", 
          RowBox[{
           RowBox[{"normres", "[", "1", "]"}], " ", 
           RowBox[{"Abs", "[", 
            RowBox[{
            "evecsres", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], "]"}]}]}], "}"}], "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", 
          RowBox[{
           RowBox[{"normres", "[", "1", "]"}], 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"constres", "[", "1", "]"}], " ", 
             RowBox[{"waveres", "[", 
              RowBox[{
               RowBox[{"evalsres", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"Range", "[", 
                RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", "l"}], 
              "]"}]}], "]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.680503075700597*^9, 3.680503091420573*^9}, {
  3.680503468546356*^9, 3.680503483730632*^9}, {3.680842233029224*^9, 
  3.680842268452716*^9}, {3.680863546955668*^9, 3.68086369095858*^9}, {
  3.680863734215122*^9, 3.6808638092221403`*^9}, {3.680863913016672*^9, 
  3.680863951512073*^9}, {3.6808642398704023`*^9, 3.6808642735418367`*^9}, {
  3.68094604426893*^9, 3.680946045091666*^9}, {3.681019256982608*^9, 
  3.681019257381146*^9}, {3.6810213263741837`*^9, 3.681021341917232*^9}, {
  3.681021879181209*^9, 3.681021891757553*^9}, {3.681022901342835*^9, 
  3.681022901421736*^9}, {3.681022937984734*^9, 3.681022938614279*^9}, {
  3.681115494983288*^9, 3.681115499551258*^9}, {3.681116085017191*^9, 
  3.6811161312324677`*^9}, {3.681125401705141*^9, 3.681125402598257*^9}, {
  3.68120105103024*^9, 3.681201051373983*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
CRUW
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
f7rVPZWjHzxNHecyVOeJHP3g6cTYWWVG+XL0g6fsjq8vbMqRox88Hf38t9uJ
+3L0g6c1O96apKbJ0Q+enIRNQ2ruytEPnibN1uyoe0uOfvAUrDKvM0+Sox88
re2V99depRz94ClAQ7/4ilSOfvAUsvdJwYurcvSDp4vnvZ9ox8vRD55sKqTP
jH+Xox88bahqLd8TA48jPCWHtNVcj4JHME992ud+rzwFjxCeasLW99YPh0cY
Tw4V9SPtQuARwdOTbN/ZIUfhcZqndquLdnmB8Ijk6XzRv+5ah+ARzdPGp9pH
5/rBI4Yn5WCf+IM+8IjlyfPa8/Q0T3jE8aSbdqtMYzc84nmaXpz0xXg7PK7w
dDDKqfchN3gk8BTewX7Ug83wkPFUMW3KrB7O8FDwtOKE7+Kl6+GRKK7f1FKH
U2vgkcRTUUiZy1/28EjmyV7XYLvhcnjc5innMrd7mw08UnhKS0/dlWwJjzSe
fEdbundcBI8MnhRFfhss58MjS9w/X2ptok3h8UDcb20TjD4QPPLE/Rv2YsgM
I3jk8zQ7OOTb4RnwKODpY+eqglIWHoU8tS32jB4/DR7FPM2qfb12/yR4lPB0
6cJt/aJx8CjlaZvThYJRo+FRJvpsmOjlMwIe5Tzp92wd9HQIPN7w5PL1mmyc
PjwqeTrc8emMXwfBo4qnUqHv7bL+8Kjm6UV5h8l8X3jU8DR+h/GZE9rwqOfJ
NH5rU303eDSI5+HGofMWacHjs3h+PPkadE0THk3i5zmn0rq1y9AP8flnh7/f
/E2GfvCkGXq808N/ZegHT+zUUX0nNsrQD4HGLW3uFdogk/xYzpoCTbaOa/1c
K0M/xM9FWWUr3svQD4F8L7QlpL6ToR8C3cuo3WJYIUM/BLqxc7LusXKZJPRH
PwQyHOF8o+mFDP0QKHn3FBPHEhn6IVCG6aS7uU9l6IdAU2LaR7BPZOiHQE73
Tb1i82Xoh0BdJsXc6ZUrQz8Eqgm4/sEnS4Z+CFR5rY9WbboM/RBIKnfVdkiV
oR8C3X6xRuPRbRn6IdCA+KPlc27K0A+BFt4Lv6xMlKEfAo3porvKUCFDPwRK
C0tpjrwuQz8EGhk/wq/3VRn6IZBtal1DwCV4CAINCUy1aI2Fx0yB3r8Sju2O
gYeRQMoX7Tfro+BB4vu8cyPP5TQ8TASK/6qRVRkODzOBBhv5xzuGwsNcIPna
8m1lwfCwEOibx63/2QfBY5FAo67fVD0PgIelQP8e9J24wh8eVgKpwuXHnu+H
h61AbxM/Fa3cB4/lAi2oqvn+ci88Vgr0hyP1cNwFDweBXgScbK3wgMcageb9
E/p0kxs81gk0wel5cN1meDiJ90v7jt3lDA9nge54VV7+th4eLgJpnvvc9ZAj
PFwFUjysXqjtAI9tAjmnbvY4vQIeHgLJVv9vz3A7eOwU6GX6NQeZFTx2C/Ru
2q0Rs5bAw1OgJWMa8nIs4OEtUMv8f62Wm8PDV6A+rnuSq+bCw0+gL+E6bXsI
Hv4CdWj2Gd7VCB4BAu1rsTWMmgGPQIF2TJynNZGDxxGBfrf6ej9tGjyCBbJY
NnCd3WR4hAg0dOWCFx/GwyNMIP14YcrBMfCIEGjzzePrBxnC47RARmyTh2IY
PCIFutuks2qBATyiBXr1PWpo5WB4xAhk7TMp3XcgPGLFz0+9Z+v2h0ecQMeO
jzuR1Ace8QL1d6lOt9aGxxVx/5o7PmzoBo8EgYbRTFmIFjxkAq2JGLllckd4
KMT9pMptK2iXoh8CmTHPXLd/l6If4u9VfFL0+ypFPwTqrHz86EaTFP0QaE5a
/wz7T1L0Q6Beq7cfa6+Xoh8C7dEIm3ypRvrTI0OgYMuhVxZWS9EPcf/q5X/5
9FaKfgh0aq2x3tk3UvRDoO/mE3VMy6Xoh7h+DI3e1r2Q/vQoEGi5l8HhMyVS
9EM8b+r3a5gWS9EP8f3Y91zc8ESKfgj0MXWX27lHUvRDoBkLnNctzJOiHwLZ
Lw0Z05ItRT8EilsWk3E1U4p+iN7dTCbbp0nRD4HWScZu65EiRT8ECv2meSDl
lhT9EGjqlv3rPG5I0Q+BOlZY6IxMlKIf4vt8OzDquVyKfgg0S+/kP8euw+Oz
QBEOO3RMr8KjSTw/4x17fLsEj2aBioZrF6p+h0eLQFuHj3d2PQ+PVvH8H7Yl
b2Q0PDRm0Ngs79byM1LJ/wEyv0cZ
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 25.}, {0, 0.5755474856838698}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6808636040630913`*^9, 3.680863660826084*^9}, 
   3.680863709442524*^9, {3.680863748781459*^9, 3.6808638097162523`*^9}, {
   3.6808639155055847`*^9, 3.680863951936891*^9}, 3.68086402206535*^9, 
   3.680864077429137*^9, 3.680864168851262*^9, {3.6808642265333977`*^9, 
   3.680864273933621*^9}, {3.680946016148404*^9, 3.680946016367608*^9}, 
   3.680946046765169*^9, {3.6810192525806923`*^9, 3.681019257893488*^9}, {
   3.681021342962283*^9, 3.6810213555669537`*^9}, 3.6810214290557613`*^9, 
   3.681021464704626*^9, {3.681021886026929*^9, 3.68102189261162*^9}, {
   3.681022895605833*^9, 3.681022901937476*^9}, 3.68102294072099*^9, 
   3.681023084781953*^9, {3.6811155269099693`*^9, 3.6811155316169653`*^9}, 
   3.6811161375156317`*^9, 3.681118363824643*^9, 3.681118709403619*^9, 
   3.681118746295023*^9, 3.6811189667393513`*^9, 3.6811215847645493`*^9, 
   3.681122701708785*^9, 3.681123031314942*^9, 3.6811234781229687`*^9, 
   3.68112365443233*^9, 3.681125333491094*^9, 3.68112540388129*^9, 
   3.6811850832736893`*^9, {3.6812010482872334`*^9, 3.68120105216042*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["evalsres"], "Input",
 CellChangeTimes->{{3.681023086693243*^9, 3.681023087816201*^9}, {
  3.681115538894541*^9, 3.681115539198378*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.17644033970308426`", "\[VeryThinSpace]", "-", 
   RowBox[{"0.00035892640930603804`", " ", "\[ImaginaryI]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.681023088216405*^9, {3.6811155367933187`*^9, 3.68111553958364*^9}, 
   3.6811161535953197`*^9, 3.681118367755529*^9, 3.681118535146171*^9, 
   3.681118710236329*^9, 3.681118748949856*^9, 3.68111897368484*^9, 
   3.681121606891087*^9, 3.681122703713768*^9, 3.6811230366801023`*^9, 
   3.681123657673232*^9, 3.681185086737474*^9, 3.68120105652544*^9, 
   3.681469483687991*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SCATTERING SOLUTIONS", "Section",
 CellChangeTimes->{{3.680493373029624*^9, 3.680493376576358*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"SCATTERING", " ", "SOLUTION"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ks", "[", 
      RowBox[{"En_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{"Sqrt", "[", 
      FractionBox[
       RowBox[{"2", "\[Mu]", " ", "En"}], 
       SuperscriptBox["\[HBar]c", "2"]], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"wavescat1", "[", 
      RowBox[{"En_", ",", "r_", ",", "\[Delta]_", ",", "l_"}], "]"}], ":=", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"Exp", "[", 
       RowBox[{"I", " ", "\[Delta]"}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Delta]", "]"}], 
         RowBox[{"SphericalBesselJ", "[", 
          RowBox[{"l", ",", 
           RowBox[{
            RowBox[{"ks", "[", "En", "]"}], " ", "r"}]}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Delta]", "]"}], " ", 
         RowBox[{"SphericalBesselY", "[", 
          RowBox[{"l", ",", 
           RowBox[{
            RowBox[{"ks", "[", "En", "]"}], " ", "r"}]}], "]"}]}]}], 
       ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"wavescat", "[", 
      RowBox[{"En_", ",", "r_", ",", "\[Delta]_", ",", "l_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Delta]", "]"}], 
        RowBox[{"SphericalBesselJ", "[", 
         RowBox[{"l", ",", 
          RowBox[{
           RowBox[{"ks", "[", "En", "]"}], " ", "r"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Delta]", "]"}], " ", 
        RowBox[{"SphericalBesselY", "[", 
         RowBox[{"l", ",", 
          RowBox[{
           RowBox[{"ks", "[", "En", "]"}], " ", "r"}]}], "]"}]}]}], ")"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Bscat", "[", 
       RowBox[{
        RowBox[{"En_", "?", "NumericQ"}], ",", 
        RowBox[{"\[Delta]_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"k", "[", "En", "]"}], " ", "rmax", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Delta]", "]"}], " ", 
              RowBox[{
               SubscriptBox["\[PartialD]", "x"], 
               RowBox[{"SphericalBesselJ", "[", 
                RowBox[{"l", ",", "x"}], "]"}]}]}], "/.", 
             RowBox[{"x", "\[Rule]", 
              RowBox[{
               RowBox[{"k", "[", "En", "]"}], " ", "rmax"}]}]}], ")"}], "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Delta]", "]"}], " ", 
              RowBox[{
               SubscriptBox["\[PartialD]", "x"], 
               RowBox[{"SphericalBesselY", "[", 
                RowBox[{"l", ",", "x"}], "]"}]}]}], "/.", 
             RowBox[{"x", "\[Rule]", 
              RowBox[{
               RowBox[{"k", "[", "En", "]"}], " ", "rmax"}]}]}], ")"}]}], 
          ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Delta]", "]"}], 
            RowBox[{"SphericalBesselJ", "[", 
             RowBox[{"l", ",", 
              RowBox[{
               RowBox[{"k", "[", "En", "]"}], " ", "rmax"}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Delta]", "]"}], 
            RowBox[{"SphericalBesselY", "[", 
             RowBox[{"l", ",", 
              RowBox[{
               RowBox[{"k", "[", "En", "]"}], " ", "rmax"}]}], "]"}]}]}], 
          ")"}]}], ")"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bscat", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", 
       RowBox[{"\[Delta]_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       FractionBox["rmax", 
        RowBox[{"wavescat", "[", 
         RowBox[{"En", ",", "rmax", ",", "\[Delta]", ",", "l"}], "]"}]], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"wavescat", "[", 
          RowBox[{"En", ",", "r", ",", "\[Delta]", ",", "l"}], "]"}], ",", 
         "r"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{"r", "\[Rule]", "rmax"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "HAMILTONIAN", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hnewscat", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", 
       RowBox[{"\[Delta]_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"H", "=", "H0"}], ";", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"[", 
          RowBox[{"len", ",", "len"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"Vmat", "[", 
          RowBox[{"[", 
           RowBox[{"len", ",", "len"}], "]"}], "]"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"-", 
            SuperscriptBox["\[HBar]c", "2"]}], 
           RowBox[{"2", " ", "\[Mu]"}]], " ", 
          FractionBox["1", 
           SuperscriptBox["dr", "2"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dr", " ", 
             FractionBox[
              RowBox[{"Bscat", "[", 
               RowBox[{"En", ",", "\[Delta]", ",", "l"}], "]"}], "rmax"]}], 
            "-", "1"}], ")"}]}]}]}], ";", "H"}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"RETURNS", " ", "EIGEINVALUE"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"eigenvscat", "[", 
      RowBox[{
       RowBox[{"En_", "?", "NumericQ"}], ",", "i_", ",", 
       RowBox[{"\[Delta]_", "?", "NumericQ"}], ",", "l_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"evalscat", ",", "evecscat"}], "}"}], "=", 
        RowBox[{"Transpose", "@", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Eigensystem", "[", 
             RowBox[{"Hnewscat", "[", 
              RowBox[{"En", ",", "\[Delta]", ",", "l"}], "]"}], "]"}], "]"}], 
           ",", "First"}], "]"}]}]}], ";", 
       RowBox[{"evalscat", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"FINDS", " ", "ENERGY", " ", "LEVEL", " ", "AND", " ", "PHASE"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"findnd", "[", "En_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"phase", "=", 
          RowBox[{"List", "[", "]"}]}], ",", 
         RowBox[{"n", "=", "1"}]}], "}"}], ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"eigenvscat", "[", 
                 RowBox[{"{", 
                  RowBox[{"En", ",", "n", ",", "\[Delta]", ",", "l"}], "}"}], 
                 "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Delta]", ",", "0.", ",", "\[Pi]", ",", "0.01"}], 
                "}"}]}], "]"}], "]"}], "<", "En"}], ",", 
           RowBox[{
            RowBox[{"n", "++"}], ";"}]}], "]"}], ";", 
         RowBox[{"phase", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"eigenvscat", "[", 
                RowBox[{"{", 
                 RowBox[{"En", ",", "n", ",", "\[Delta]", ",", "l"}], "}"}], 
                "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "\[Delta]"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"\[Delta]", ",", "0", ",", "\[Pi]", ",", "0.001"}], 
             "}"}]}], "]"}]}], ";", 
         RowBox[{"\[Delta]", "=", 
          RowBox[{"phase", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"phase", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"Nearest", "[", 
                  RowBox[{
                   RowBox[{"phase", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "En"}], 
                  "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}], 
           "]"}]}], ";", 
         RowBox[{"{", 
          RowBox[{"n", ",", "\[Delta]"}], "}"}]}], ")"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"findnd", "[", 
      RowBox[{"En_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", "=", "1"}], "}"}], ",", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"eigenvscat", "[", 
               RowBox[{"En", ",", "n", ",", "x", ",", "l"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0.", ",", "\[Pi]", ",", "0.1"}], "}"}]}], 
             "]"}], "]"}], "<", "En"}], ",", 
          RowBox[{
           RowBox[{"n", "++"}], ";"}]}], "]"}], ";", 
        RowBox[{"\[Delta]", "=", 
         RowBox[{"x", "/.", 
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eigenvscat", "[", 
              RowBox[{"En", ",", "n", ",", "x", ",", "l"}], "]"}], "\[Equal]",
              "En"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0.", ",", 
              RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}]}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Delta]", "<", "0"}], ",", 
          RowBox[{"\[Delta]", "=", 
           RowBox[{"\[Pi]", "+", "\[Delta]"}]}]}], "]"}], ";", 
        RowBox[{"{", 
         RowBox[{"n", ",", "\[Delta]"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"MATCHES", " ", "AMPLITUDE", " ", "AND", " ", "PLOTS"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"constscat", "[", "i_", "]"}], ":=", 
     FractionBox[
      RowBox[{"evecscat", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], 
      RowBox[{"wavescat", "[", 
       RowBox[{
        RowBox[{"evalscat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "rmax", ",", "\[Delta]", ",", 
        "l"}], "]"}]]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rmaxx", "=", "25."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"normscat", "[", "i_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Psi]", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Append", "[", 
              RowBox[{"rlist", ",", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"rmax", "+", "dr"}], ",", "rmaxx", ",", "dr"}], 
                "]"}]}], "]"}], "]"}], ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{
               "evecscat", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{
                RowBox[{"constscat", "[", "i", "]"}], " ", 
                RowBox[{"wavescat", "[", 
                 RowBox[{
                  RowBox[{"evalscat", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"Range", "[", 
                   RowBox[{
                    RowBox[{"rmax", "+", "dr"}], ",", "rmaxx", ",", "dr"}], 
                   "]"}], ",", "\[Delta]", ",", "l"}], "]"}]}]}], "]"}], 
             "]"}]}], "}"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"Sqrt", "[", 
       FractionBox["1", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"\[Psi]", "[", "x", "]"}], "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "dr", ",", "rmaxx"}], "}"}]}], "]"}]], "]"}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wvplot", "[", "En_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{
          RowBox[{"findnd", "[", "En", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"\[Delta]", "=", 
         RowBox[{
          RowBox[{"findnd", "[", "En", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"evalscat", ",", "evecscat"}], "}"}], "=", 
        RowBox[{"Transpose", "@", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Eigensystem", "[", 
             RowBox[{"Hnewscat", "[", 
              RowBox[{"En", ",", "\[Delta]", ",", "l"}], "]"}], "]"}], "]"}], 
           ",", "First"}], "]"}]}]}], ";", 
       RowBox[{"Print", "[", 
        RowBox[{"{", 
         RowBox[{"En", ",", 
          RowBox[{"evalscat", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", "n", ",", "\[Delta]"}], "}"}],
         "]"}], ";", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"rlist", ",", 
              RowBox[{
               RowBox[{"normscat", "[", "n", "]"}], " ", 
               RowBox[{"Abs", "[", 
                RowBox[{
                "evecscat", "\[LeftDoubleBracket]", "n", 
                 "\[RightDoubleBracket]"}], "]"}]}]}], "}"}], "]"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", 
              RowBox[{
               RowBox[{"normscat", "[", "n", "]"}], " ", 
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"constscat", "[", "n", "]"}], " ", 
                 RowBox[{"wavescat", "[", 
                  RowBox[{
                   RowBox[{"evalscat", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], ",", 
                   RowBox[{"Range", "[", 
                    RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", 
                   "\[Delta]", ",", "l"}], "]"}]}], "]"}]}]}], "}"}], "]"}]}],
           "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.6804224593223877`*^9, {3.6804301198261547`*^9, 3.680430144458576*^9}, {
   3.680430430343828*^9, 3.680430544799755*^9}, {3.680430644682653*^9, 
   3.680430732963834*^9}, {3.680431100002173*^9, 3.680431108185492*^9}, {
   3.680431248963966*^9, 3.68043127818853*^9}, {3.680431378286174*^9, 
   3.680431506512566*^9}, {3.680431572353176*^9, 3.680431601074061*^9}, {
   3.680432012479787*^9, 3.680432016784362*^9}, {3.68043213137788*^9, 
   3.680432206715345*^9}, {3.680432308869207*^9, 3.6804323090770197`*^9}, {
   3.6804323571333923`*^9, 3.6804323572532587`*^9}, 3.680432483961399*^9, {
   3.68043286865368*^9, 3.680432890349701*^9}, {3.680432925302455*^9, 
   3.680432932038418*^9}, {3.6804330636080437`*^9, 3.680433088696362*^9}, {
   3.680433180529482*^9, 3.680433195649756*^9}, {3.680433293483571*^9, 
   3.680433304403652*^9}, {3.680437056612307*^9, 3.6804370569238653`*^9}, {
   3.680492215015047*^9, 3.6804922238631973`*^9}, {3.6804924477222233`*^9, 
   3.6804925295318403`*^9}, {3.680492968313734*^9, 3.680492968889697*^9}, {
   3.68049301130617*^9, 3.680493047650674*^9}, {3.680493188406488*^9, 
   3.6804933696002607`*^9}, {3.68049341608704*^9, 3.68049357299198*^9}, {
   3.680493631961183*^9, 3.680493638217081*^9}, {3.6804938954049263`*^9, 
   3.6804938977327127`*^9}, {3.680496558276001*^9, 3.680496560250619*^9}, {
   3.680500017432419*^9, 3.6805000178328123`*^9}, {3.68050355159664*^9, 
   3.680503553236487*^9}, {3.680603939581233*^9, 3.680603953284528*^9}, {
   3.680604007173369*^9, 3.6806040493582973`*^9}, {3.680604303282702*^9, 
   3.6806043051142607`*^9}, {3.680605149927103*^9, 3.6806052129594193`*^9}, {
   3.680605351212398*^9, 3.6806054232990294`*^9}, 3.680605762784666*^9, 
   3.680605818513176*^9, {3.680606111901723*^9, 3.6806061523255463`*^9}, {
   3.6806062735919647`*^9, 3.680606309711711*^9}, {3.680606370936944*^9, 
   3.680606376769084*^9}, {3.680606419649418*^9, 3.680606423953417*^9}, {
   3.6806064594185133`*^9, 3.680606463657946*^9}, {3.6808423957916107`*^9, 
   3.680842397582231*^9}, {3.680843168824945*^9, 3.680843176927113*^9}, {
   3.6808437234800673`*^9, 3.680843725686363*^9}, 3.6808439834914417`*^9, {
   3.680952421082633*^9, 3.680952428560569*^9}, {3.6811155462883253`*^9, 
   3.6811155934496317`*^9}, {3.6811161734837303`*^9, 3.681116254508862*^9}, {
   3.6811165651921167`*^9, 3.681116573720078*^9}, {3.681200107250054*^9, 
   3.681200107744721*^9}, {3.681468644539239*^9, 3.6814686526356297`*^9}, {
   3.681468848440481*^9, 3.681468849361513*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"wvplot", "[", "0.1764403397030842", "]"}], "//", 
  "Timing"}]], "Input",
 CellChangeTimes->{{3.680433373868791*^9, 3.6804333746598167`*^9}, 
   3.680435854489259*^9, {3.680436959498003*^9, 3.680436963481512*^9}, {
   3.6804370529151783`*^9, 3.680437053114812*^9}, {3.680491835440606*^9, 
   3.68049183593636*^9}, {3.680493580672111*^9, 3.680493583479937*^9}, {
   3.6805035600119133`*^9, 3.680503562539624*^9}, {3.6805042099500313`*^9, 
   3.680504212021035*^9}, {3.680604323561583*^9, 3.680604325001102*^9}, {
   3.680605273439784*^9, 3.680605274727408*^9}, {3.680606243406543*^9, 
   3.68060624589408*^9}, {3.6806065039542713`*^9, 3.680606505089884*^9}, {
   3.6808575162760277`*^9, 3.680857557761392*^9}, {3.6808642998138647`*^9, 
   3.680864302357315*^9}, {3.681019279389553*^9, 3.681019280629363*^9}, {
   3.681023106329789*^9, 3.681023108960766*^9}, {3.6811161709911013`*^9, 
   3.681116171753017*^9}, {3.681118403621785*^9, 3.681118406892433*^9}, 
   3.681118477183106*^9, {3.681118547630986*^9, 3.681118592310817*^9}, {
   3.681118793065896*^9, 3.681118794129755*^9}, {3.6811188478835897`*^9, 
   3.681118849755221*^9}, {3.681118988110978*^9, 3.6811189907250147`*^9}, {
   3.681122804130081*^9, 3.681122806960294*^9}, {3.681123043941864*^9, 
   3.681123045219904*^9}, {3.6811236660310287`*^9, 3.681123666525186*^9}, {
   3.681185095259922*^9, 3.681185095883513*^9}, {3.6812000513435087`*^9, 
   3.681200053605173*^9}, {3.6812001322805557`*^9, 3.681200157983265*^9}, {
   3.681200190673547*^9, 3.6812001915356417`*^9}, {3.68120106482263*^9, 
   3.681201066356558*^9}, {3.681468634634405*^9, 3.681468634777986*^9}, {
   3.6814694901373663`*^9, 3.681469491758501*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.1764403397030842`", ",", "0.176440339703084`", ",", "1", ",", 
   "1.577393900190044`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.68111669326823*^9, 3.6811184228762913`*^9, 3.6811184975959253`*^9, {
   3.681118565716236*^9, 3.6811186084957237`*^9}, {3.6811188037116632`*^9, 
   3.681118820534734*^9}, 3.6811188665860643`*^9, 3.681119001045556*^9, 
   3.6811194357702827`*^9, 3.681122816321213*^9, 3.681123057028652*^9, 
   3.681123680059318*^9, 3.681185240077036*^9, 3.681200063137868*^9, {
   3.681200118831984*^9, 3.6812001461744556`*^9}, 3.68120017678403*^9, 
   3.6812002139671497`*^9, 3.6812013650903463`*^9, 3.6814687990208178`*^9, 
   3.6814695273039713`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"67.328`", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.005555555555555556], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
Jf8BcnvQLA==
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.005555555555555556], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
7pOmk8dzFZqcPvx87yTyeKnCng220zqMJ49yFWquTvPYNoo8KlRoFvdq/vNh
5FGlwhq7Z5+HDyKPD8J4FINUu/uTR7VwPVk9U6Pe5PFFhWk/2l3wU5JHjQqn
Kzd0/mFNHj9UuNnLqOMSc/L4pULXDQ1P3heTxx8V1juIO4zpSR46ationA1O
GpFHfTW+3tQ9ru1EHo3U8Hh7vNWuduShq8aVaxm65q3Jo5karWJ3ZWU3Jw89
NcbrVFT00iWPVmo82T7sWnp98tBXY5f88oxef93ZDzWqvm/3yfrpzn6oYTtx
6mSzGnf2Qw3vbXNOFVW7sx9qfJ8SdU31zp39UOPC1n/bjr1xZz/U2CFJOz38
pTv7oUbPaS55t564sx9qNExPMbN/4M5+qFE7scmQT7fd2Q81vi0q/e523Z39
UCN129XB7S67sx9q3HrZ3yS3zJ39UKNzbLu0/qfd2Q81TPvNLr513J39UGOc
Uc9JKw+7sx9qfJGtCtDd785+qGHQaczkjN3u7Iewvp0uFqPInf1Qo7BnTeLT
PHf2Q40Z5+91dM1yZz+E643w7NUzzZ39UCPbu/GRM4nu7IcaHXRXP18W685+
qPHm++Vw/Uh39kMNS4ny6sEQ8pikRoO2e6IWBJDHVOH6F2a9bulDHtPV8Gwx
5Ohhd/KYpcY+7XbDZc7kMUfYL6M71e+8lTzmqzGt0nrlxQ3ksUDgM+n2LOc1
5OGgxuJV3a7JV5LHEjXWHRKdrVhCHsvVGDLzd//UheSxSo3JbY6pp88jD0c1
0mzcd7adRR7r1Oj9fH7O1anksUGNs+EbjYImksdmNXSCHrQePY48tqoxMCvX
VW8UeTip0XzM7+VXhpGHqzCfsE/XwwaRh7vw/S5Zu6YMIA8vNeItlM2M+pCH
jxopGUcevFKRh78aku+zehbJyCNQjUyN8tlmS/IIEebT0r7tUDPyCFPjxZHG
h9sYk0ekGo8NB9953p08YtSYkKJduNuQPOLUGDW66ULPjuSRqMaik3dvTW1H
HslqjFafK7FoTR5pakxZW9uogR55ZKjR+E7s6Qe65JEtjH/y6eo9DcgjVxjv
lgy/4H9u7IcaTnNmBS+rdWM/1Kje0/6v7Xc39kON4iPf7oq/uLEfavwcY9JF
96Mb+6GG0dWrZysq3dgPNer17vTgYrkb+6HGifaWk4pfuLEfavR1VSmjn7ix
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
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{831., Automatic},
    Method->{},
    PlotRange->{{0, 25.}, {0, 0.638903147380186}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.681116693562469*^9, 3.6811184231114483`*^9, 3.68111849783709*^9, {
   3.6811185659513893`*^9, 3.681118608727056*^9}, {3.681118803969149*^9, 
   3.6811188208102207`*^9}, 3.681118866837831*^9, 3.681119001333509*^9, 
   3.681119435985536*^9, 3.6811228183832083`*^9, 3.6811230573057127`*^9, 
   3.6811236820913277`*^9, 3.68118524021299*^9, 3.681200063837183*^9, {
   3.6812001197677813`*^9, 3.681200147100339*^9}, 3.681200177712318*^9, 
   3.681200214894271*^9, 3.6812013652319098`*^9, 3.681468799142215*^9, 
   3.681469527535861*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"phasedata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"findnd", "[", "x", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.17", ",", "0.18", ",", "0.001"}], "}"}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.680849096466652*^9, 3.680849143712572*^9}, {
   3.68085026882513*^9, 3.680850314609213*^9}, {3.6808540727228413`*^9, 
   3.68085407673076*^9}, 3.680863397223774*^9, {3.680864355382566*^9, 
   3.680864362062392*^9}, {3.681123064692511*^9, 3.681123070332335*^9}, {
   3.6811236907663383`*^9, 3.6811236911579437`*^9}, {3.681185359447818*^9, 
   3.6811853675279512`*^9}, {3.681186349605983*^9, 3.681186356757679*^9}, {
   3.681469670658502*^9, 3.681469675778534*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"phasedata", ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], ",", "Red"}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.680849096466652*^9, 3.680849143712572*^9}, {
  3.68085026882513*^9, 3.680850300510682*^9}, {3.6808590520905037`*^9, 
  3.680859119875533*^9}, {3.680859165863468*^9, 3.6808591883320227`*^9}, {
  3.680859229714102*^9, 3.6808592309827347`*^9}, {3.680859321591283*^9, 
  3.680859408409452*^9}, {3.680864826438867*^9, 3.680864834917656*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.17, 3.092251079610008}, {0.171, 3.082085679279515}, {
      0.17200000000000001`, 3.0673484073620787`}, {0.17300000000000001`, 
      3.044094558228352}, {0.17400000000000002`, 3.002055088352832}, {
      0.17500000000000002`, 2.903908576668756}, {0.17600000000000002`, 
      2.464283583369098}, {0.17700000000000002`, 0.5768764841576131}, {
      0.17800000000000002`, 0.23285601697871572`}, {0.17900000000000002`, 
      0.1460212082385901}, {0.18000000000000002`, 
      0.10723980204880634`}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.16984375000000004`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->NCache[{None, {{Rational[1, 2] Pi, 
       RGBColor[1, 0, 0]}}}, {None, {{1.5707963267948966`, 
       RGBColor[1, 0, 0]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0.17, 0.18000000000000002`}, {0, 3.092251079610008}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.681469904204631*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"findres", "[", "n_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"phase", "[", 
      RowBox[{"y_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"eigenvscat", "[", 
           RowBox[{"y", ",", "n", ",", "x", ",", "l"}], "]"}], "\[Equal]", 
          "y"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0.", ",", 
           RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    RowBox[{
     SubscriptBox["\[Delta]", "res"], "=", 
     RowBox[{"y", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", "y", "]"}], "\[Equal]", 
         RowBox[{"Pi", "/", "2"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0.1765", ",", "0.1760", ",", "0.1770"}], "}"}]}], 
       "]"}]}]}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.6808468810888042`*^9, 3.6808468909956417`*^9}, {
  3.680846934612537*^9, 3.680846961132778*^9}, {3.680847194568553*^9, 
  3.680847374282238*^9}, {3.6808584570164757`*^9, 3.680858458266645*^9}, {
  3.680864725116372*^9, 3.680864734236668*^9}, {3.6811232151435337`*^9, 
  3.681123221039124*^9}, {3.681124748085923*^9, 3.681124752045969*^9}, {
  3.681203055099395*^9, 3.681203060699506*^9}, {3.6812035697071133`*^9, 
  3.681203577522913*^9}, {3.681469917758683*^9, 3.68146992246992*^9}, {
  3.6814704212706423`*^9, 3.6814704324305363`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Delta]", "res"], "=", 
  RowBox[{"findres", "[", "1", "]"}]}]], "Input",
 CellChangeTimes->{{3.680847386525696*^9, 3.680847388906041*^9}, {
   3.6808585682661333`*^9, 3.6808585812516108`*^9}, {3.680863478297586*^9, 
   3.68086347867348*^9}, 3.681123231015163*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681469963669639*^9, 3.681470467789947*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "reged"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The point \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.176`\
\\\", \\\"}\\\"}]\\)\[NoBreak] is at the edge of the search region \[NoBreak]\
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.176`\\\", \\\",\\\", \
\\\"0.177`\\\"}], \\\"}\\\"}]\\)\[NoBreak] in coordinate \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] and the computed search \
direction points outside the region. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindRoot/reged\\\", \
ButtonNote -> \\\"FindRoot::reged\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681469963669639*^9, 3.681470497420681*^9}],

Cell[BoxData["0.176`"], "Output",
 CellChangeTimes->{3.681204105310439*^9, 3.6814699636727324`*^9, 
  3.681470497421484*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6814704075812397`*^9, 3.681470408171961*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"funcphasedata", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"phasedata", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Spline\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dfuncphasedata", "=", 
   RowBox[{"funcphasedata", "'"}]}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"funcphasedata", "[", "x", "]"}], ",", 
      RowBox[{"dfuncphasedata", "[", "x", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1.0", ",", "1.4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["\[Delta]", "res"], ",", "Red"}], "}"}], "}"}], ",", 
      "None"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.680849857510713*^9, 3.6808498762348013`*^9}, {
   3.680849914067349*^9, 3.680849916899426*^9}, 3.680853163149538*^9, 
   3.680853299647491*^9, {3.680853888520605*^9, 3.6808538912716923`*^9}, {
   3.680853969705566*^9, 3.68085398831341*^9}, 3.680854159675955*^9, 
   3.680855292396118*^9, {3.680855848205282*^9, 3.6808558854377604`*^9}, {
   3.680855972430798*^9, 3.680855972590219*^9}, {3.680856016536673*^9, 
   3.680856020799489*^9}, {3.680856190786376*^9, 3.680856219466021*^9}, {
   3.680858610648383*^9, 3.680858671299796*^9}, {3.680858746218295*^9, 
   3.680858879872031*^9}, {3.680858917514893*^9, 3.6808590299644327`*^9}, {
   3.6808593551417913`*^9, 3.680859361387748*^9}, {3.6808648394705677`*^9, 
   3.6808648453416224`*^9}, {3.681123290561391*^9, 3.6811232931839046`*^9}, {
   3.681124839863171*^9, 3.68112486224726*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
yA==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV13k8VF8bAHBEdsm+L5MoZA0zU3meaLMUlS0kW8gWohJJiBIRQru0iFJS
oShaXpVElkQpivZk5t6hQrzn99f9fD9z7znPeZ7znDtX23/7hq0CfHx8sfx8
fP9dr/81IRcOnP39bpeU+jfIu3zsYjLxOO95W6bON4h1n1jDz88BRqC2k7jh
N2DffpQjIMCB/mKBVqUl3+BxlJu6kCAH4jzP1Gzd9A16vyQwxUQ44AxLnJ4U
fgOBnuZIOWkO9GaLHSmX+w4u1d5vF2hxwBJnln9X+wFv1ltZzLblQLJPwVnJ
/BGwXGqvWBDAgdEdOVUhchxQcJbZl5TKATmRV9HrUrjw2v5QsPolDiwWljGb
WUlDZC6zN7yZA4FDsZ45C8bgU0Phs6hv5P7egE9fUn7DoEwFdohzIbx+xXCW
+QTcuDkGHw24EDTi59Sg+Q8ClnAay9ZxQSqWGfg0nA9/SM57qr6dC01dO8Tk
9gpgf6WnzGliZz6RS70HBLB1bZ63WhQXisWH40uPCODVbH6uSjQXXjlmZKwq
EcBwyUFlpR1c+GaqfWrgkQD+kjgdJrOLC/svdjltlpiFXHHFOcL7uMA1Nf+Q
XjoLf4uKu3GOcKF1oP9K3pAgpmxdGbMnhwtpx9rduL8EUerBviOCuVwo0d4y
z2NCEHV385qVjnKhrsFF23quELp8fme1PJ8Lf/4drwoDIax+WKWcV8SF/sos
tbWnhTAywe2deQkX7tnRvRNbZuPwz3OBu25wIUsm8NVfIRE8ufCfzR9itaWS
b0ZlRHBDkId2fDUXZNzUAkY1RbBpQOr9nptcyPUKFxBni+CpzgT3pNtcsL/a
FXcrUgRd61ztD9zhgtbWRuOXfSLYnCpqkv+AxGcuztGvFcUylejJax1ciK1R
L8krEMcJmfYr7E4u+DxU2112URwdxRd5NxM3vFpW9LxGHKnJrw3vurhwQPZz
xfI+cVz6zjdJoocLKt/b9D5pSODLs878oW+4YCgosFu0UgL/6JgIzx/iwvCP
kegn3ZJobzwqc5JH4hOTfHhJXxptpgIsdMa4YD5d+UnFQhqXPOt1ryTuc/TE
4yCNhgEPTzWOc0FyovvELRdpnFN0THf4DxeKCjYMb90njd3TS9iL/nHhyrPI
Z9U90ujTdtCvUYgCy8UG/WNZczE6glE1pEDBrNVWU/ZKsligWlcQoEiBWU+w
0z4dWax7tjZ+iNjB2UCjyUQW+XTjbYaUKGgWDDMKtpPF3Pft3R9VKGBtf6Hs
kCCLVU57/37QoKDPTkMt9IMsckx7bQZ1KZBQ4LQJ1sqh3GCEnq8eBUnTewue
PpZD5pFZEoPEdzvOvCrulMPk70avBhZQkMU83uLzSw6lzx8IHtCn4Jxw9L5k
XXk0ljPPem9EQeCVq3Kqx+Uxcjz7Vb8lBYJiLiNXMxTQyFc3K9iKgt3NRhcc
ixVw5Nl9G4oYvy4Wm7ysgOGnR68Lsygw8X40lNqigKEr1meaLaHAWehb60op
RQzKk4ODQMEJ5pus2mJF3Gx08rL5Ggo0lCIFmhqUUK3YfMt94vTwOw+r2pWw
n79V3s6Ogn0Z4dY1H5XQ89VUio89BT7SYiEzIsrokeiz+ZAj8XZGWqabMrq0
aMsMOFOg7vd0IHVMGR2DLidkbqKgSfabzixbVbS64ccT96QgvNk1UtVdFRlT
KhHZxFR12pOVYar4+2i2T64XiZ+1sPxlviqW3otZXriZgsWTWQsbP6niX7ll
wqV+FGxwbdSYyVLDS4868u5soyA097n7hW/qeFTqsPiSUApyB9b2mvBpYOKm
FWkNxPiiJ6VHQQPXj9bENYZRYJ425RqxQgOnVE55/C+CgtV+RbynJRq4MSZI
oyOaghWvxWSZPprIpz1Z/jWegk8esd8n4rQwXa+WF7uHAtsdF1lfUrVQwmgH
8CdQIFR4d93Ho1qovORHt3IiBQ283BbBa1po5vp2xj6JgnKFXyKTn7Vw66F6
18oUCjp+biu56qWNLdwE/pjDFPR/CGbrODPQ+Y+V4zSxj4jKqm9bGNgzTRdm
ZlFgY1WleG87A4fEww3PZ1Ngf+2gxNEcBk7N93bvzqHg98NHvB/tDDT2XFpp
WUCBW0/IFmWXeVjwcMpj8hQFvdb0NfEwHWw63S5/4DQFVdPjTc8TdXBkd2mn
1BkKgqw+5585ooOrjNc4Ms5S8E4mIzGxWgd/n8wHu3MUpMZ0eihP6qBnnL5u
0UUKrF/lLHudMx+1FnjQZtco4FtwsTbgiS5WZt/MDm2kIGyO+Jrw7QtR0L5M
4gexaYng8I60heg9++ThsCYKlulLZWcfX4gS+1IOhT+gIGbh+tm/Hy3E0Kj1
ByIfUcDsLjxWqqyPCzaOJsY8oaC2X0vP+6k+XlAyCN/TToFrnbHCJnNDPHm+
1D5zgIKXx5k6e8AYQ0vwoI8ADXJV/c8rVpnjwb/uJweJRQ629PxzMceyDduv
+c+ioftDwHfXAHMcFjzTHSRIQ7rKcQP5ZHP02TaptX02DdUlkgov75jjRrOa
O/vEaGieXJ1uYbQYlz42+FEiQ8OzxssjB2Qs0FPddpohS8Otza350VoWGL/T
c+5F4oADjJoNRhZYs+CQVbkcDUnRQdvH7CzQNPtz6g0FGlj3HG81JFugrts5
tYcqNKxh5Gds+GmBc74qrBti0KA+T9jlZL0ldsuv7PKfR4ODQBP79xNLLLbd
4fGR+DTDc7ZdtyUyzrb7f9ChwULPzLHtpyUudju4a0CXBg2IztuiboWej/+W
vNWngVNhIHo60Qo1KD1dLwMaqNN/lrkftMIhTbcrb4hXdV5yFy6wwvCE6tt9
hjScmb7EsrtihfvMwlpeG9GwLsiybmOfFV4o6ae7zGgIjT56NtWciSFtYvEb
zWm48aEq7qQ1ExdNMac7iT29/k0ft2Nijfsxkc7FNGQd7D3I2sLEZ1Lr1F9a
0nCxpShe4BATfyU2rmpl0+A9wmqv72FidcXIc4clNBw42HH18wATd/Wqrn9O
HJLV7U19ZSLf4t1eLUtpEGhTW3x1gomyP0yinlrTMMSsaSxXYyFzU+nxxzY0
MCslHFo9WVhs08VZZ0tD5/6+a2f9WfjHQHBNH7FCrpLfulAW1k1vHR9ZQcOR
TSNVy+JZyLqwcKPiapLvEu6/gGMsPJHtWXGOWNvG+dXcUyyc2HmY33ANDQXq
2pMnSll4127kOtrR4L9f2Qyus5A9WiUR6kDDi6nAte3N5PneDwE84mdhrsXu
reT5BzL1SY5kPXJ1pvUdLKwviN2Wv5aGUzLdTnL9LFRLutikvo4Gs5DsbtEP
LEwM7lG8TBzyu67szScWLmUzmxucaLj/MIglNcrCU/O2qa92puHn9NffUTQL
pyROxHYQV8e+E7z+m4UNA5OMz+tpQEl1sXszLFx2oHHfHBcaGNT4Ay0pNp6J
5PQcJ949KcbbPJeN0+7aRjquNOy0Phq7U46N9/VT+5luZH3RPF+WChs15G6Z
PyJe49fROqTGxqR/w5lr3Uk/ZWplbNNko/XLVSx/D7LfMuW/zNYh49/ZlfuT
ONavPktDl4xfevnLzk1kf0V3Jc9dwEafrD5rfk+a/P/b/GhgIRsb48QKDxMP
Wnu6HDJgo9aWJSPyXjRMTT41l1rExuQ14StKiJuocr9IIzYOmp4+qe9NQ2XE
6LtyYzaiaht1i3hjwlrdRhM2lgjO2MFmGroO27dcNWUj3y/jc8+Ijc9+fhZj
xkbf175/NvrQEHFbe/5cczY2NR11ek98qG3ybQaxVsXDSyFbaMj8Hvurhzg5
n/5HEXuKZntPEw8m6rju9aVB2mCF7n9eHuR6VdiPhktOJxz+u7/UKX1WHrHC
rpzWdGIBVq2nmj/pn3PzyucQ+zO+3rhEXNDm9iGKxPNQXFnUNIDsh+kFcRUk
XsaYnW89cYrpicAGsp6U93tqVwbSsCG44volst6PT65IvSTmnd3kto3kw+ZG
/1bPrTREvS3zECT5aksw2veWWC5cIiaf5HPTquRi7yAa6quuCvHps3FYuvPG
O+Lk8oOy9qQeUW/nPfcJpsHWreRkNKnX1MW44QFiqVr69E5Sz4yoJ/98Q2gY
fZ6isolB6isUZhKwjYaOuS4pNeps1H/ZYDdM3G5TGGGqysbbJ6QCtobS8FZP
ruuQEhtbjauPBYeR/Sf1SKJLho0eE7OufyV2nsMbfDSHjUOPXZ9uC6ch/7Gv
cZ4EGyc2/Z0Ii6BhucMI+4kQG9N1HORGiI+pSf5ZJMDGuaOnFkVGkvOgNMQ4
ZpqFC9LQN2o7ifdZp0T+OAvdrmX8Lzaa7LeMHSmWpH8+7u57P0Yc+Ddq7qFB
FkbYGvzZGUMDaFao3HnLwrTeNv34HTTMpLefvEH6s1pAIXdvHKnfk88egg0s
tH4RXD5NbNL34I5NDQufFd15uG8n+c4521vgU8XCQcPNY/t30TCx+s4dowss
lHK/4JkeT8MJ0dX3TTLJeaA9vkN4D6lHwwzHM5WF83+uzj5IXMHgnfZPJP29
/0djZgINf8Rzg8QiWRh6xWx+zl4a1JwKquudWDgel2YtnUR+P6df27Gahfux
x/0o8a/LUxb/A3LevYrPzN9Hfu/cWLrCmIXNM02jRftpKClqs7gowUKGi9Pd
kgM07NI1zvzdxES7N+cvGqaT/v5btXdRDROjfP/k1hEzv98p23CFiffDzwW/
zCD9MN/vbOgxJnoeoOX4Mmn4LCCk3hHCxLyaou1bjpDzwKN0/W4JJgooD+po
FJH3ZYR5ifFqK/z4Lirn5GUaSm2vdy7PtEC9o6u/Uy00PA456mz6whS1XnSJ
7nhO5nsuLnu60RSVRH0X0sTpNbkT4tWmKLJ/dwjdSvpf9y6TLjTF71Hln+k2
Goq3H47+4muK15zFh3idxCV6r4LGTHCxdPvb8Tc0FI71RUVqm+DyHLcXE99J
v7nbV1TrLMLu9E/3D/yg4eqa6o+DYoswJCm2Svon6ZflxvfncQ0xNyIvX3eE
5MsuxOfLPUMcdGjbtGGUvJ9u9dgGeRhissiqz+U0DcO8C6U2Rw3w/n6LGY8p
Gqq0hKviZPRxaaycaa0kD4rbBAtr1uvhpOPjYaYUD+ZIyvl5WOvh3fmxxXeJ
Cxp6Q8UN9JD1umvm3hweLN6ewr4oqIeW7Py2x3N50MJwbymr00UTPpnwTnke
ND0Suvp1ni7qZM0pG1HnAd/PXbs2Cc9HyQti6jpGPMgcURI14J+HMes7bM4T
f1xHLwGKgb3TRSEMYx5cj2lH3yEGlm6af0vLhAf3BLKbnv6Pgcw56KBuRuKx
US82P8xA/z1x8QqWPMi1zSuLUmJgnfPgKxFrHnxd3bb64FJtVJ++NJlBLDcz
eNfSWBtTrkRoCwMPBnePzXC1tXHt7MlwIeSB4615fDnC2vixXl5QwIYHtxyO
9fp3aaGknoPZ5EoecCZav0VHaKH/v9tHRtby4GWdmqqXmyYGBO1L37WOB8kJ
aYtHl2piYPuaJH4nMv5AZdK5eZoYdO5thLwzD0yyV1705WrgtpX8a5dt4IF+
6pcHq49oYFS2o3i2Gw/OS93PyW5Vx73qQxmGW3iw01s2L3qTGialX91XQ7yq
LXLuXxvi0bhd6MuDE8//eRUaqmHyA5FgFz8eaAXVbJDhU8O0rUarEgPI/Bp5
zXMuq2JmZbxgazAPnM/QT7SmVLB4mfT+sCiSry4f05O3lPFxxgT7J7H0+fNC
RqXKyOkY5oVHk/Vsu9XZlaOMdkF3QiJjiN+w3D3ClHHiiL9zdCyxU7foynnK
6DV4S3PXbrK+lNXylYVKqJG66X5KMg8aN2uv2ZypiPYvbHfP2s+DU8dlcqX2
KOJORSOzNOI8CXH7F9sUsf2KwKUDKeT+orlyO+wUMbn7SvbBNB542cbx+Yoq
4of5095HDpJ4RwvZjYcV8MLT0snjuWT+k7aL80/IY3hbTsb8oyR+M4sTdZny
uLg7UfYGsYmj3ouRPfL4aMDN4GkeD56KS57I8JLHj+NiXuMFJF+179t3q8uj
5vwddzccJ/W9f+LK+gtyeGK/bbx4KalvXty8d/fI9zR7eDzxJg8a9PxHppVk
MFWbWjFDvKA3zDVQUgZ3ivDl779F9tuyuowufhn07lE1Tr/NA52Fyg7t3+fi
gpiNwTm1PPDYO+m49N5cbCp/+PpcPQ9Q02bZz4C5yFU6V9f8iKxv5ev283XS
uOH35j3S3TzQ8FX4VT0lhT+qU9i5xJ8ju35GfpfCtMiyiTmveFDiOG8Hs1cK
az5x9szp4UF4XIIC76YUqnanJkj1knwnSdZJhkvhcFV5okQ/D3aH1QW1vJfE
uNCxJJFhHkRVLYzZ1iaBxe+yUvl4JB9f4pdb94hhq8st+cPEvntSJVWaxZC/
9W2Z/BjJ94cbj4VqxDD0rn6r/jgPihjC98QLxXBZ0VM51z/kvIjReF7uJoYf
nQUvlU/xYH6e1THZN6Jo+Djh6QahMXjZJ/vh9DcRbKwIlbyoMAZaqbHu2QbC
qDHrpp+uIvFVessyTWFM8pq8XUZckr4s47eMMFpLZPlUKI1B0zpTs8yJ2Xg/
ovL6dRVig+N/F7QQm3DW39UYg9pTruscw4hr4grbdcfgu0br2zc3hbDhYbLm
hOUYmFyeM5PoJYh1Pc9XpluNQe7yV9qezoJ487tCuAyTjDduJ48rBbFCprJO
n0Xur8VIXWNBLPbvW++1hMSXGfDVe5YgxgqYpTXAGPgmJv2LqpyFBjZDX5PW
jIHikb7l5iKz8MSDldWzPMcgOf6F8fYuflxaUWafTVwyUXzer4Uf3+WJDil4
EWteT/J8wI9agS9k9b3HoMqlPnTLdX68NNs1ztmHzB+6UaXmMD9WOwQyT/uP
Ad+KlNeFK/nx+auU+5Zh5Pmbb57Nv8+HU98aW7YljsGaoPBs7ZQZWLw5Jiz5
FMn3QOq7o0umwLG2K8uhkcTzSLW1wvwvsL0jLJ8MjAEalvavaB6Hq/oNW8/O
kPHTFiy+TvbxzMAdeUPGOHyddqmYIN/BCwZH126zGQdrax7F1eWC5/gam7/E
auyTs2y1uJAlUWp5yHYcNALfJBYpc4HLdNEsXzEOvqBdbi/BhbtH6zhfV43D
U8WOr31cDjja7s8PcRiHKOc7gqfucSDqkkxfsMs4lPRduXbNnQOlDWEvfhNr
HfDoDF/Pge7Oxw8yXMdh0Pu0j5EDB1gzOyvK3MYhuXC0qt6aAwIebxO+eIwD
GtQsnZnPgQLRCxrBm8eBr7bow8bvo9Cs+U/mN3Fy3fiSZe9H4Y+Fm3CGD7Fq
evCizlHY7C/CubSF+IeFGePuKOjWhz/47Ef8su/Y5sxR8Oj43+2d/sSV9fF7
k0Yh84tGxewA4uEXRhdiRuGXbEeebiCZLyBVYrbXKGjp62fU/OcruhbLnUZh
A6YmrNpK7DRhlGo7Cmlu/dt7/vPa6b/PrUahNtwiMCiIuMysUNVwFP4P3ozw
yQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{{1.2138647992632816`, 
      RGBColor[1, 0, 0]}}, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.680855304336458*^9, 3.680855846619293*^9, {3.680855877819531*^9, 
   3.680855885803811*^9}, {3.6808559985490026`*^9, 3.680856021351102*^9}, 
   3.680856220244144*^9, {3.680858623771412*^9, 3.680858639960702*^9}, 
   3.680858672851179*^9, 3.68085878546294*^9, {3.680858818577733*^9, 
   3.680858829339715*^9}, {3.6808588738933887`*^9, 3.6808588804679413`*^9}, {
   3.680858921214861*^9, 3.680858937691805*^9}, {3.680858969358975*^9, 
   3.680858975733376*^9}, {3.680859013792292*^9, 3.6808590306940193`*^9}, {
   3.680859356561607*^9, 3.680859361803726*^9}, 3.6808648089602957`*^9, 
   3.6808648460233173`*^9, {3.681123277927638*^9, 3.6811232935442343`*^9}, {
   3.681124829387413*^9, 3.681124862728868*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["1", 
  StyleBox[
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"funcphasedata", "[", "x", "]"}], ",", "x"}], "]"}], "/.", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"findres", "[", "1", "]"}]}]}],
   FontWeight->"Plain"]]], "Input",
 CellChangeTimes->{{3.680855414706579*^9, 3.680855420452979*^9}, {
  3.6808556868025217`*^9, 3.680855695073987*^9}, {3.680855753060021*^9, 
  3.6808557532672567`*^9}, {3.680855898526195*^9, 3.680855920416067*^9}, {
  3.680855967478841*^9, 3.680855968126485*^9}, {3.6808560356168947`*^9, 
  3.680856037032143*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], ":", 
  " ", "\<\"The line search decreased the step size to within tolerance \
specified by AccuracyGoal and PrecisionGoal but was unable to find a \
sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681124887779998*^9}],

Cell[BoxData["0.03837356439097371`"], "Output",
 CellChangeTimes->{3.680855724447871*^9, 3.6808557833661613`*^9, 
  3.680855950861974*^9, 3.680855998469925*^9, 3.6808594489815273`*^9, 
  3.680864947277627*^9, 3.681123327298113*^9, 3.6811249200207167`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1680, 991},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Linux x86 (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 102, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[707, 27, 7819, 152, 421, "Input"],
Cell[8529, 181, 45608, 747, 254, "Output"]
}, Open  ]],
Cell[54152, 931, 1161, 36, 137, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55350, 972, 202, 3, 67, "Section"],
Cell[55555, 977, 4146, 107, 321, "Input"],
Cell[59704, 1086, 518, 14, 77, "Input"],
Cell[60225, 1102, 2437, 69, 165, "Input"],
Cell[CellGroupData[{
Cell[62687, 1175, 102, 1, 32, "Input"],
Cell[62792, 1178, 977, 14, 32, "Output"]
}, Open  ]],
Cell[63784, 1195, 4554, 114, 365, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68375, 1314, 100, 1, 67, "Section"],
Cell[68478, 1317, 4560, 128, 342, "Input"],
Cell[73041, 1447, 884, 22, 77, "Input"],
Cell[73928, 1471, 3067, 69, 121, "Input"],
Cell[CellGroupData[{
Cell[77020, 1544, 153, 2, 32, "Input"],
Cell[77176, 1548, 1043, 17, 32, "Output"]
}, Open  ]],
Cell[78234, 1568, 1298, 36, 77, "Input"],
Cell[CellGroupData[{
Cell[79557, 1608, 4309, 109, 321, "Input"],
Cell[83869, 1719, 37299, 621, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121205, 2345, 149, 2, 32, "Input"],
Cell[121357, 2349, 573, 11, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[121979, 2366, 105, 1, 67, "Section"],
Cell[122087, 2369, 17778, 455, 994, "Input"],
Cell[CellGroupData[{
Cell[139890, 2828, 1709, 25, 32, "Input"],
Cell[141602, 2855, 712, 13, 23, "Print"],
Cell[142317, 2870, 37546, 630, 534, "Output"]
}, Open  ]],
Cell[179878, 3503, 859, 19, 32, "Input"],
Cell[CellGroupData[{
Cell[180762, 3526, 668, 15, 32, "Input"],
Cell[181433, 3543, 1504, 34, 234, "Output"]
}, Open  ]],
Cell[182952, 3580, 1595, 39, 55, "Input"],
Cell[CellGroupData[{
Cell[184572, 3623, 305, 6, 32, "Input"],
Cell[184880, 3631, 731, 13, 41, "Message"],
Cell[185614, 3646, 785, 14, 23, "Message"],
Cell[186402, 3662, 124, 2, 32, "Output"]
}, Open  ]],
Cell[186541, 3667, 94, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[186660, 3672, 1762, 39, 77, "Input"],
Cell[188425, 3713, 12964, 226, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201426, 3944, 591, 14, 65, "Input"],
Cell[202020, 3960, 696, 12, 41, "Message"],
Cell[202719, 3974, 255, 3, 32, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

