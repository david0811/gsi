(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     61866,       1265]
NotebookOptionsPosition[     61248,       1240]
NotebookOutlinePosition[     61609,       1256]
CellTagsIndexPosition[     61566,       1253]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"DEFINE", " ", "PARAMETERS"}], "*)"}]], "Input",
 CellChangeTimes->{{3.680342122404255*^9, 3.6803421267959337`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["m", "N"], "=", "940"}], ";", 
  RowBox[{"\[HBar]c", "=", "197.327"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"V0", "=", "55"}], ";", 
  RowBox[{"R", "=", "2"}], ";", 
  RowBox[{"a", "=", "0.05"}], ";", 
  RowBox[{"\[Mu]", "=", 
   RowBox[{
    FractionBox["8", "9"], " ", 
    SubscriptBox["m", "N"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rmax", "=", "5."}], ";", 
  RowBox[{"dr", "=", "0.01"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rlist", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "rmax", ",", "dr"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"len", "=", 
   RowBox[{"Length", "[", "rlist", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V", "[", "r_", "]"}], ":=", 
   FractionBox[
    RowBox[{"-", "V0"}], 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"r", "-", "R"}], "a"], "]"}]}]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Vmat", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"V", "[", "rlist", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"V", "[", "rlist", "]"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "rmax"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.679286728059107*^9, 3.679286751534897*^9}, {
   3.679286798295683*^9, 3.679286809263542*^9}, {3.679287253510089*^9, 
   3.679287322870791*^9}, 3.679289429930531*^9, {3.679289796355823*^9, 
   3.679289797938469*^9}, {3.679291047782339*^9, 3.679291048165627*^9}, {
   3.679291140911874*^9, 3.679291141375329*^9}, {3.6793008229741793`*^9, 
   3.679300823061451*^9}, {3.679301164043964*^9, 3.679301164138753*^9}, 
   3.679301319405847*^9, {3.679301744500462*^9, 3.67930174459568*^9}, {
   3.6793070233533278`*^9, 3.679307024200685*^9}, {3.6793071120422153`*^9, 
   3.679307112865924*^9}, {3.6793080233437357`*^9, 3.679308046871706*^9}, {
   3.679634080442708*^9, 3.6796340987636414`*^9}, {3.679634333800329*^9, 
   3.6796343349092484`*^9}, {3.679639176058004*^9, 3.679639188049914*^9}, {
   3.6798067461243887`*^9, 3.679806768795967*^9}, {3.680434658079822*^9, 
   3.680434663831517*^9}, {3.680436002091967*^9, 3.680436003243063*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd13lcjPsXB/D2ZZpqFmvd7GviJ8m15XsS2mSpq9uGrCUidEO2ouzkkiyl
JHITIQk9M8+0oCJEqO4N7Un73tQ0/TLfbzPD/ON1ND3zfM/7fM48jVy7zX6D
koKCQpuigsKPf396Bdim7h2QYFniH4R+rkOl9ZNhwTXLn0T+8vMb0vrK5R+v
uF/enyCta5f/+J8Hv/x+krRm5Mf4mDEe/3K9p9J6gltIetsE3i/Xp6X1jb7f
zo9J/eXz0qS1ieSV8cvnP5PWGW0/PuE5Evf2vQ7230+mtLaXfGCWtMb3ly2t
S/1/XPCltMb3m4N6SC25PZ/X0hrf/xtpjSFyUTep8XlktVXJjw94h4Skxud7
hzpIfTb9xwHeo3ZS4/PmoWZSS46Tn4eaSI3P/wHVkHr4j9sZ9hF9IzXux0dU
RmqPjT9en1DRT/3JR3mk/nG1AQn56NVP/SpAAlK3SxpSgO791L9CFEnqeZIL
/ouO/dTPf9FWUgf9uL3g/5DdT/0tQuNInSN5FaF2sXy/PyOK1JLjDviCdorl
+/8F6ZNacjm3r+hej7xHMTLqkT9PMTopkvcpRpnd8ucrRgVd8l4lKEkof94S
tKRT3q8EhbfLn78UHW2V9yxFPU24xpcrRSX18r5laEgNriV8wWVod6W8dxnK
Lcb1RMkBy9G3Qnn/crTnHa5fS/pXjiZlys9DBQpLwfV2ST8r0Mx4+fmoQDsu
4XqgpL+V6Eig/LxUouAN8v2uRMss5OenCp0YKt//KhRUKZabpyo07R+xnMc3
xHUTy3l8Q3q9PXIe39Dp0z1yHt9QoVKPnEc12u4skvOoRkdPdMt5VKM3p7vk
PL6jkc5COY/vSL+4Q24+v6Nwbrukni7xqEETS1rk5rUG/W9ak6T+JPGoQfo1
dXLzW4vmf6+W1JLL+deiALUKuXmuReHaXyW1pH3D6pBper7cfNcht8I3klpy
e+l16GhHhty816Nvd5IltYRjYz1q9ImV86hHeRHn5DwaUP56fzmPBmSU6ybn
0YBKE2bKeTSirNNMuflqRP63PollPo1oyvtQsWzeGtGRTQvEMq9G5GZS2iOb
v0b0zzyvHplfI2pLyRfJ5rEJtb4YI5J5NiHmdJtu2Xw2ofNzUZfMtwndnijs
lM1rE5pc4dUh825CaGdQm2x+mxFjybQWmX8z+v2qW6NsnptROVTWyuahGe2M
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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 5.}, {-55., 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6790525019311647`*^9, 3.679052566523169*^9, 3.679196433941718*^9, {
   3.679197277655931*^9, 3.679197294275297*^9}, 3.679203964377475*^9, {
   3.679211502047686*^9, 3.679211535666667*^9}, 3.679211579918518*^9, 
   3.6792116311039762`*^9, 3.67921462355632*^9, 3.6792214221859913`*^9, {
   3.679283487206999*^9, 3.6792835073757553`*^9}, 3.6792846970975523`*^9, 
   3.6792868319626226`*^9, 3.679287023698317*^9, 3.6792873635378437`*^9, 
   3.679287540947575*^9, 3.679287851949174*^9, 3.6792894968350487`*^9, 
   3.679289801327577*^9, 3.67928988339225*^9, {3.679290586852947*^9, 
   3.6792906106198874`*^9}, 3.679291052837352*^9, 3.679291144824926*^9, 
   3.679300829791338*^9, 3.679301167845834*^9, 3.679301321689472*^9, 
   3.679301749581284*^9, {3.679301879491131*^9, 3.6793019059515667`*^9}, 
   3.679307028443761*^9, 3.679307118178897*^9, 3.679307330661931*^9, {
   3.679308027838118*^9, 3.6793080494175997`*^9}, 3.6793094652195168`*^9, 
   3.679312432920207*^9, 3.6793125177770147`*^9, 3.679628067813961*^9, {
   3.679634085969236*^9, 3.679634100282443*^9}, 3.679634336318362*^9, 
   3.679636276044846*^9, 3.679636365377068*^9, 3.679637324382835*^9, {
   3.679639179099791*^9, 3.6796391886563473`*^9}, 3.6796392420372267`*^9, 
   3.679639953216379*^9, 3.679645643238593*^9, 3.679648137146015*^9, 
   3.679648558755623*^9, 3.679649582465561*^9, 3.679649892552554*^9, 
   3.6796565493739023`*^9, 3.679800549882975*^9, 3.679805684060231*^9, {
   3.6798067479753227`*^9, 3.679806769222741*^9}, 3.679806880696198*^9, 
   3.6798132296287527`*^9, 3.679826188747058*^9, 3.679827829523137*^9, 
   3.680342129705721*^9, 3.680406745480188*^9, 3.680429970028791*^9, 
   3.680432647388575*^9, 3.680434712099749*^9, 3.680436047621894*^9, 
   3.680493697199273*^9, 3.680496999957335*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"DEFINE", " ", "REQUIRED", " ", "FUNCTIONS"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"one", "[", 
      RowBox[{"n_", ",", "d_"}], "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{
       RowBox[{"1", "+", 
        RowBox[{"0", 
         RowBox[{"Range", "[", 
          RowBox[{"n", "-", 
           RowBox[{"Abs", "[", "d", "]"}]}], "]"}]}]}], ",", "d"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0", "=", 
     RowBox[{"Vmat", "+", 
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox["\[HBar]c", "2"]}], 
        RowBox[{"2", " ", "\[Mu]"}]], " ", 
       FractionBox["1", 
        SuperscriptBox["dr", "2"]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"one", "[", 
          RowBox[{"len", ",", 
           RowBox[{"-", "1"}]}], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"one", "[", 
           RowBox[{"len", ",", "0"}], "]"}]}], "+", 
         RowBox[{"one", "[", 
          RowBox[{"len", ",", "1"}], "]"}]}], ")"}]}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "En_", "]"}], ":=", 
     RowBox[{"Sqrt", "[", 
      FractionBox[
       RowBox[{"2", "\[Mu]", " ", "En"}], 
       SuperscriptBox["\[HBar]c", "2"]], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"En_", ",", "\[Delta]_"}], "]"}], ":=", 
     RowBox[{"rmax", " ", 
      RowBox[{"Cot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "En", "]"}], " ", "rmax"}], "+", "\[Delta]"}], 
       "]"}], " ", 
      RowBox[{"k", "[", "En", "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Hnew", "[", 
     RowBox[{"En_", ",", "\[Delta]_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"H", "=", "H0"}], ";", 
      RowBox[{
       RowBox[{"H", "[", 
        RowBox[{"[", 
         RowBox[{"len", ",", "len"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Vmat", "[", 
         RowBox[{"[", 
          RowBox[{"len", ",", "len"}], "]"}], "]"}], "+", 
        RowBox[{
         FractionBox[
          RowBox[{"-", 
           SuperscriptBox["\[HBar]c", "2"]}], 
          RowBox[{"2", " ", "\[Mu]"}]], " ", 
         FractionBox["1", 
          SuperscriptBox["dr", "2"]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"dr", " ", 
            FractionBox[
             RowBox[{"B", "[", 
              RowBox[{"En", ",", "\[Delta]"}], "]"}], "rmax"]}], "-", "1"}], 
          ")"}]}]}]}], ";", "H"}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"eigenv", "[", 
      RowBox[{"{", 
       RowBox[{"En_", ",", "i_", ",", "\[Delta]_"}], "}"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eval", ",", "evec"}], "}"}], "=", 
        RowBox[{"Transpose", "@", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Eigensystem", "[", 
             RowBox[{"Hnew", "[", 
              RowBox[{"En", ",", "\[Delta]"}], "]"}], "]"}], "]"}], ",", 
           "First"}], "]"}]}]}], ";", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"eval", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "\[Delta]"}], "}"}]}], ")"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{"findnd", "[", "En_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"phase", "=", 
         RowBox[{"List", "[", "]"}]}], ",", 
        RowBox[{"n", "=", "1"}]}], "}"}], ",", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"eigenv", "[", 
                RowBox[{"{", 
                 RowBox[{"En", ",", "n", ",", "\[Delta]"}], "}"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[Delta]", ",", "0.", ",", "\[Pi]", ",", "0.1"}], 
               "}"}]}], "]"}], "]"}], "<", "En"}], ",", 
          RowBox[{
           RowBox[{"n", "++"}], ";"}]}], "]"}], ";", 
        RowBox[{"phase", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"eigenv", "[", 
               RowBox[{"{", 
                RowBox[{"En", ",", "n", ",", "\[Delta]"}], "}"}], "]"}], "[", 
              
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[Delta]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Delta]", ",", "0", ",", "\[Pi]", ",", "0.01"}], 
            "}"}]}], "]"}]}], ";", 
        RowBox[{"\[Delta]", "=", 
         RowBox[{"phase", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"phase", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"Nearest", "[", 
                 RowBox[{
                  RowBox[{"phase", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "En"}], 
                 "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}], 
          "]"}]}], ";", 
        RowBox[{"{", 
         RowBox[{"n", ",", "\[Delta]"}], "}"}]}], ")"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"wave", "[", 
      RowBox[{"En_", ",", "r_", ",", "\[Delta]_"}], "]"}], ":=", 
     RowBox[{
      FractionBox["1", "r"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "En", "]"}], " ", "r"}], "+", "\[Delta]"}], 
       "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"const", "[", "i_", "]"}], ":=", 
     FractionBox[
      RowBox[{"evec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], 
      RowBox[{"wave", "[", 
       RowBox[{
        RowBox[{"eval", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "rmax", ",", "\[Delta]"}], 
       "]"}]]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"wvplot", "[", "En_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{
          RowBox[{"findnd", "[", "En", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"\[Delta]", "=", 
         RowBox[{
          RowBox[{"findnd", "[", "En", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eval", ",", "evec"}], "}"}], "=", 
        RowBox[{"Transpose", "@", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Eigensystem", "[", 
             RowBox[{"Hnew", "[", 
              RowBox[{"En", ",", "\[Delta]"}], "]"}], "]"}], "]"}], ",", 
           "First"}], "]"}]}]}], ";", 
       RowBox[{"Print", "[", 
        RowBox[{"{", 
         RowBox[{"En", ",", 
          RowBox[{"eval", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", "n", ",", "\[Delta]"}], "}"}],
         "]"}], ";", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"rlist", ",", 
              RowBox[{
              "evec", "\[LeftDoubleBracket]", "n", 
               "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", 
              RowBox[{
               RowBox[{"const", "[", "n", "]"}], " ", 
               RowBox[{"wave", "[", 
                RowBox[{
                 RowBox[{"eval", "[", 
                  RowBox[{"[", "n", "]"}], "]"}], ",", 
                 RowBox[{"Range", "[", 
                  RowBox[{"rmax", ",", "rmaxx", ",", "dr"}], "]"}], ",", 
                 "\[Delta]"}], "]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.6790391017469873`*^9, {3.6790392440208473`*^9, 3.679039313462309*^9}, {
   3.679039353022828*^9, 3.6790393624544992`*^9}, {3.679039514753272*^9, 
   3.67903951659298*^9}, {3.679039723124398*^9, 3.67903975046845*^9}, {
   3.67921405591895*^9, 3.6792140664227943`*^9}, {3.6792146406725883`*^9, 
   3.679214647440013*^9}, {3.679286881961419*^9, 3.6792868921054163`*^9}, {
   3.679287380328823*^9, 3.6792873838310957`*^9}, {3.6792894539741707`*^9, 
   3.679289459285552*^9}, {3.6793094743259706`*^9, 3.6793094836301937`*^9}, {
   3.67963411316535*^9, 3.679634126807611*^9}, {3.679636756756248*^9, 
   3.6796367614119797`*^9}, {3.679637096065898*^9, 3.679637103161354*^9}, {
   3.6796372385233088`*^9, 3.67963724314743*^9}, {3.679648142822823*^9, 
   3.679648224095704*^9}, {3.679648352945882*^9, 3.679648403954505*^9}, {
   3.679648500556837*^9, 3.6796485161336737`*^9}, {3.6796485800776052`*^9, 
   3.6796486098854227`*^9}, {3.679649553715879*^9, 3.679649554851647*^9}, {
   3.6796496122126904`*^9, 3.679649613588541*^9}, {3.6796498557124367`*^9, 
   3.679649886472546*^9}, {3.679800647626824*^9, 3.679800647850284*^9}, {
   3.679803356368227*^9, 3.679803359919141*^9}, {3.6798067741408157`*^9, 
   3.679806785924258*^9}, {3.6798068878218946`*^9, 3.679806891229542*^9}, {
   3.680342163212922*^9, 3.680342264023122*^9}, {3.68034392230639*^9, 
   3.680343958538171*^9}, {3.680344015171732*^9, 3.680344018556237*^9}, {
   3.680344714640306*^9, 3.680344720463141*^9}, 3.680344772065028*^9, 
   3.680344892895752*^9, {3.680345066533242*^9, 3.680345067308298*^9}, {
   3.680349171437244*^9, 3.6803491850054817`*^9}, {3.680349230294263*^9, 
   3.68034925751022*^9}, {3.680349408985045*^9, 3.680349418369186*^9}, {
   3.6803495029066553`*^9, 3.680349543075268*^9}, {3.680349609852354*^9, 
   3.6803496268124857`*^9}, {3.6803499053370647`*^9, 3.680350001081997*^9}, {
   3.6803501451240664`*^9, 3.680350147452056*^9}, {3.680350277398638*^9, 
   3.680350288598242*^9}, 3.680408666670389*^9, 3.680408850800694*^9, 
   3.680408915409255*^9, 3.680409084227754*^9, 3.680409372438624*^9, 
   3.6804097015624447`*^9, {3.680413416443968*^9, 3.68041341659555*^9}, {
   3.680429922672749*^9, 3.680429960953082*^9}, {3.680430058083027*^9, 
   3.680430063514326*^9}, {3.680435928306842*^9, 3.680435933714641*^9}, {
   3.6804361092214317`*^9, 3.680436117509407*^9}, {3.680436178078998*^9, 
   3.680436179206791*^9}, {3.680436214030835*^9, 3.680436245391569*^9}, {
   3.680436342033235*^9, 3.680436357633156*^9}, 3.680493759410903*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"findnd1", "[", "En_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"phase", "=", 
        RowBox[{"List", "[", "]"}]}], ",", 
       RowBox[{"n", "=", "1"}]}], "}"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"eigenv", "[", 
               RowBox[{"{", 
                RowBox[{"En", ",", "n", ",", "\[Delta]"}], "}"}], "]"}], "[", 
              
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Delta]", ",", "0.", ",", "\[Pi]", ",", "0.1"}], 
              "}"}]}], "]"}], "]"}], "<", "En"}], ",", 
         RowBox[{
          RowBox[{"n", "++"}], ";"}]}], "]"}], ";", 
       RowBox[{"\[Delta]", "=", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"eigenv", "[", 
            RowBox[{"{", 
             RowBox[{"En", ",", "n", ",", "x"}], "}"}], "]"}], "\[Equal]", 
           "En"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "Pi"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"n", ",", "\[Delta]"}], "}"}]}], ")"}]}], "]"}]}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"PLOT", " ", "with", " ", 
    RowBox[{"{", 
     RowBox[{
     "ENERGY", ",", " ", "EIGENVALUE", ",", " ", "n", ",", " ", "PHASE"}], 
     "}"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"rmaxx", "=", "20."}], ";"}], "\n", 
   RowBox[{
    RowBox[{"wvplot", "[", "25", "]"}], "//", "Timing"}], "\n", 
   RowBox[{"{", 
    RowBox[{"25", ",", "25.000407676085132`", ",", "3", ",", "1.43`"}], "}"}],
    "\n", 
   RowBox[{"{", 
    RowBox[{"60.744`", ",", 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.006944444444444445], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
OKM9ekLQolryg428r3/r8pfUkh9s7Oj796HJ0lryg413f70tzN1qyQ82CtLV
Osokrxk/2PDf6COMkbxm/GCj9F5w8k3J8YwfbCw2bROWuNaSH2yc4m9IvLa4
lvxg4/Bfu85wl1omn1ewob5vUUXBglrygw37Sf5GRnNryQ82YpSO3DOeVUvP
H2zUZHWblE0nHsFsvDqvHp44mXiEsbHvyB27rgnEI5qNRYdNvuyzIR4JbGC3
d7+/AuKRIjn/Ivcvh82IRyYbck7W4z6yiYeYDQ/jhctKtYhHERv/rSh8cnQY
8Shnw2Gm8qxFCsSjho1b94wt1/2R+sFG3fJNQ75/lvrBRvn43rjelzXM89pu
Ntoij7IjH0j9kJx/6fC4De1SP9h4f3wj3p6U+sFGc0nBj4f7pX6wkTt2xOyZ
26R+sDE/d1S3TanUDzYOeRavq06X+sHGHk/vhJQoqR9sLJjc+vijTw09L7Gh
1LxX2OEm9YMN11FrLCbOkvrBxmmbdwlm42sYHh/Y+Fbs8CPPvIb8kMzHnKBJ
8Zo15AcbUxzsDL/2qyE/OHiQsN7tzWdar+Q5+MlO2u/VSevVQA7mVH39tvoi
rVdKHDSkdr/6sJ/WKxUO+t9xdpOpqSY/OHg36jO7ML2a/ODAZbG54sEN1eQH
B3f1dD+4r6gmPzjoacmqL5pRTX5wwG7/OHiJqJqenznQC7OX3apdTX5w0Ajh
yni5avKDgwyle8PfvZLmBwePlb/+et4uzQ8OdqTu6+N3QJofHMwvOKucUi7N
Dw7Od0/XHBkvzQ8Otoe3yQevkeYHB1oWuuenzaoiPzhwda5cvENYRX5w8H7J
86btalXkBwc57FuHIclDxg8OvDaXxK57UEl+cLDkdMVv/rFK8oMDhdsxZpnV
leSHZLyODhmSFF9JfnDw5OboRp1VlOcpHDQpqCrMmkZ5nsnBL/lzFromlOdi
DpS80zmpCpTnRRxcODjxo6C9gvzgYMjs2KDMrAryg4Pk+Kkf+U4V5AcHsnW3
UjUGV5AfHExymb7O/nw5+cGB+obAo22J5eQHB4te3v4v2a6c/JDMD9eCjRW9
ZeQHB6dllzv2O1BGfnAwmrPU45h/GfnBQdERo79XzMrID8nxsv8tHfW0lPzg
oPfc2JPfi0vJDw4s+9iFqc0tJT8k9yu75nyOQin5wUHzTd8+fkdLyA8ODDbr
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
Q+KJqcF81yTywwwvDr7QWt++mfwwg7fcsuRRUzdT/7kZQn/M3ZPbkkh+mGGJ
y+OsBF4i+WGGtDNxqsOqE8gPM6iv+DJ6jGoC+WGG/mOVv/VNiic/zPD606mp
wZL3u8z+oBkqxz7nZK6LIz/MUOerk+L8MJb8MEO50bngK06xDI8PZmi6+vJp
77EY8sMMqc7f258JYsgPM6w51jE+tVr6/twca7oOcD8pR5Mf5ng2qlNpfL9N
5Ie5JP/unjJ5Hkl+mEMh2Mx7x6kI8sMcqxOdf9ypDSc/zBFRucq3KS6M/DBH
ncfOM9YrN5If5hCKK3+HIJT8MEeqUkL/CL0N5Ic5xr537nT4HUx+mEPmUHzk
u44g8sMc3MOHr6/dH0h+mCPKd//NC+IA8sMcjhp9gtQC/MkPc9QGnCud5+RH
fpgjd/j0DWqLfMgPc0zwag1IGb6O/DCH/7LMb8qX15Af5qi8332+NcmL/DBH
8R/LxspJnq1e/4BIrm9etNOpPyvJD3PsXbbSa3zLcvLDHFt+iK0Fb1zJD3Oc
1Q8dcsnDhfwwx7rJx5LWP5xHfpjjw4KNYe67ZpEf5kj/fcfDf9sU8kMynpxz
3gkzRpMf5lAbEm+zVUOX/DDH4fPz767y5VJ9V8JvwCfZouZxVN81x6+xKn37
OU2j+q45TA7/KfNgzab6rjmcD4xttCiaT/Vdc6h2T7h7eMgi2j+XjCf7Zc/X
mKVU3zWH9gO9ALcfy6m+aw7fQYXzQvnutowf5riv08wbs8qT6rvmqKhdxcor
9qL6rjkWbX7oEnZpDdV3zWG/c+uwe3/WUn3XHJcgLGzg+VB91xyvClMNvXl+
tH9ujhTRqbP1k/1t//F4LpkfWre/yS8OoPquOdoMN26M9Amk/XNzuAyw0esf
G0T1XXM8HVfTWiIOpvquOc4khcG6LoTquxYYM+9e2rl9G6i+a4Ez+euL558O
pfquBdpTs1ZfvrHRlvHDAiyZzTL8J2G2jB8WiHatCQ54F071XQuMWBj4LONH
BNV3LeA59/WGKLkoqu9awMAze9kYxU1U37XA9P433jwYEE31XQvMtrdQ/5MW
TfvnFqgJ83EJU4qh+q4Fnty7scwpO4bquxb4k+zwZKNyLMPDzgJKf+KLv+bE
Un3XAosXDZnephxH9V0LXI9x39ORHUf1XQssV5bbOnpoPNV3LfCfZuyPh+nx
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
yvOLVmiNHM5y4VCet1thMy/X+cCvHPLDCjGFxl0V13PIDytk/ZihMLQxh/yw
gspWx74DY3PIDyt8yZ2mk+mSQ35YwWerRkElL4f8sILSqAVHbfvmkB9WGDRy
4sP1HdLnKyvMSDo1xaJZ+nzFxwrjVVMjYrOZ/ow+fNyaZGO9zFn6vMVHrPMd
z1um2cz99edjB2e59dPfWeQPHwo7XX8lXsli7leRjzPGJzVOVGVRPwofwoOv
3xQGZjH3P4wPrRWRdwdMyaL+FD5GN66fqq6WxYyHOh/LLjyxSriUSb7xMSX7
uZ+WDz1/6vDRnzPc+ONg6edL+JjDvW2p2JTB9H+w+Jjld9nDxyGDfOSjR7Zp
h1Z3OtMPYsTH07umX4cnppOffPw43c1Zyk5nxtOcj5dDvU1+HEkjX/loZL/+
+soljekX4fMRP2xJ4ojPqdT/woebBtrvpaUy4z2CDxnZmpud3FTyWXK+0B/i
aUdTmPEfwwffZajKcOcU8puPabd7Fk99m8zwAB95e54GdcUlU78MH6YOpn4f
NJMZHlP4eFKs6rZ+RxL5z4f+5Mdz3SbT+5MZfFgGFXqevrOZ1gM+Uk713dmw
bjPDw4mP9aoFsxRkNtP6wMcSxznLX+YkMjzm86Gts7OfI5c+X7SQj5+7xZ4j
9ycwPBbxsXEtr2abfQKtH3yscu960dgRz/Bw4yNN19ZtvHc89ePwsUXpmnDl
zziGhzsfH8y5Yt2UOOrP4YPrUb4rQDOO4bGajztGa495NMTSesNHyO01H7+O
pM9L+fBxBMPDLU7FUP8OH33kPMQK82IYHoGS+fD3VHBGZzStR3wcPvbD5fj6
aIZHKB/+R/9+tO/ZROsTH30v9DUMGbKJ4REpOX5VRNtQ4yhar/jIPnxnur5t
JMMjlg+YLbRpcI6g9Utyftnrg3etD2d4bJaMx7xCh0nxYbSe8dG+f2TQyuKN
DI80yfjozR+ktjOU+uckv9+yKc/j1AaGRzYfB0P6Fs6/G0L9dHy4NxwufPMu
mOFRIPFD0KUrkgum9Y+P1M7XTTz1IIZHKR+DVjpeeWYWSOshH02zFyksmxDA
8Kjio81F5VHlHH9aHyXzy0um4z8PP4ZHHR9XrnX38N/70HrJx4GJT7L3qaxn
eDTyka/8KFV2zFpaPyXnrwx4obdsDcNjJx8BFwK3aMd7Ub+exFfbLSf6bvVk
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
TCr6aull+z9pPy0M
          "]]}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->{624., Automatic},
      Method->{},
      PlotRange->{{0, 20.}, {-0.05964823113310547, 0.07319962209524865}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.680350672306913*^9, 3.6803506739873657`*^9}, {
   3.68040677739102*^9, 3.68040679675951*^9}, 3.680499590074058*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"findnd", "[", "x", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "10", ",", "100", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.68040709501894*^9, 3.6804071013308887`*^9}, {
  3.680407213421085*^9, 3.6804072273245363`*^9}, {3.6804091220988283`*^9, 
  3.680409131794722*^9}, {3.680409360421405*^9, 3.680409368045548*^9}, {
  3.6804182957237997`*^9, 3.680418304803405*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.0055000000000000005`],
     AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{98., 0.71}, {98., 0.71}}, {{99., 0.71}, {99., 0.71}}, {{100., 
      0.71}, {100., 0.71}}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[CompressedData["
1:eJxdlT1MU1EcxW9064wrxsQYNMao+K2FPwIWv4AWEAYmE3W0rLrchRlXXXVm
Znypq87MLFLaAuVbnbzv8e8x59ykaX795bzzeu+79114/b725mwIYSF9zvjn
dFy0odL613r573CP1/qX29W1X86XbGLjQ99q5Q+Y/YB9q5fTFX6D2V+x/Oql
9RMw+6s2WIwTMPtrttI4GlhcOQazv27nVivpDo/B7G/YUn579SMw+5t2nK7e
ODoEsx+0j315wSGY/S07/T4Es79txe2tHoDZ3/H/fwBmf9eK6d/YB7O/5/Oz
D2Z/39d3H8z+gXWq+S97YPYP7cvnfOyB2T/y52MPzL7s89sFsx+ynz/y0QWz
H/b574LZm9WKH7pg8tHscl4/0AVzfsTXZxfM+REr4ou7YM4/tmJ6S7tgzvd4
R7iXH7V3b/OxA+b8qD/fO2DOj9n3fPkb22DOj/nzvw3m/Lidz7F/G8z5cV+f
DpjzT3x9OmDOi4/iQ8XXpwPmfMXPjzaY8xPsE3N+woq/t9wGc/6p7782mPPi
o/jwzPdnC8x58VF8eG6fiv3bAnNefBQfXvj+boE5Lz6KDy99/2+BOS8+ig+T
kp+U/KSfH1tgzk+xT8z5KT9ftsCcn2afmLyJN/Fx2s+nJph8Jj4TH6rsE3O/
eBMfq/7+bIK5X3wmPtTYJ+Z+8SY+1vz8bIK5X3wmPsywT8z94k18nJHnQ3wm
+Ux8mLXT7yaY+8Wb+Djr5/8mmPvFZ+LDHPvE3C/exEfxUXw25++fTTD3v2Kf
mPvFm/goPorPxGfiw7z0z0v/vL8fN8HcLz6Kz8Rn4sMC+8TcL97++39+VnJE

      "],
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.0055000000000000005`],
     AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxd0z1MU1EUB/ATx851hZgQUoghQkFAKfzLVwtooQUEApOJOlpXWe7CjCus
MHdmfCmrzswsoFLls3xN9r73Pyb33KR5+eX/zu0979777P3nyocnIrLe+vln
Mjowmjraq+YexxJ3onj8NV0rPNAZ7FdzrTfu6W74t1NHd/RzZOOh7sF2vZnZ
2L6lX+BprdCaUd2LL366apPuw23r7Xrzhs5iM+0L1P1InuoBxNPVrumX/H/1
IOLlH1/RQ1yPepj9ql+hUT5o2zq7pF9jd8cP9Qi/hzrH9V7Qo/jx3Q/1GNev
Bip++jLtgC5fntE8z37OmecRxxu0jCNebkrzccTTHfxlPoFPH/2g3QS/t+aT
OPTt1/8wn+T3p2UK7X66Ns2n2E+D+TT7oZ2xFNiP5gWejzPmxdCuiPjvtjSf
4f5pbiyz3M/fzI1lDt/i/dXcWN5wvzU3lrfc/1/MjaVk8hLPh+bzod08z4vm
C6Fh7BZ4nn4mjoylHBrGrsz7qfXGUgkNY1fh+dR6Y1kMDWO3GPYfmVyWkDy1
3tgt8fyfst5YlkPD2BlHy7w/Wv8uNIydcWQsK6Z+hfdR640jY1kNDWO3yvt8
wnpjWfvvf5pmt+0=
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{10, 0.71},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{10, 100}, {0.71, 1.6400000000000001`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6804071832092323`*^9, 3.6804073022125473`*^9, 
  3.6804092796784163`*^9, 3.680419096941976*^9}]
}, Open  ]]
},
WindowSize->{839, 985},
WindowMargins->{{Automatic, -9}, {Automatic, -3}},
CellContext->Notebook,
FrontEndVersion->"10.3 for Linux x86 (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 156, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[739, 27, 2213, 54, 276, "Input"],
Cell[2955, 83, 9496, 163, 231, "Output"]
}, Open  ]],
Cell[12466, 249, 11112, 288, 793, "Input"],
Cell[23581, 539, 1401, 42, 99, "Input"],
Cell[24985, 583, 31101, 530, 532, "Input"],
Cell[CellGroupData[{
Cell[56111, 1117, 515, 11, 32, "Input"],
Cell[56629, 1130, 4603, 107, 240, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
